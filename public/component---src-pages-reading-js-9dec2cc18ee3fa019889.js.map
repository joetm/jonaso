{"version":3,"sources":["webpack:///component---src-pages-reading-js-9dec2cc18ee3fa019889.js","webpack:///./~/readable-stream/lib/_stream_duplex.js","webpack:///./~/core-util-is/lib/util.js","webpack:///./~/isomorphic-fetch/fetch-npm-browserify.js","webpack:///./~/whatwg-fetch/fetch.js","webpack:///./~/process-nextick-args/index.js","webpack:///./~/buffer/index.js","webpack:///./~/events/events.js","webpack:///./~/readable-stream/lib/_stream_writable.js","webpack:///./~/readable-stream/readable-browser.js","webpack:///./~/safe-buffer/index.js","webpack:///./~/readable-stream/lib/_stream_readable.js","webpack:///./~/readable-stream/lib/_stream_transform.js","webpack:///./~/readable-stream/lib/internal/streams/destroy.js","webpack:///./~/readable-stream/lib/internal/streams/stream-browser.js","webpack:///./~/inherits/inherits_browser.js","webpack:///./src/pages/reading.js","webpack:///./~/base64-js/index.js","webpack:///./~/ieee754/index.js","webpack:///./~/papaparse/papaparse.js","webpack:///./~/readable-stream/duplex-browser.js","webpack:///./~/readable-stream/lib/_stream_passthrough.js","webpack:///./~/readable-stream/lib/internal/streams/BufferList.js","webpack:///./~/readable-stream/passthrough.js","webpack:///./~/readable-stream/transform.js","webpack:///./~/readable-stream/writable-browser.js","webpack:///./~/setimmediate/setImmediate.js","webpack:///./~/stream-browserify/index.js","webpack:///./~/timers-browserify/main.js","webpack:///./~/util-deprecate/browser.js","webpack:///./~/string_decoder/index.js"],"names":["webpackJsonp","71","module","exports","__webpack_require__","Duplex","options","this","Readable","call","Writable","readable","writable","allowHalfOpen","once","onend","_writableState","ended","processNextTick","onEndNT","self","end","objectKeys","Object","keys","obj","key","push","util","inherits","prototype","v","length","method","defineProperty","get","undefined","_readableState","destroyed","set","value","_destroy","err","cb","1063","95","Buffer","isArray","arg","Array","objectToString","isBoolean","isNull","isNullOrUndefined","isNumber","isString","isSymbol","isUndefined","isRegExp","re","isObject","isDate","d","isError","e","Error","isFunction","isPrimitive","o","toString","isBuffer","96","fetch","bind","112","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","iteratorFor","items","iterator","next","shift","done","support","iterable","Symbol","Headers","headers","map","forEach","append","header","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","Uint8Array","chars","i","fromCharCode","join","bufferClone","slice","byteLength","buffer","Body","_initBody","_bodyInit","_bodyText","Blob","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","arrayBuffer","isDataView","_bodyArrayBuffer","ArrayBuffer","isArrayBufferView","type","rejected","then","text","decode","json","JSON","parse","normalizeMethod","upcased","toUpperCase","methods","indexOf","Request","input","url","credentials","mode","referrer","form","trim","split","bytes","replace","decodeURIComponent","parseHeaders","rawHeaders","line","parts","Response","bodyInit","status","ok","statusText","viewClasses","DataView","isView","oldValue","has","hasOwnProperty","callback","thisArg","values","entries","clone","response","redirectStatuses","redirect","RangeError","location","init","request","xhr","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill","156","process","nextTick","fn","arg1","arg2","arg3","args","len","arguments","apply","version","173","global","typedArraySupport","arr","__proto__","foo","subarray","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","encodingOrOffset","allocUnsafe","from","fromArrayBuffer","fromString","fromObject","assertSize","size","alloc","fill","encoding","checked","string","isEncoding","actual","write","fromArrayLike","array","byteOffset","copy","isnan","data","SlowBuffer","loweredCase","utf8ToBytes","base64ToBytes","slowToString","start","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","n","m","bidirectionalIndexOf","val","dir","isNaN","arrayIndexOf","lastIndexOf","read","indexSize","readUInt16BE","arrLength","valLength","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","base64","fromByteArray","Math","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","ret","out","toHex","checkOffset","ext","checkInt","max","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","str","stringtrim","INVALID_BASE64_RE","units","Infinity","leadSurrogate","charCodeAt","byteArray","c","hi","lo","toByteArray","src","dst","INSPECT_MAX_BYTES","poolSize","_augment","species","configurable","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","equals","inspect","match","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","code","194","EventEmitter","_events","_maxListeners","defaultMaxListeners","setMaxListeners","emit","er","handler","listeners","context","addListener","listener","newListener","warned","console","trace","on","g","removeListener","fired","position","splice","removeAllListeners","listenerCount","evlistener","emitter","244","setImmediate","CorkedRequest","state","_this","entry","finish","onCorkedFinish","_uint8ArrayToBuffer","chunk","_isUint8Array","OurUint8Array","nop","WritableState","stream","objectMode","writableObjectMode","hwm","highWaterMark","defaultHwm","finalCalled","needDrain","ending","finished","noDecode","decodeStrings","defaultEncoding","writing","corked","sync","bufferProcessing","onwrite","writecb","writelen","bufferedRequest","lastBufferedRequest","pendingcb","prefinished","errorEmitted","bufferedRequestCount","corkedRequestsFree","realHasInstance","_write","writev","_writev","destroy","final","_final","Stream","writeAfterEnd","validChunk","valid","decodeChunk","writeOrBuffer","isBuf","newChunk","last","doWrite","onwriteError","finishMaybe","onwriteStateUpdate","needFinish","clearBuffer","asyncWrite","afterWrite","onwriteDrain","l","holder","count","allBuffers","callFinal","prefinish","need","endWritable","corkReq","browser","internalUtil","deprecate","destroyImpl","getBuffer","current","_","hasInstance","Function","object","pipe","cork","uncork","setDefaultEncoding","_undestroy","undestroy","245","Transform","PassThrough","246","copyProps","SafeBuffer","407","prependListener","event","unshift","ReadableState","readableObjectMode","BufferList","pipes","pipesCount","flowing","endEmitted","reading","needReadable","emittedReadable","readableListening","resumeScheduled","awaitDrain","readingMore","decoder","StringDecoder","_read","readableAddChunk","addToFront","skipChunkCheck","onEofChunk","chunkInvalid","getPrototypeOf","addChunk","maybeReadMore","needMoreData","emitReadable","computeNewHighWaterMark","MAX_HWM","howMuchToRead","head","debug","emitReadable_","flow","maybeReadMore_","pipeOnDrain","EElistenerCount","nReadingNextTick","resume","resume_","fromList","clear","fromListPartial","hasStrings","copyFromBufferString","copyFromBuffer","p","nb","tail","endReadable","endReadableNT","xs","debugUtil","debuglog","kProxyEvents","isPaused","setEncoding","enc","nOrig","doRead","dest","pipeOpts","onunpipe","unpipeInfo","hasUnpiped","cleanup","onclose","onfinish","ondrain","unpipe","ondata","cleanedUp","increasedAwaitDrain","pause","doEnd","stdout","stderr","endFn","dests","index","ev","wrap","paused","_fromList","408","TransformState","afterTransform","needTransform","transforming","writechunk","writeencoding","ts","_transformState","rs","transform","_transform","flush","_flush","ws","err2","409","readableDestroyed","writableDestroyed","emitErrorNT","410","80","create","ctor","superCtor","super_","constructor","enumerable","TempCtor","518","_interopRequireDefault","__esModule","default","_classCallCheck","instance","Constructor","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","_react","_react2","_gatsbyLink","_semanticUiReact","_common","_papaparse","_papaparse2","_URL","ReadingList","_React$Component","_temp","_ret","_len","_key","documents","componentWillMount","download","delimiter","trimHeaders","dynamicTyping","preview","skipEmptyLines","complete","results","setState","render","createElement","Container","Header","Table","celled","Row","HeaderCell","doc","idx","Cell","textAlign","width","Label","filename","title","author","keywords","numPages","style","spacer","Component","533","placeHoldersCount","b64","tmp","placeHolders","Arr","L","revLookup","tripletToBase64","num","lookup","encodeChunk","uint8","output","extraBytes","maxChunkLength","len2","662","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","s","NaN","rt","abs","log","LN2","856","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","root","factory","CsvToJson","_input","_config","dynamicTypingFunction","worker","Papa","WORKERS_SUPPORTED","w","newWorker","userStep","step","userChunk","userComplete","userError","postMessage","config","workerId","id","streamer","NODE_STREAM_INPUT","DuplexStreamStreamer","getStream","NetworkStreamer","StringStreamer","ReadableStreamStreamer","File","FileStreamer","JsonToCsv","unpackConfig","BAD_DELIMITERS","filter","_delimiter","quotes","_quotes","newline","_newline","quoteChar","_quoteChar","_writeHeader","serialize","fields","csv","hasHeader","dataKeyedByField","safe","row","maxCol","col","colIdx","Date","stringify","quoteCharRegex","needsQuotes","hasAny","charAt","substrings","RegExp","meta","ChunkStreamer","replaceConfig","configCopy","chunkSize","_handle","ParserHandle","_finished","_completed","_baseIndex","_partialLine","_rowCount","_start","_nextChunk","isFirstChunk","_completeResults","errors","parseChunk","isFakeChunk","beforeFirstChunk","modifiedChunk","aggregate","aborted","lastIndex","cursor","substring","finishedIncludingPreview","IS_PAPA_WORKER","WORKER_ID","_sendError","getFileSize","contentRange","getResponseHeader","RemoteChunkSize","IS_WORKER","_readChunk","_chunkLoaded","bindFunction","_chunkError","downloadRequestHeaders","headerName","message","readyState","errorMessage","errorText","LocalChunkSize","usingAsyncReader","file","webkitSlice","mozSlice","FileReaderSync","txt","queue","parseOnData","streamHasEnded","_streamData","_streamEnd","_streamError","_checkIsFinished","_streamCleanUp","parseOnWrite","writeStreamHasFinished","parseCallbackQueue","_onCsvData","_onCsvComplete","_addToParseQueue","_onRead","_onWrite","_onWriteComplete","testEmptyLine","processResults","_results","_delimiterError","addError","DefaultDelimiter","needsHeaderRow","fillHeaderFields","applyHeaderAndDynamicTypingAndTransformation","_fields","shouldApplyDynamicTyping","field","parseDynamic","FLOAT","parseFloat","ISO_DATE","_rowCounter","guessDelimiter","comments","bestDelim","bestDelta","fieldCountPrevRow","delimChoices","RECORD_SEP","UNIT_SEP","delim","delta","avgFieldCount","emptyLinesCount","Parser","fieldCount","successful","bestDelimiter","guessLineEndings","escapeRegExp","r","nAppearsFirst","numWithN","msg","_parser","_stepCounter","_paused","_aborted","abort","baseIndex","ignoreLastRow","delimGuess","parserConfig","getCharIndex","fastMode","escapeChar","pushRow","lastCursor","extraSpaces","spaceLength","textBetweenClosingQuoteAndIndex","quoteSearch","returnable","inputLen","stepIsFunction","doStep","saveRow","newCursor","nextNewline","stopped","linebreak","truncated","delimLen","newlineLen","commentsLen","rows","nextDelim","checkUpTo","spacesBetweenQuoteAndDelimiter","spacesBetweenQuoteAndNewLine","getScriptPath","scripts","document","getElementsByTagName","LOADED_SYNC","SCRIPT_PATH","workerUrl","AUTO_SCRIPT_PATH","Worker","onmessage","mainThreadReceivedMessage","workerIdCounter","workers","completeWorker","handle","notImplemented","terminate","workerThreadReceivedMessage","cpy","f","func","window","search","unparse","BYTE_ORDER_MARK","jQuery","$","parseNextFile","before","returned","inputElem","action","reason","fileComplete","instanceConfig","extend","userCompleteFunc","elem","each","supported","prop","attr","files","addEventListener","952","953","954","copyBuffer","955","956","957","1050","task","tasksByHandle","nextHandle","registerImmediate","clearImmediate","run","runIfPresent","currentlyRunningATask","setTimeout","installNextTickImplementation","canUsePostMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","installPostMessageImplementation","messagePrefix","random","onGlobalMessage","source","attachEvent","installMessageChannelImplementation","channel","MessageChannel","port1","port2","installReadyStateChangeImplementation","html","documentElement","script","onreadystatechange","removeChild","appendChild","installSetTimeoutImplementation","attachTo","1051","EE","didOnEnd","_isStdio","1052","Timeout","clearFn","_id","_clearFn","clearTimeout","setInterval","clearInterval","timeout","close","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","1061","deprecated","warn","localStorage","503","assertEncoding","isBufferEncoding","passThroughWrite","utf16DetectIncompleteChar","charReceived","charLength","base64DetectIncompleteChar","surrogateSize","detectIncompleteChar","charBuffer","charStr","available","charCode","cr"],"mappings":"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","file":"component---src-pages-reading-js-9dec2cc18ee3fa019889.js","sourcesContent":["webpackJsonp([47301250561866],{\n\n/***/ 71:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t// a duplex stream is just a stream that is both readable and writable.\n\t// Since JS doesn't have multiple prototypal inheritance, this class\n\t// prototypally inherits from Readable, and then parasitically from\n\t// Writable.\n\t\n\t'use strict';\n\t\n\t/*<replacement>*/\n\t\n\tvar processNextTick = __webpack_require__(156);\n\t/*</replacement>*/\n\t\n\t/*<replacement>*/\n\tvar objectKeys = Object.keys || function (obj) {\n\t  var keys = [];\n\t  for (var key in obj) {\n\t    keys.push(key);\n\t  }return keys;\n\t};\n\t/*</replacement>*/\n\t\n\tmodule.exports = Duplex;\n\t\n\t/*<replacement>*/\n\tvar util = __webpack_require__(95);\n\tutil.inherits = __webpack_require__(80);\n\t/*</replacement>*/\n\t\n\tvar Readable = __webpack_require__(407);\n\tvar Writable = __webpack_require__(244);\n\t\n\tutil.inherits(Duplex, Readable);\n\t\n\tvar keys = objectKeys(Writable.prototype);\n\tfor (var v = 0; v < keys.length; v++) {\n\t  var method = keys[v];\n\t  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n\t}\n\t\n\tfunction Duplex(options) {\n\t  if (!(this instanceof Duplex)) return new Duplex(options);\n\t\n\t  Readable.call(this, options);\n\t  Writable.call(this, options);\n\t\n\t  if (options && options.readable === false) this.readable = false;\n\t\n\t  if (options && options.writable === false) this.writable = false;\n\t\n\t  this.allowHalfOpen = true;\n\t  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\t\n\t  this.once('end', onend);\n\t}\n\t\n\t// the no-half-open enforcer\n\tfunction onend() {\n\t  // if we allow half-open state, or if the writable side ended,\n\t  // then we're ok.\n\t  if (this.allowHalfOpen || this._writableState.ended) return;\n\t\n\t  // no more data can be written.\n\t  // But allow more writes to happen in this tick.\n\t  processNextTick(onEndNT, this);\n\t}\n\t\n\tfunction onEndNT(self) {\n\t  self.end();\n\t}\n\t\n\tObject.defineProperty(Duplex.prototype, 'destroyed', {\n\t  get: function () {\n\t    if (this._readableState === undefined || this._writableState === undefined) {\n\t      return false;\n\t    }\n\t    return this._readableState.destroyed && this._writableState.destroyed;\n\t  },\n\t  set: function (value) {\n\t    // we ignore the value if the stream\n\t    // has not been initialized yet\n\t    if (this._readableState === undefined || this._writableState === undefined) {\n\t      return;\n\t    }\n\t\n\t    // backward compatibility, the user is explicitly\n\t    // managing destroyed\n\t    this._readableState.destroyed = value;\n\t    this._writableState.destroyed = value;\n\t  }\n\t});\n\t\n\tDuplex.prototype._destroy = function (err, cb) {\n\t  this.push(null);\n\t  this.end();\n\t\n\t  processNextTick(cb, err);\n\t};\n\t\n\tfunction forEach(xs, f) {\n\t  for (var i = 0, l = xs.length; i < l; i++) {\n\t    f(xs[i], i);\n\t  }\n\t}\n\n/***/ }),\n\n/***/ 1063:\n/***/ (function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ }),\n\n/***/ 95:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t// NOTE: These type checking functions intentionally don't use `instanceof`\n\t// because it is fragile and can be easily faked with `Object.create()`.\n\t\n\tfunction isArray(arg) {\n\t  if (Array.isArray) {\n\t    return Array.isArray(arg);\n\t  }\n\t  return objectToString(arg) === '[object Array]';\n\t}\n\texports.isArray = isArray;\n\t\n\tfunction isBoolean(arg) {\n\t  return typeof arg === 'boolean';\n\t}\n\texports.isBoolean = isBoolean;\n\t\n\tfunction isNull(arg) {\n\t  return arg === null;\n\t}\n\texports.isNull = isNull;\n\t\n\tfunction isNullOrUndefined(arg) {\n\t  return arg == null;\n\t}\n\texports.isNullOrUndefined = isNullOrUndefined;\n\t\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\texports.isNumber = isNumber;\n\t\n\tfunction isString(arg) {\n\t  return typeof arg === 'string';\n\t}\n\texports.isString = isString;\n\t\n\tfunction isSymbol(arg) {\n\t  return typeof arg === 'symbol';\n\t}\n\texports.isSymbol = isSymbol;\n\t\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\texports.isUndefined = isUndefined;\n\t\n\tfunction isRegExp(re) {\n\t  return objectToString(re) === '[object RegExp]';\n\t}\n\texports.isRegExp = isRegExp;\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\texports.isObject = isObject;\n\t\n\tfunction isDate(d) {\n\t  return objectToString(d) === '[object Date]';\n\t}\n\texports.isDate = isDate;\n\t\n\tfunction isError(e) {\n\t  return (objectToString(e) === '[object Error]' || e instanceof Error);\n\t}\n\texports.isError = isError;\n\t\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\texports.isFunction = isFunction;\n\t\n\tfunction isPrimitive(arg) {\n\t  return arg === null ||\n\t         typeof arg === 'boolean' ||\n\t         typeof arg === 'number' ||\n\t         typeof arg === 'string' ||\n\t         typeof arg === 'symbol' ||  // ES6 symbol\n\t         typeof arg === 'undefined';\n\t}\n\texports.isPrimitive = isPrimitive;\n\t\n\texports.isBuffer = Buffer.isBuffer;\n\t\n\tfunction objectToString(o) {\n\t  return Object.prototype.toString.call(o);\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(173).Buffer))\n\n/***/ }),\n\n/***/ 96:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// the whatwg-fetch polyfill installs the fetch() function\n\t// on the global object (window or self)\n\t//\n\t// Return that as the export for use in Webpack, Browserify etc.\n\t__webpack_require__(112);\n\tmodule.exports = self.fetch.bind(self);\n\n\n/***/ }),\n\n/***/ 112:\n/***/ (function(module, exports) {\n\n\t(function(self) {\n\t  'use strict';\n\t\n\t  if (self.fetch) {\n\t    return\n\t  }\n\t\n\t  var support = {\n\t    searchParams: 'URLSearchParams' in self,\n\t    iterable: 'Symbol' in self && 'iterator' in Symbol,\n\t    blob: 'FileReader' in self && 'Blob' in self && (function() {\n\t      try {\n\t        new Blob()\n\t        return true\n\t      } catch(e) {\n\t        return false\n\t      }\n\t    })(),\n\t    formData: 'FormData' in self,\n\t    arrayBuffer: 'ArrayBuffer' in self\n\t  }\n\t\n\t  if (support.arrayBuffer) {\n\t    var viewClasses = [\n\t      '[object Int8Array]',\n\t      '[object Uint8Array]',\n\t      '[object Uint8ClampedArray]',\n\t      '[object Int16Array]',\n\t      '[object Uint16Array]',\n\t      '[object Int32Array]',\n\t      '[object Uint32Array]',\n\t      '[object Float32Array]',\n\t      '[object Float64Array]'\n\t    ]\n\t\n\t    var isDataView = function(obj) {\n\t      return obj && DataView.prototype.isPrototypeOf(obj)\n\t    }\n\t\n\t    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n\t      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n\t    }\n\t  }\n\t\n\t  function normalizeName(name) {\n\t    if (typeof name !== 'string') {\n\t      name = String(name)\n\t    }\n\t    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n\t      throw new TypeError('Invalid character in header field name')\n\t    }\n\t    return name.toLowerCase()\n\t  }\n\t\n\t  function normalizeValue(value) {\n\t    if (typeof value !== 'string') {\n\t      value = String(value)\n\t    }\n\t    return value\n\t  }\n\t\n\t  // Build a destructive iterator for the value list\n\t  function iteratorFor(items) {\n\t    var iterator = {\n\t      next: function() {\n\t        var value = items.shift()\n\t        return {done: value === undefined, value: value}\n\t      }\n\t    }\n\t\n\t    if (support.iterable) {\n\t      iterator[Symbol.iterator] = function() {\n\t        return iterator\n\t      }\n\t    }\n\t\n\t    return iterator\n\t  }\n\t\n\t  function Headers(headers) {\n\t    this.map = {}\n\t\n\t    if (headers instanceof Headers) {\n\t      headers.forEach(function(value, name) {\n\t        this.append(name, value)\n\t      }, this)\n\t    } else if (Array.isArray(headers)) {\n\t      headers.forEach(function(header) {\n\t        this.append(header[0], header[1])\n\t      }, this)\n\t    } else if (headers) {\n\t      Object.getOwnPropertyNames(headers).forEach(function(name) {\n\t        this.append(name, headers[name])\n\t      }, this)\n\t    }\n\t  }\n\t\n\t  Headers.prototype.append = function(name, value) {\n\t    name = normalizeName(name)\n\t    value = normalizeValue(value)\n\t    var oldValue = this.map[name]\n\t    this.map[name] = oldValue ? oldValue+','+value : value\n\t  }\n\t\n\t  Headers.prototype['delete'] = function(name) {\n\t    delete this.map[normalizeName(name)]\n\t  }\n\t\n\t  Headers.prototype.get = function(name) {\n\t    name = normalizeName(name)\n\t    return this.has(name) ? this.map[name] : null\n\t  }\n\t\n\t  Headers.prototype.has = function(name) {\n\t    return this.map.hasOwnProperty(normalizeName(name))\n\t  }\n\t\n\t  Headers.prototype.set = function(name, value) {\n\t    this.map[normalizeName(name)] = normalizeValue(value)\n\t  }\n\t\n\t  Headers.prototype.forEach = function(callback, thisArg) {\n\t    for (var name in this.map) {\n\t      if (this.map.hasOwnProperty(name)) {\n\t        callback.call(thisArg, this.map[name], name, this)\n\t      }\n\t    }\n\t  }\n\t\n\t  Headers.prototype.keys = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push(name) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.values = function() {\n\t    var items = []\n\t    this.forEach(function(value) { items.push(value) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.entries = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push([name, value]) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  if (support.iterable) {\n\t    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n\t  }\n\t\n\t  function consumed(body) {\n\t    if (body.bodyUsed) {\n\t      return Promise.reject(new TypeError('Already read'))\n\t    }\n\t    body.bodyUsed = true\n\t  }\n\t\n\t  function fileReaderReady(reader) {\n\t    return new Promise(function(resolve, reject) {\n\t      reader.onload = function() {\n\t        resolve(reader.result)\n\t      }\n\t      reader.onerror = function() {\n\t        reject(reader.error)\n\t      }\n\t    })\n\t  }\n\t\n\t  function readBlobAsArrayBuffer(blob) {\n\t    var reader = new FileReader()\n\t    var promise = fileReaderReady(reader)\n\t    reader.readAsArrayBuffer(blob)\n\t    return promise\n\t  }\n\t\n\t  function readBlobAsText(blob) {\n\t    var reader = new FileReader()\n\t    var promise = fileReaderReady(reader)\n\t    reader.readAsText(blob)\n\t    return promise\n\t  }\n\t\n\t  function readArrayBufferAsText(buf) {\n\t    var view = new Uint8Array(buf)\n\t    var chars = new Array(view.length)\n\t\n\t    for (var i = 0; i < view.length; i++) {\n\t      chars[i] = String.fromCharCode(view[i])\n\t    }\n\t    return chars.join('')\n\t  }\n\t\n\t  function bufferClone(buf) {\n\t    if (buf.slice) {\n\t      return buf.slice(0)\n\t    } else {\n\t      var view = new Uint8Array(buf.byteLength)\n\t      view.set(new Uint8Array(buf))\n\t      return view.buffer\n\t    }\n\t  }\n\t\n\t  function Body() {\n\t    this.bodyUsed = false\n\t\n\t    this._initBody = function(body) {\n\t      this._bodyInit = body\n\t      if (!body) {\n\t        this._bodyText = ''\n\t      } else if (typeof body === 'string') {\n\t        this._bodyText = body\n\t      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n\t        this._bodyBlob = body\n\t      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n\t        this._bodyFormData = body\n\t      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t        this._bodyText = body.toString()\n\t      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n\t        this._bodyArrayBuffer = bufferClone(body.buffer)\n\t        // IE 10-11 can't handle a DataView body.\n\t        this._bodyInit = new Blob([this._bodyArrayBuffer])\n\t      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n\t        this._bodyArrayBuffer = bufferClone(body)\n\t      } else {\n\t        throw new Error('unsupported BodyInit type')\n\t      }\n\t\n\t      if (!this.headers.get('content-type')) {\n\t        if (typeof body === 'string') {\n\t          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n\t        } else if (this._bodyBlob && this._bodyBlob.type) {\n\t          this.headers.set('content-type', this._bodyBlob.type)\n\t        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n\t        }\n\t      }\n\t    }\n\t\n\t    if (support.blob) {\n\t      this.blob = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return Promise.resolve(this._bodyBlob)\n\t        } else if (this._bodyArrayBuffer) {\n\t          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as blob')\n\t        } else {\n\t          return Promise.resolve(new Blob([this._bodyText]))\n\t        }\n\t      }\n\t\n\t      this.arrayBuffer = function() {\n\t        if (this._bodyArrayBuffer) {\n\t          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n\t        } else {\n\t          return this.blob().then(readBlobAsArrayBuffer)\n\t        }\n\t      }\n\t    }\n\t\n\t    this.text = function() {\n\t      var rejected = consumed(this)\n\t      if (rejected) {\n\t        return rejected\n\t      }\n\t\n\t      if (this._bodyBlob) {\n\t        return readBlobAsText(this._bodyBlob)\n\t      } else if (this._bodyArrayBuffer) {\n\t        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n\t      } else if (this._bodyFormData) {\n\t        throw new Error('could not read FormData body as text')\n\t      } else {\n\t        return Promise.resolve(this._bodyText)\n\t      }\n\t    }\n\t\n\t    if (support.formData) {\n\t      this.formData = function() {\n\t        return this.text().then(decode)\n\t      }\n\t    }\n\t\n\t    this.json = function() {\n\t      return this.text().then(JSON.parse)\n\t    }\n\t\n\t    return this\n\t  }\n\t\n\t  // HTTP methods whose capitalization should be normalized\n\t  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\t\n\t  function normalizeMethod(method) {\n\t    var upcased = method.toUpperCase()\n\t    return (methods.indexOf(upcased) > -1) ? upcased : method\n\t  }\n\t\n\t  function Request(input, options) {\n\t    options = options || {}\n\t    var body = options.body\n\t\n\t    if (input instanceof Request) {\n\t      if (input.bodyUsed) {\n\t        throw new TypeError('Already read')\n\t      }\n\t      this.url = input.url\n\t      this.credentials = input.credentials\n\t      if (!options.headers) {\n\t        this.headers = new Headers(input.headers)\n\t      }\n\t      this.method = input.method\n\t      this.mode = input.mode\n\t      if (!body && input._bodyInit != null) {\n\t        body = input._bodyInit\n\t        input.bodyUsed = true\n\t      }\n\t    } else {\n\t      this.url = String(input)\n\t    }\n\t\n\t    this.credentials = options.credentials || this.credentials || 'omit'\n\t    if (options.headers || !this.headers) {\n\t      this.headers = new Headers(options.headers)\n\t    }\n\t    this.method = normalizeMethod(options.method || this.method || 'GET')\n\t    this.mode = options.mode || this.mode || null\n\t    this.referrer = null\n\t\n\t    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n\t      throw new TypeError('Body not allowed for GET or HEAD requests')\n\t    }\n\t    this._initBody(body)\n\t  }\n\t\n\t  Request.prototype.clone = function() {\n\t    return new Request(this, { body: this._bodyInit })\n\t  }\n\t\n\t  function decode(body) {\n\t    var form = new FormData()\n\t    body.trim().split('&').forEach(function(bytes) {\n\t      if (bytes) {\n\t        var split = bytes.split('=')\n\t        var name = split.shift().replace(/\\+/g, ' ')\n\t        var value = split.join('=').replace(/\\+/g, ' ')\n\t        form.append(decodeURIComponent(name), decodeURIComponent(value))\n\t      }\n\t    })\n\t    return form\n\t  }\n\t\n\t  function parseHeaders(rawHeaders) {\n\t    var headers = new Headers()\n\t    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n\t      var parts = line.split(':')\n\t      var key = parts.shift().trim()\n\t      if (key) {\n\t        var value = parts.join(':').trim()\n\t        headers.append(key, value)\n\t      }\n\t    })\n\t    return headers\n\t  }\n\t\n\t  Body.call(Request.prototype)\n\t\n\t  function Response(bodyInit, options) {\n\t    if (!options) {\n\t      options = {}\n\t    }\n\t\n\t    this.type = 'default'\n\t    this.status = 'status' in options ? options.status : 200\n\t    this.ok = this.status >= 200 && this.status < 300\n\t    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n\t    this.headers = new Headers(options.headers)\n\t    this.url = options.url || ''\n\t    this._initBody(bodyInit)\n\t  }\n\t\n\t  Body.call(Response.prototype)\n\t\n\t  Response.prototype.clone = function() {\n\t    return new Response(this._bodyInit, {\n\t      status: this.status,\n\t      statusText: this.statusText,\n\t      headers: new Headers(this.headers),\n\t      url: this.url\n\t    })\n\t  }\n\t\n\t  Response.error = function() {\n\t    var response = new Response(null, {status: 0, statusText: ''})\n\t    response.type = 'error'\n\t    return response\n\t  }\n\t\n\t  var redirectStatuses = [301, 302, 303, 307, 308]\n\t\n\t  Response.redirect = function(url, status) {\n\t    if (redirectStatuses.indexOf(status) === -1) {\n\t      throw new RangeError('Invalid status code')\n\t    }\n\t\n\t    return new Response(null, {status: status, headers: {location: url}})\n\t  }\n\t\n\t  self.Headers = Headers\n\t  self.Request = Request\n\t  self.Response = Response\n\t\n\t  self.fetch = function(input, init) {\n\t    return new Promise(function(resolve, reject) {\n\t      var request = new Request(input, init)\n\t      var xhr = new XMLHttpRequest()\n\t\n\t      xhr.onload = function() {\n\t        var options = {\n\t          status: xhr.status,\n\t          statusText: xhr.statusText,\n\t          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n\t        }\n\t        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n\t        var body = 'response' in xhr ? xhr.response : xhr.responseText\n\t        resolve(new Response(body, options))\n\t      }\n\t\n\t      xhr.onerror = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.ontimeout = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.open(request.method, request.url, true)\n\t\n\t      if (request.credentials === 'include') {\n\t        xhr.withCredentials = true\n\t      }\n\t\n\t      if ('responseType' in xhr && support.blob) {\n\t        xhr.responseType = 'blob'\n\t      }\n\t\n\t      request.headers.forEach(function(value, name) {\n\t        xhr.setRequestHeader(name, value)\n\t      })\n\t\n\t      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n\t    })\n\t  }\n\t  self.fetch.polyfill = true\n\t})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ }),\n\n/***/ 156:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {'use strict';\n\t\n\tif (!process.version ||\n\t    process.version.indexOf('v0.') === 0 ||\n\t    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n\t  module.exports = nextTick;\n\t} else {\n\t  module.exports = process.nextTick;\n\t}\n\t\n\tfunction nextTick(fn, arg1, arg2, arg3) {\n\t  if (typeof fn !== 'function') {\n\t    throw new TypeError('\"callback\" argument must be a function');\n\t  }\n\t  var len = arguments.length;\n\t  var args, i;\n\t  switch (len) {\n\t  case 0:\n\t  case 1:\n\t    return process.nextTick(fn);\n\t  case 2:\n\t    return process.nextTick(function afterTickOne() {\n\t      fn.call(null, arg1);\n\t    });\n\t  case 3:\n\t    return process.nextTick(function afterTickTwo() {\n\t      fn.call(null, arg1, arg2);\n\t    });\n\t  case 4:\n\t    return process.nextTick(function afterTickThree() {\n\t      fn.call(null, arg1, arg2, arg3);\n\t    });\n\t  default:\n\t    args = new Array(len - 1);\n\t    i = 0;\n\t    while (i < args.length) {\n\t      args[i++] = arguments[i];\n\t    }\n\t    return process.nextTick(function afterTick() {\n\t      fn.apply(null, args);\n\t    });\n\t  }\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(69)))\n\n/***/ }),\n\n/***/ 173:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * The buffer module from node.js, for the browser.\n\t *\n\t * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n\t * @license  MIT\n\t */\n\t/* eslint-disable no-proto */\n\t\n\t'use strict'\n\t\n\tvar base64 = __webpack_require__(533)\n\tvar ieee754 = __webpack_require__(662)\n\tvar isArray = __webpack_require__(197)\n\t\n\texports.Buffer = Buffer\n\texports.SlowBuffer = SlowBuffer\n\texports.INSPECT_MAX_BYTES = 50\n\t\n\t/**\n\t * If `Buffer.TYPED_ARRAY_SUPPORT`:\n\t *   === true    Use Uint8Array implementation (fastest)\n\t *   === false   Use Object implementation (most compatible, even IE6)\n\t *\n\t * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n\t * Opera 11.6+, iOS 4.2+.\n\t *\n\t * Due to various browser bugs, sometimes the Object implementation will be used even\n\t * when the browser supports typed arrays.\n\t *\n\t * Note:\n\t *\n\t *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n\t *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n\t *\n\t *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n\t *\n\t *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n\t *     incorrect length in some situations.\n\t\n\t * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n\t * get the Object implementation, which is slower but behaves correctly.\n\t */\n\tBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n\t  ? global.TYPED_ARRAY_SUPPORT\n\t  : typedArraySupport()\n\t\n\t/*\n\t * Export kMaxLength after typed array support is determined.\n\t */\n\texports.kMaxLength = kMaxLength()\n\t\n\tfunction typedArraySupport () {\n\t  try {\n\t    var arr = new Uint8Array(1)\n\t    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n\t    return arr.foo() === 42 && // typed array instances can be augmented\n\t        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n\t        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n\t  } catch (e) {\n\t    return false\n\t  }\n\t}\n\t\n\tfunction kMaxLength () {\n\t  return Buffer.TYPED_ARRAY_SUPPORT\n\t    ? 0x7fffffff\n\t    : 0x3fffffff\n\t}\n\t\n\tfunction createBuffer (that, length) {\n\t  if (kMaxLength() < length) {\n\t    throw new RangeError('Invalid typed array length')\n\t  }\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = new Uint8Array(length)\n\t    that.__proto__ = Buffer.prototype\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    if (that === null) {\n\t      that = new Buffer(length)\n\t    }\n\t    that.length = length\n\t  }\n\t\n\t  return that\n\t}\n\t\n\t/**\n\t * The Buffer constructor returns instances of `Uint8Array` that have their\n\t * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n\t * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n\t * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n\t * returns a single octet.\n\t *\n\t * The `Uint8Array` prototype remains unmodified.\n\t */\n\t\n\tfunction Buffer (arg, encodingOrOffset, length) {\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n\t    return new Buffer(arg, encodingOrOffset, length)\n\t  }\n\t\n\t  // Common case.\n\t  if (typeof arg === 'number') {\n\t    if (typeof encodingOrOffset === 'string') {\n\t      throw new Error(\n\t        'If encoding is specified then the first argument must be a string'\n\t      )\n\t    }\n\t    return allocUnsafe(this, arg)\n\t  }\n\t  return from(this, arg, encodingOrOffset, length)\n\t}\n\t\n\tBuffer.poolSize = 8192 // not used by this implementation\n\t\n\t// TODO: Legacy, not needed anymore. Remove in next major version.\n\tBuffer._augment = function (arr) {\n\t  arr.__proto__ = Buffer.prototype\n\t  return arr\n\t}\n\t\n\tfunction from (that, value, encodingOrOffset, length) {\n\t  if (typeof value === 'number') {\n\t    throw new TypeError('\"value\" argument must not be a number')\n\t  }\n\t\n\t  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n\t    return fromArrayBuffer(that, value, encodingOrOffset, length)\n\t  }\n\t\n\t  if (typeof value === 'string') {\n\t    return fromString(that, value, encodingOrOffset)\n\t  }\n\t\n\t  return fromObject(that, value)\n\t}\n\t\n\t/**\n\t * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n\t * if value is a number.\n\t * Buffer.from(str[, encoding])\n\t * Buffer.from(array)\n\t * Buffer.from(buffer)\n\t * Buffer.from(arrayBuffer[, byteOffset[, length]])\n\t **/\n\tBuffer.from = function (value, encodingOrOffset, length) {\n\t  return from(null, value, encodingOrOffset, length)\n\t}\n\t\n\tif (Buffer.TYPED_ARRAY_SUPPORT) {\n\t  Buffer.prototype.__proto__ = Uint8Array.prototype\n\t  Buffer.__proto__ = Uint8Array\n\t  if (typeof Symbol !== 'undefined' && Symbol.species &&\n\t      Buffer[Symbol.species] === Buffer) {\n\t    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n\t    Object.defineProperty(Buffer, Symbol.species, {\n\t      value: null,\n\t      configurable: true\n\t    })\n\t  }\n\t}\n\t\n\tfunction assertSize (size) {\n\t  if (typeof size !== 'number') {\n\t    throw new TypeError('\"size\" argument must be a number')\n\t  } else if (size < 0) {\n\t    throw new RangeError('\"size\" argument must not be negative')\n\t  }\n\t}\n\t\n\tfunction alloc (that, size, fill, encoding) {\n\t  assertSize(size)\n\t  if (size <= 0) {\n\t    return createBuffer(that, size)\n\t  }\n\t  if (fill !== undefined) {\n\t    // Only pay attention to encoding if it's a string. This\n\t    // prevents accidentally sending in a number that would\n\t    // be interpretted as a start offset.\n\t    return typeof encoding === 'string'\n\t      ? createBuffer(that, size).fill(fill, encoding)\n\t      : createBuffer(that, size).fill(fill)\n\t  }\n\t  return createBuffer(that, size)\n\t}\n\t\n\t/**\n\t * Creates a new filled Buffer instance.\n\t * alloc(size[, fill[, encoding]])\n\t **/\n\tBuffer.alloc = function (size, fill, encoding) {\n\t  return alloc(null, size, fill, encoding)\n\t}\n\t\n\tfunction allocUnsafe (that, size) {\n\t  assertSize(size)\n\t  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n\t    for (var i = 0; i < size; ++i) {\n\t      that[i] = 0\n\t    }\n\t  }\n\t  return that\n\t}\n\t\n\t/**\n\t * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n\t * */\n\tBuffer.allocUnsafe = function (size) {\n\t  return allocUnsafe(null, size)\n\t}\n\t/**\n\t * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n\t */\n\tBuffer.allocUnsafeSlow = function (size) {\n\t  return allocUnsafe(null, size)\n\t}\n\t\n\tfunction fromString (that, string, encoding) {\n\t  if (typeof encoding !== 'string' || encoding === '') {\n\t    encoding = 'utf8'\n\t  }\n\t\n\t  if (!Buffer.isEncoding(encoding)) {\n\t    throw new TypeError('\"encoding\" must be a valid string encoding')\n\t  }\n\t\n\t  var length = byteLength(string, encoding) | 0\n\t  that = createBuffer(that, length)\n\t\n\t  var actual = that.write(string, encoding)\n\t\n\t  if (actual !== length) {\n\t    // Writing a hex string, for example, that contains invalid characters will\n\t    // cause everything after the first invalid character to be ignored. (e.g.\n\t    // 'abxxcd' will be treated as 'ab')\n\t    that = that.slice(0, actual)\n\t  }\n\t\n\t  return that\n\t}\n\t\n\tfunction fromArrayLike (that, array) {\n\t  var length = array.length < 0 ? 0 : checked(array.length) | 0\n\t  that = createBuffer(that, length)\n\t  for (var i = 0; i < length; i += 1) {\n\t    that[i] = array[i] & 255\n\t  }\n\t  return that\n\t}\n\t\n\tfunction fromArrayBuffer (that, array, byteOffset, length) {\n\t  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\t\n\t  if (byteOffset < 0 || array.byteLength < byteOffset) {\n\t    throw new RangeError('\\'offset\\' is out of bounds')\n\t  }\n\t\n\t  if (array.byteLength < byteOffset + (length || 0)) {\n\t    throw new RangeError('\\'length\\' is out of bounds')\n\t  }\n\t\n\t  if (byteOffset === undefined && length === undefined) {\n\t    array = new Uint8Array(array)\n\t  } else if (length === undefined) {\n\t    array = new Uint8Array(array, byteOffset)\n\t  } else {\n\t    array = new Uint8Array(array, byteOffset, length)\n\t  }\n\t\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = array\n\t    that.__proto__ = Buffer.prototype\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    that = fromArrayLike(that, array)\n\t  }\n\t  return that\n\t}\n\t\n\tfunction fromObject (that, obj) {\n\t  if (Buffer.isBuffer(obj)) {\n\t    var len = checked(obj.length) | 0\n\t    that = createBuffer(that, len)\n\t\n\t    if (that.length === 0) {\n\t      return that\n\t    }\n\t\n\t    obj.copy(that, 0, 0, len)\n\t    return that\n\t  }\n\t\n\t  if (obj) {\n\t    if ((typeof ArrayBuffer !== 'undefined' &&\n\t        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n\t      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n\t        return createBuffer(that, 0)\n\t      }\n\t      return fromArrayLike(that, obj)\n\t    }\n\t\n\t    if (obj.type === 'Buffer' && isArray(obj.data)) {\n\t      return fromArrayLike(that, obj.data)\n\t    }\n\t  }\n\t\n\t  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n\t}\n\t\n\tfunction checked (length) {\n\t  // Note: cannot use `length < kMaxLength()` here because that fails when\n\t  // length is NaN (which is otherwise coerced to zero.)\n\t  if (length >= kMaxLength()) {\n\t    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n\t                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n\t  }\n\t  return length | 0\n\t}\n\t\n\tfunction SlowBuffer (length) {\n\t  if (+length != length) { // eslint-disable-line eqeqeq\n\t    length = 0\n\t  }\n\t  return Buffer.alloc(+length)\n\t}\n\t\n\tBuffer.isBuffer = function isBuffer (b) {\n\t  return !!(b != null && b._isBuffer)\n\t}\n\t\n\tBuffer.compare = function compare (a, b) {\n\t  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n\t    throw new TypeError('Arguments must be Buffers')\n\t  }\n\t\n\t  if (a === b) return 0\n\t\n\t  var x = a.length\n\t  var y = b.length\n\t\n\t  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n\t    if (a[i] !== b[i]) {\n\t      x = a[i]\n\t      y = b[i]\n\t      break\n\t    }\n\t  }\n\t\n\t  if (x < y) return -1\n\t  if (y < x) return 1\n\t  return 0\n\t}\n\t\n\tBuffer.isEncoding = function isEncoding (encoding) {\n\t  switch (String(encoding).toLowerCase()) {\n\t    case 'hex':\n\t    case 'utf8':\n\t    case 'utf-8':\n\t    case 'ascii':\n\t    case 'latin1':\n\t    case 'binary':\n\t    case 'base64':\n\t    case 'ucs2':\n\t    case 'ucs-2':\n\t    case 'utf16le':\n\t    case 'utf-16le':\n\t      return true\n\t    default:\n\t      return false\n\t  }\n\t}\n\t\n\tBuffer.concat = function concat (list, length) {\n\t  if (!isArray(list)) {\n\t    throw new TypeError('\"list\" argument must be an Array of Buffers')\n\t  }\n\t\n\t  if (list.length === 0) {\n\t    return Buffer.alloc(0)\n\t  }\n\t\n\t  var i\n\t  if (length === undefined) {\n\t    length = 0\n\t    for (i = 0; i < list.length; ++i) {\n\t      length += list[i].length\n\t    }\n\t  }\n\t\n\t  var buffer = Buffer.allocUnsafe(length)\n\t  var pos = 0\n\t  for (i = 0; i < list.length; ++i) {\n\t    var buf = list[i]\n\t    if (!Buffer.isBuffer(buf)) {\n\t      throw new TypeError('\"list\" argument must be an Array of Buffers')\n\t    }\n\t    buf.copy(buffer, pos)\n\t    pos += buf.length\n\t  }\n\t  return buffer\n\t}\n\t\n\tfunction byteLength (string, encoding) {\n\t  if (Buffer.isBuffer(string)) {\n\t    return string.length\n\t  }\n\t  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n\t      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n\t    return string.byteLength\n\t  }\n\t  if (typeof string !== 'string') {\n\t    string = '' + string\n\t  }\n\t\n\t  var len = string.length\n\t  if (len === 0) return 0\n\t\n\t  // Use a for loop to avoid recursion\n\t  var loweredCase = false\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'ascii':\n\t      case 'latin1':\n\t      case 'binary':\n\t        return len\n\t      case 'utf8':\n\t      case 'utf-8':\n\t      case undefined:\n\t        return utf8ToBytes(string).length\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return len * 2\n\t      case 'hex':\n\t        return len >>> 1\n\t      case 'base64':\n\t        return base64ToBytes(string).length\n\t      default:\n\t        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n\t        encoding = ('' + encoding).toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\tBuffer.byteLength = byteLength\n\t\n\tfunction slowToString (encoding, start, end) {\n\t  var loweredCase = false\n\t\n\t  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n\t  // property of a typed array.\n\t\n\t  // This behaves neither like String nor Uint8Array in that we set start/end\n\t  // to their upper/lower bounds if the value passed is out of range.\n\t  // undefined is handled specially as per ECMA-262 6th Edition,\n\t  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\t  if (start === undefined || start < 0) {\n\t    start = 0\n\t  }\n\t  // Return early if start > this.length. Done here to prevent potential uint32\n\t  // coercion fail below.\n\t  if (start > this.length) {\n\t    return ''\n\t  }\n\t\n\t  if (end === undefined || end > this.length) {\n\t    end = this.length\n\t  }\n\t\n\t  if (end <= 0) {\n\t    return ''\n\t  }\n\t\n\t  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\t  end >>>= 0\n\t  start >>>= 0\n\t\n\t  if (end <= start) {\n\t    return ''\n\t  }\n\t\n\t  if (!encoding) encoding = 'utf8'\n\t\n\t  while (true) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexSlice(this, start, end)\n\t\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Slice(this, start, end)\n\t\n\t      case 'ascii':\n\t        return asciiSlice(this, start, end)\n\t\n\t      case 'latin1':\n\t      case 'binary':\n\t        return latin1Slice(this, start, end)\n\t\n\t      case 'base64':\n\t        return base64Slice(this, start, end)\n\t\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return utf16leSlice(this, start, end)\n\t\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = (encoding + '').toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\t\n\t// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n\t// Buffer instances.\n\tBuffer.prototype._isBuffer = true\n\t\n\tfunction swap (b, n, m) {\n\t  var i = b[n]\n\t  b[n] = b[m]\n\t  b[m] = i\n\t}\n\t\n\tBuffer.prototype.swap16 = function swap16 () {\n\t  var len = this.length\n\t  if (len % 2 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 16-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 2) {\n\t    swap(this, i, i + 1)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.swap32 = function swap32 () {\n\t  var len = this.length\n\t  if (len % 4 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 32-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 4) {\n\t    swap(this, i, i + 3)\n\t    swap(this, i + 1, i + 2)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.swap64 = function swap64 () {\n\t  var len = this.length\n\t  if (len % 8 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 64-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 8) {\n\t    swap(this, i, i + 7)\n\t    swap(this, i + 1, i + 6)\n\t    swap(this, i + 2, i + 5)\n\t    swap(this, i + 3, i + 4)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.toString = function toString () {\n\t  var length = this.length | 0\n\t  if (length === 0) return ''\n\t  if (arguments.length === 0) return utf8Slice(this, 0, length)\n\t  return slowToString.apply(this, arguments)\n\t}\n\t\n\tBuffer.prototype.equals = function equals (b) {\n\t  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n\t  if (this === b) return true\n\t  return Buffer.compare(this, b) === 0\n\t}\n\t\n\tBuffer.prototype.inspect = function inspect () {\n\t  var str = ''\n\t  var max = exports.INSPECT_MAX_BYTES\n\t  if (this.length > 0) {\n\t    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n\t    if (this.length > max) str += ' ... '\n\t  }\n\t  return '<Buffer ' + str + '>'\n\t}\n\t\n\tBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n\t  if (!Buffer.isBuffer(target)) {\n\t    throw new TypeError('Argument must be a Buffer')\n\t  }\n\t\n\t  if (start === undefined) {\n\t    start = 0\n\t  }\n\t  if (end === undefined) {\n\t    end = target ? target.length : 0\n\t  }\n\t  if (thisStart === undefined) {\n\t    thisStart = 0\n\t  }\n\t  if (thisEnd === undefined) {\n\t    thisEnd = this.length\n\t  }\n\t\n\t  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n\t    throw new RangeError('out of range index')\n\t  }\n\t\n\t  if (thisStart >= thisEnd && start >= end) {\n\t    return 0\n\t  }\n\t  if (thisStart >= thisEnd) {\n\t    return -1\n\t  }\n\t  if (start >= end) {\n\t    return 1\n\t  }\n\t\n\t  start >>>= 0\n\t  end >>>= 0\n\t  thisStart >>>= 0\n\t  thisEnd >>>= 0\n\t\n\t  if (this === target) return 0\n\t\n\t  var x = thisEnd - thisStart\n\t  var y = end - start\n\t  var len = Math.min(x, y)\n\t\n\t  var thisCopy = this.slice(thisStart, thisEnd)\n\t  var targetCopy = target.slice(start, end)\n\t\n\t  for (var i = 0; i < len; ++i) {\n\t    if (thisCopy[i] !== targetCopy[i]) {\n\t      x = thisCopy[i]\n\t      y = targetCopy[i]\n\t      break\n\t    }\n\t  }\n\t\n\t  if (x < y) return -1\n\t  if (y < x) return 1\n\t  return 0\n\t}\n\t\n\t// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n\t// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n\t//\n\t// Arguments:\n\t// - buffer - a Buffer to search\n\t// - val - a string, Buffer, or number\n\t// - byteOffset - an index into `buffer`; will be clamped to an int32\n\t// - encoding - an optional encoding, relevant is val is a string\n\t// - dir - true for indexOf, false for lastIndexOf\n\tfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n\t  // Empty buffer means no match\n\t  if (buffer.length === 0) return -1\n\t\n\t  // Normalize byteOffset\n\t  if (typeof byteOffset === 'string') {\n\t    encoding = byteOffset\n\t    byteOffset = 0\n\t  } else if (byteOffset > 0x7fffffff) {\n\t    byteOffset = 0x7fffffff\n\t  } else if (byteOffset < -0x80000000) {\n\t    byteOffset = -0x80000000\n\t  }\n\t  byteOffset = +byteOffset  // Coerce to Number.\n\t  if (isNaN(byteOffset)) {\n\t    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n\t    byteOffset = dir ? 0 : (buffer.length - 1)\n\t  }\n\t\n\t  // Normalize byteOffset: negative offsets start from the end of the buffer\n\t  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n\t  if (byteOffset >= buffer.length) {\n\t    if (dir) return -1\n\t    else byteOffset = buffer.length - 1\n\t  } else if (byteOffset < 0) {\n\t    if (dir) byteOffset = 0\n\t    else return -1\n\t  }\n\t\n\t  // Normalize val\n\t  if (typeof val === 'string') {\n\t    val = Buffer.from(val, encoding)\n\t  }\n\t\n\t  // Finally, search either indexOf (if dir is true) or lastIndexOf\n\t  if (Buffer.isBuffer(val)) {\n\t    // Special case: looking for empty string/buffer always fails\n\t    if (val.length === 0) {\n\t      return -1\n\t    }\n\t    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n\t  } else if (typeof val === 'number') {\n\t    val = val & 0xFF // Search for a byte value [0-255]\n\t    if (Buffer.TYPED_ARRAY_SUPPORT &&\n\t        typeof Uint8Array.prototype.indexOf === 'function') {\n\t      if (dir) {\n\t        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n\t      } else {\n\t        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n\t      }\n\t    }\n\t    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n\t  }\n\t\n\t  throw new TypeError('val must be string, number or Buffer')\n\t}\n\t\n\tfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n\t  var indexSize = 1\n\t  var arrLength = arr.length\n\t  var valLength = val.length\n\t\n\t  if (encoding !== undefined) {\n\t    encoding = String(encoding).toLowerCase()\n\t    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n\t        encoding === 'utf16le' || encoding === 'utf-16le') {\n\t      if (arr.length < 2 || val.length < 2) {\n\t        return -1\n\t      }\n\t      indexSize = 2\n\t      arrLength /= 2\n\t      valLength /= 2\n\t      byteOffset /= 2\n\t    }\n\t  }\n\t\n\t  function read (buf, i) {\n\t    if (indexSize === 1) {\n\t      return buf[i]\n\t    } else {\n\t      return buf.readUInt16BE(i * indexSize)\n\t    }\n\t  }\n\t\n\t  var i\n\t  if (dir) {\n\t    var foundIndex = -1\n\t    for (i = byteOffset; i < arrLength; i++) {\n\t      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n\t        if (foundIndex === -1) foundIndex = i\n\t        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n\t      } else {\n\t        if (foundIndex !== -1) i -= i - foundIndex\n\t        foundIndex = -1\n\t      }\n\t    }\n\t  } else {\n\t    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n\t    for (i = byteOffset; i >= 0; i--) {\n\t      var found = true\n\t      for (var j = 0; j < valLength; j++) {\n\t        if (read(arr, i + j) !== read(val, j)) {\n\t          found = false\n\t          break\n\t        }\n\t      }\n\t      if (found) return i\n\t    }\n\t  }\n\t\n\t  return -1\n\t}\n\t\n\tBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n\t  return this.indexOf(val, byteOffset, encoding) !== -1\n\t}\n\t\n\tBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n\t  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n\t}\n\t\n\tBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n\t  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n\t}\n\t\n\tfunction hexWrite (buf, string, offset, length) {\n\t  offset = Number(offset) || 0\n\t  var remaining = buf.length - offset\n\t  if (!length) {\n\t    length = remaining\n\t  } else {\n\t    length = Number(length)\n\t    if (length > remaining) {\n\t      length = remaining\n\t    }\n\t  }\n\t\n\t  // must be an even number of digits\n\t  var strLen = string.length\n\t  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\t\n\t  if (length > strLen / 2) {\n\t    length = strLen / 2\n\t  }\n\t  for (var i = 0; i < length; ++i) {\n\t    var parsed = parseInt(string.substr(i * 2, 2), 16)\n\t    if (isNaN(parsed)) return i\n\t    buf[offset + i] = parsed\n\t  }\n\t  return i\n\t}\n\t\n\tfunction utf8Write (buf, string, offset, length) {\n\t  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\t\n\tfunction asciiWrite (buf, string, offset, length) {\n\t  return blitBuffer(asciiToBytes(string), buf, offset, length)\n\t}\n\t\n\tfunction latin1Write (buf, string, offset, length) {\n\t  return asciiWrite(buf, string, offset, length)\n\t}\n\t\n\tfunction base64Write (buf, string, offset, length) {\n\t  return blitBuffer(base64ToBytes(string), buf, offset, length)\n\t}\n\t\n\tfunction ucs2Write (buf, string, offset, length) {\n\t  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\t\n\tBuffer.prototype.write = function write (string, offset, length, encoding) {\n\t  // Buffer#write(string)\n\t  if (offset === undefined) {\n\t    encoding = 'utf8'\n\t    length = this.length\n\t    offset = 0\n\t  // Buffer#write(string, encoding)\n\t  } else if (length === undefined && typeof offset === 'string') {\n\t    encoding = offset\n\t    length = this.length\n\t    offset = 0\n\t  // Buffer#write(string, offset[, length][, encoding])\n\t  } else if (isFinite(offset)) {\n\t    offset = offset | 0\n\t    if (isFinite(length)) {\n\t      length = length | 0\n\t      if (encoding === undefined) encoding = 'utf8'\n\t    } else {\n\t      encoding = length\n\t      length = undefined\n\t    }\n\t  // legacy write(string, encoding, offset, length) - remove in v0.13\n\t  } else {\n\t    throw new Error(\n\t      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n\t    )\n\t  }\n\t\n\t  var remaining = this.length - offset\n\t  if (length === undefined || length > remaining) length = remaining\n\t\n\t  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n\t    throw new RangeError('Attempt to write outside buffer bounds')\n\t  }\n\t\n\t  if (!encoding) encoding = 'utf8'\n\t\n\t  var loweredCase = false\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexWrite(this, string, offset, length)\n\t\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Write(this, string, offset, length)\n\t\n\t      case 'ascii':\n\t        return asciiWrite(this, string, offset, length)\n\t\n\t      case 'latin1':\n\t      case 'binary':\n\t        return latin1Write(this, string, offset, length)\n\t\n\t      case 'base64':\n\t        // Warning: maxLength not taken into account in base64Write\n\t        return base64Write(this, string, offset, length)\n\t\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return ucs2Write(this, string, offset, length)\n\t\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = ('' + encoding).toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\t\n\tBuffer.prototype.toJSON = function toJSON () {\n\t  return {\n\t    type: 'Buffer',\n\t    data: Array.prototype.slice.call(this._arr || this, 0)\n\t  }\n\t}\n\t\n\tfunction base64Slice (buf, start, end) {\n\t  if (start === 0 && end === buf.length) {\n\t    return base64.fromByteArray(buf)\n\t  } else {\n\t    return base64.fromByteArray(buf.slice(start, end))\n\t  }\n\t}\n\t\n\tfunction utf8Slice (buf, start, end) {\n\t  end = Math.min(buf.length, end)\n\t  var res = []\n\t\n\t  var i = start\n\t  while (i < end) {\n\t    var firstByte = buf[i]\n\t    var codePoint = null\n\t    var bytesPerSequence = (firstByte > 0xEF) ? 4\n\t      : (firstByte > 0xDF) ? 3\n\t      : (firstByte > 0xBF) ? 2\n\t      : 1\n\t\n\t    if (i + bytesPerSequence <= end) {\n\t      var secondByte, thirdByte, fourthByte, tempCodePoint\n\t\n\t      switch (bytesPerSequence) {\n\t        case 1:\n\t          if (firstByte < 0x80) {\n\t            codePoint = firstByte\n\t          }\n\t          break\n\t        case 2:\n\t          secondByte = buf[i + 1]\n\t          if ((secondByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n\t            if (tempCodePoint > 0x7F) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t          break\n\t        case 3:\n\t          secondByte = buf[i + 1]\n\t          thirdByte = buf[i + 2]\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n\t            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t          break\n\t        case 4:\n\t          secondByte = buf[i + 1]\n\t          thirdByte = buf[i + 2]\n\t          fourthByte = buf[i + 3]\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n\t            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t      }\n\t    }\n\t\n\t    if (codePoint === null) {\n\t      // we did not generate a valid codePoint so insert a\n\t      // replacement char (U+FFFD) and advance only 1 byte\n\t      codePoint = 0xFFFD\n\t      bytesPerSequence = 1\n\t    } else if (codePoint > 0xFFFF) {\n\t      // encode to utf16 (surrogate pair dance)\n\t      codePoint -= 0x10000\n\t      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n\t      codePoint = 0xDC00 | codePoint & 0x3FF\n\t    }\n\t\n\t    res.push(codePoint)\n\t    i += bytesPerSequence\n\t  }\n\t\n\t  return decodeCodePointsArray(res)\n\t}\n\t\n\t// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n\t// the lowest limit is Chrome, with 0x10000 args.\n\t// We go 1 magnitude less, for safety\n\tvar MAX_ARGUMENTS_LENGTH = 0x1000\n\t\n\tfunction decodeCodePointsArray (codePoints) {\n\t  var len = codePoints.length\n\t  if (len <= MAX_ARGUMENTS_LENGTH) {\n\t    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n\t  }\n\t\n\t  // Decode in chunks to avoid \"call stack size exceeded\".\n\t  var res = ''\n\t  var i = 0\n\t  while (i < len) {\n\t    res += String.fromCharCode.apply(\n\t      String,\n\t      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n\t    )\n\t  }\n\t  return res\n\t}\n\t\n\tfunction asciiSlice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\t\n\t  for (var i = start; i < end; ++i) {\n\t    ret += String.fromCharCode(buf[i] & 0x7F)\n\t  }\n\t  return ret\n\t}\n\t\n\tfunction latin1Slice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\t\n\t  for (var i = start; i < end; ++i) {\n\t    ret += String.fromCharCode(buf[i])\n\t  }\n\t  return ret\n\t}\n\t\n\tfunction hexSlice (buf, start, end) {\n\t  var len = buf.length\n\t\n\t  if (!start || start < 0) start = 0\n\t  if (!end || end < 0 || end > len) end = len\n\t\n\t  var out = ''\n\t  for (var i = start; i < end; ++i) {\n\t    out += toHex(buf[i])\n\t  }\n\t  return out\n\t}\n\t\n\tfunction utf16leSlice (buf, start, end) {\n\t  var bytes = buf.slice(start, end)\n\t  var res = ''\n\t  for (var i = 0; i < bytes.length; i += 2) {\n\t    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n\t  }\n\t  return res\n\t}\n\t\n\tBuffer.prototype.slice = function slice (start, end) {\n\t  var len = this.length\n\t  start = ~~start\n\t  end = end === undefined ? len : ~~end\n\t\n\t  if (start < 0) {\n\t    start += len\n\t    if (start < 0) start = 0\n\t  } else if (start > len) {\n\t    start = len\n\t  }\n\t\n\t  if (end < 0) {\n\t    end += len\n\t    if (end < 0) end = 0\n\t  } else if (end > len) {\n\t    end = len\n\t  }\n\t\n\t  if (end < start) end = start\n\t\n\t  var newBuf\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    newBuf = this.subarray(start, end)\n\t    newBuf.__proto__ = Buffer.prototype\n\t  } else {\n\t    var sliceLen = end - start\n\t    newBuf = new Buffer(sliceLen, undefined)\n\t    for (var i = 0; i < sliceLen; ++i) {\n\t      newBuf[i] = this[i + start]\n\t    }\n\t  }\n\t\n\t  return newBuf\n\t}\n\t\n\t/*\n\t * Need to make sure that buffer isn't trying to write out of bounds.\n\t */\n\tfunction checkOffset (offset, ext, length) {\n\t  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n\t  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n\t}\n\t\n\tBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul\n\t  }\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    checkOffset(offset, byteLength, this.length)\n\t  }\n\t\n\t  var val = this[offset + --byteLength]\n\t  var mul = 1\n\t  while (byteLength > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --byteLength] * mul\n\t  }\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length)\n\t  return this[offset]\n\t}\n\t\n\tBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  return this[offset] | (this[offset + 1] << 8)\n\t}\n\t\n\tBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  return (this[offset] << 8) | this[offset + 1]\n\t}\n\t\n\tBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return ((this[offset]) |\n\t      (this[offset + 1] << 8) |\n\t      (this[offset + 2] << 16)) +\n\t      (this[offset + 3] * 0x1000000)\n\t}\n\t\n\tBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset] * 0x1000000) +\n\t    ((this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    this[offset + 3])\n\t}\n\t\n\tBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul\n\t  }\n\t  mul *= 0x80\n\t\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var i = byteLength\n\t  var mul = 1\n\t  var val = this[offset + --i]\n\t  while (i > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --i] * mul\n\t  }\n\t  mul *= 0x80\n\t\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length)\n\t  if (!(this[offset] & 0x80)) return (this[offset])\n\t  return ((0xff - this[offset] + 1) * -1)\n\t}\n\t\n\tBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  var val = this[offset] | (this[offset + 1] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\t\n\tBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  var val = this[offset + 1] | (this[offset] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\t\n\tBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset]) |\n\t    (this[offset + 1] << 8) |\n\t    (this[offset + 2] << 16) |\n\t    (this[offset + 3] << 24)\n\t}\n\t\n\tBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset] << 24) |\n\t    (this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    (this[offset + 3])\n\t}\n\t\n\tBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, true, 23, 4)\n\t}\n\t\n\tBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, false, 23, 4)\n\t}\n\t\n\tBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, true, 52, 8)\n\t}\n\t\n\tBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, false, 52, 8)\n\t}\n\t\n\tfunction checkInt (buf, value, offset, ext, max, min) {\n\t  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n\t  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n\t  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n\t}\n\t\n\tBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n\t    checkInt(this, value, offset, byteLength, maxBytes, 0)\n\t  }\n\t\n\t  var mul = 1\n\t  var i = 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n\t    checkInt(this, value, offset, byteLength, maxBytes, 0)\n\t  }\n\t\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  this[offset] = (value & 0xff)\n\t  return offset + 1\n\t}\n\t\n\tfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n\t    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n\t      (littleEndian ? i : 1 - i) * 8\n\t  }\n\t}\n\t\n\tBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n\t    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n\t  }\n\t}\n\t\n\tBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset + 3] = (value >>> 24)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1)\n\t\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n\t  }\n\t\n\t  var i = 0\n\t  var mul = 1\n\t  var sub = 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n\t      sub = 1\n\t    }\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1)\n\t\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n\t  }\n\t\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  var sub = 0\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n\t      sub = 1\n\t    }\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  if (value < 0) value = 0xff + value + 1\n\t  this[offset] = (value & 0xff)\n\t  return offset + 1\n\t}\n\t\n\tBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 3] = (value >>> 24)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n\t  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n\t  if (offset < 0) throw new RangeError('Index out of range')\n\t}\n\t\n\tfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, true, noAssert)\n\t}\n\t\n\tBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, false, noAssert)\n\t}\n\t\n\tfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n\t  return offset + 8\n\t}\n\t\n\tBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, true, noAssert)\n\t}\n\t\n\tBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, false, noAssert)\n\t}\n\t\n\t// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\tBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n\t  if (!start) start = 0\n\t  if (!end && end !== 0) end = this.length\n\t  if (targetStart >= target.length) targetStart = target.length\n\t  if (!targetStart) targetStart = 0\n\t  if (end > 0 && end < start) end = start\n\t\n\t  // Copy 0 bytes; we're done\n\t  if (end === start) return 0\n\t  if (target.length === 0 || this.length === 0) return 0\n\t\n\t  // Fatal error conditions\n\t  if (targetStart < 0) {\n\t    throw new RangeError('targetStart out of bounds')\n\t  }\n\t  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n\t  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\t\n\t  // Are we oob?\n\t  if (end > this.length) end = this.length\n\t  if (target.length - targetStart < end - start) {\n\t    end = target.length - targetStart + start\n\t  }\n\t\n\t  var len = end - start\n\t  var i\n\t\n\t  if (this === target && start < targetStart && targetStart < end) {\n\t    // descending copy from end\n\t    for (i = len - 1; i >= 0; --i) {\n\t      target[i + targetStart] = this[i + start]\n\t    }\n\t  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // ascending copy from start\n\t    for (i = 0; i < len; ++i) {\n\t      target[i + targetStart] = this[i + start]\n\t    }\n\t  } else {\n\t    Uint8Array.prototype.set.call(\n\t      target,\n\t      this.subarray(start, start + len),\n\t      targetStart\n\t    )\n\t  }\n\t\n\t  return len\n\t}\n\t\n\t// Usage:\n\t//    buffer.fill(number[, offset[, end]])\n\t//    buffer.fill(buffer[, offset[, end]])\n\t//    buffer.fill(string[, offset[, end]][, encoding])\n\tBuffer.prototype.fill = function fill (val, start, end, encoding) {\n\t  // Handle string cases:\n\t  if (typeof val === 'string') {\n\t    if (typeof start === 'string') {\n\t      encoding = start\n\t      start = 0\n\t      end = this.length\n\t    } else if (typeof end === 'string') {\n\t      encoding = end\n\t      end = this.length\n\t    }\n\t    if (val.length === 1) {\n\t      var code = val.charCodeAt(0)\n\t      if (code < 256) {\n\t        val = code\n\t      }\n\t    }\n\t    if (encoding !== undefined && typeof encoding !== 'string') {\n\t      throw new TypeError('encoding must be a string')\n\t    }\n\t    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n\t      throw new TypeError('Unknown encoding: ' + encoding)\n\t    }\n\t  } else if (typeof val === 'number') {\n\t    val = val & 255\n\t  }\n\t\n\t  // Invalid ranges are not set to a default, so can range check early.\n\t  if (start < 0 || this.length < start || this.length < end) {\n\t    throw new RangeError('Out of range index')\n\t  }\n\t\n\t  if (end <= start) {\n\t    return this\n\t  }\n\t\n\t  start = start >>> 0\n\t  end = end === undefined ? this.length : end >>> 0\n\t\n\t  if (!val) val = 0\n\t\n\t  var i\n\t  if (typeof val === 'number') {\n\t    for (i = start; i < end; ++i) {\n\t      this[i] = val\n\t    }\n\t  } else {\n\t    var bytes = Buffer.isBuffer(val)\n\t      ? val\n\t      : utf8ToBytes(new Buffer(val, encoding).toString())\n\t    var len = bytes.length\n\t    for (i = 0; i < end - start; ++i) {\n\t      this[i + start] = bytes[i % len]\n\t    }\n\t  }\n\t\n\t  return this\n\t}\n\t\n\t// HELPER FUNCTIONS\n\t// ================\n\t\n\tvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\t\n\tfunction base64clean (str) {\n\t  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n\t  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n\t  // Node converts strings with length < 2 to ''\n\t  if (str.length < 2) return ''\n\t  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\t  while (str.length % 4 !== 0) {\n\t    str = str + '='\n\t  }\n\t  return str\n\t}\n\t\n\tfunction stringtrim (str) {\n\t  if (str.trim) return str.trim()\n\t  return str.replace(/^\\s+|\\s+$/g, '')\n\t}\n\t\n\tfunction toHex (n) {\n\t  if (n < 16) return '0' + n.toString(16)\n\t  return n.toString(16)\n\t}\n\t\n\tfunction utf8ToBytes (string, units) {\n\t  units = units || Infinity\n\t  var codePoint\n\t  var length = string.length\n\t  var leadSurrogate = null\n\t  var bytes = []\n\t\n\t  for (var i = 0; i < length; ++i) {\n\t    codePoint = string.charCodeAt(i)\n\t\n\t    // is surrogate component\n\t    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n\t      // last char was a lead\n\t      if (!leadSurrogate) {\n\t        // no lead yet\n\t        if (codePoint > 0xDBFF) {\n\t          // unexpected trail\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        } else if (i + 1 === length) {\n\t          // unpaired lead\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        }\n\t\n\t        // valid lead\n\t        leadSurrogate = codePoint\n\t\n\t        continue\n\t      }\n\t\n\t      // 2 leads in a row\n\t      if (codePoint < 0xDC00) {\n\t        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t        leadSurrogate = codePoint\n\t        continue\n\t      }\n\t\n\t      // valid surrogate pair\n\t      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n\t    } else if (leadSurrogate) {\n\t      // valid bmp char, but last char was a lead\n\t      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t    }\n\t\n\t    leadSurrogate = null\n\t\n\t    // encode utf8\n\t    if (codePoint < 0x80) {\n\t      if ((units -= 1) < 0) break\n\t      bytes.push(codePoint)\n\t    } else if (codePoint < 0x800) {\n\t      if ((units -= 2) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x6 | 0xC0,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x10000) {\n\t      if ((units -= 3) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0xC | 0xE0,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x110000) {\n\t      if ((units -= 4) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x12 | 0xF0,\n\t        codePoint >> 0xC & 0x3F | 0x80,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else {\n\t      throw new Error('Invalid code point')\n\t    }\n\t  }\n\t\n\t  return bytes\n\t}\n\t\n\tfunction asciiToBytes (str) {\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; ++i) {\n\t    // Node's code seems to be doing this and not & 0x7F..\n\t    byteArray.push(str.charCodeAt(i) & 0xFF)\n\t  }\n\t  return byteArray\n\t}\n\t\n\tfunction utf16leToBytes (str, units) {\n\t  var c, hi, lo\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; ++i) {\n\t    if ((units -= 2) < 0) break\n\t\n\t    c = str.charCodeAt(i)\n\t    hi = c >> 8\n\t    lo = c % 256\n\t    byteArray.push(lo)\n\t    byteArray.push(hi)\n\t  }\n\t\n\t  return byteArray\n\t}\n\t\n\tfunction base64ToBytes (str) {\n\t  return base64.toByteArray(base64clean(str))\n\t}\n\t\n\tfunction blitBuffer (src, dst, offset, length) {\n\t  for (var i = 0; i < length; ++i) {\n\t    if ((i + offset >= dst.length) || (i >= src.length)) break\n\t    dst[i + offset] = src[i]\n\t  }\n\t  return i\n\t}\n\t\n\tfunction isnan (val) {\n\t  return val !== val // eslint-disable-line no-self-compare\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n\n/***/ 194:\n/***/ (function(module, exports) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tfunction EventEmitter() {\n\t  this._events = this._events || {};\n\t  this._maxListeners = this._maxListeners || undefined;\n\t}\n\tmodule.exports = EventEmitter;\n\t\n\t// Backwards-compat with node 0.10.x\n\tEventEmitter.EventEmitter = EventEmitter;\n\t\n\tEventEmitter.prototype._events = undefined;\n\tEventEmitter.prototype._maxListeners = undefined;\n\t\n\t// By default EventEmitters will print a warning if more than 10 listeners are\n\t// added to it. This is a useful default which helps finding memory leaks.\n\tEventEmitter.defaultMaxListeners = 10;\n\t\n\t// Obviously not all Emitters should be limited to 10. This function allows\n\t// that to be increased. Set to zero for unlimited.\n\tEventEmitter.prototype.setMaxListeners = function(n) {\n\t  if (!isNumber(n) || n < 0 || isNaN(n))\n\t    throw TypeError('n must be a positive number');\n\t  this._maxListeners = n;\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.emit = function(type) {\n\t  var er, handler, len, args, i, listeners;\n\t\n\t  if (!this._events)\n\t    this._events = {};\n\t\n\t  // If there is no 'error' event listener then throw.\n\t  if (type === 'error') {\n\t    if (!this._events.error ||\n\t        (isObject(this._events.error) && !this._events.error.length)) {\n\t      er = arguments[1];\n\t      if (er instanceof Error) {\n\t        throw er; // Unhandled 'error' event\n\t      } else {\n\t        // At least give some kind of context to the user\n\t        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n\t        err.context = er;\n\t        throw err;\n\t      }\n\t    }\n\t  }\n\t\n\t  handler = this._events[type];\n\t\n\t  if (isUndefined(handler))\n\t    return false;\n\t\n\t  if (isFunction(handler)) {\n\t    switch (arguments.length) {\n\t      // fast cases\n\t      case 1:\n\t        handler.call(this);\n\t        break;\n\t      case 2:\n\t        handler.call(this, arguments[1]);\n\t        break;\n\t      case 3:\n\t        handler.call(this, arguments[1], arguments[2]);\n\t        break;\n\t      // slower\n\t      default:\n\t        args = Array.prototype.slice.call(arguments, 1);\n\t        handler.apply(this, args);\n\t    }\n\t  } else if (isObject(handler)) {\n\t    args = Array.prototype.slice.call(arguments, 1);\n\t    listeners = handler.slice();\n\t    len = listeners.length;\n\t    for (i = 0; i < len; i++)\n\t      listeners[i].apply(this, args);\n\t  }\n\t\n\t  return true;\n\t};\n\t\n\tEventEmitter.prototype.addListener = function(type, listener) {\n\t  var m;\n\t\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  if (!this._events)\n\t    this._events = {};\n\t\n\t  // To avoid recursion in the case that type === \"newListener\"! Before\n\t  // adding it to the listeners, first emit \"newListener\".\n\t  if (this._events.newListener)\n\t    this.emit('newListener', type,\n\t              isFunction(listener.listener) ?\n\t              listener.listener : listener);\n\t\n\t  if (!this._events[type])\n\t    // Optimize the case of one listener. Don't need the extra array object.\n\t    this._events[type] = listener;\n\t  else if (isObject(this._events[type]))\n\t    // If we've already got an array, just append.\n\t    this._events[type].push(listener);\n\t  else\n\t    // Adding the second element, need to change to array.\n\t    this._events[type] = [this._events[type], listener];\n\t\n\t  // Check for listener leak\n\t  if (isObject(this._events[type]) && !this._events[type].warned) {\n\t    if (!isUndefined(this._maxListeners)) {\n\t      m = this._maxListeners;\n\t    } else {\n\t      m = EventEmitter.defaultMaxListeners;\n\t    }\n\t\n\t    if (m && m > 0 && this._events[type].length > m) {\n\t      this._events[type].warned = true;\n\t      console.error('(node) warning: possible EventEmitter memory ' +\n\t                    'leak detected. %d listeners added. ' +\n\t                    'Use emitter.setMaxListeners() to increase limit.',\n\t                    this._events[type].length);\n\t      if (typeof console.trace === 'function') {\n\t        // not supported in IE 10\n\t        console.trace();\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\t\n\tEventEmitter.prototype.once = function(type, listener) {\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  var fired = false;\n\t\n\t  function g() {\n\t    this.removeListener(type, g);\n\t\n\t    if (!fired) {\n\t      fired = true;\n\t      listener.apply(this, arguments);\n\t    }\n\t  }\n\t\n\t  g.listener = listener;\n\t  this.on(type, g);\n\t\n\t  return this;\n\t};\n\t\n\t// emits a 'removeListener' event iff the listener was removed\n\tEventEmitter.prototype.removeListener = function(type, listener) {\n\t  var list, position, length, i;\n\t\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  if (!this._events || !this._events[type])\n\t    return this;\n\t\n\t  list = this._events[type];\n\t  length = list.length;\n\t  position = -1;\n\t\n\t  if (list === listener ||\n\t      (isFunction(list.listener) && list.listener === listener)) {\n\t    delete this._events[type];\n\t    if (this._events.removeListener)\n\t      this.emit('removeListener', type, listener);\n\t\n\t  } else if (isObject(list)) {\n\t    for (i = length; i-- > 0;) {\n\t      if (list[i] === listener ||\n\t          (list[i].listener && list[i].listener === listener)) {\n\t        position = i;\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (position < 0)\n\t      return this;\n\t\n\t    if (list.length === 1) {\n\t      list.length = 0;\n\t      delete this._events[type];\n\t    } else {\n\t      list.splice(position, 1);\n\t    }\n\t\n\t    if (this._events.removeListener)\n\t      this.emit('removeListener', type, listener);\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.removeAllListeners = function(type) {\n\t  var key, listeners;\n\t\n\t  if (!this._events)\n\t    return this;\n\t\n\t  // not listening for removeListener, no need to emit\n\t  if (!this._events.removeListener) {\n\t    if (arguments.length === 0)\n\t      this._events = {};\n\t    else if (this._events[type])\n\t      delete this._events[type];\n\t    return this;\n\t  }\n\t\n\t  // emit removeListener for all listeners on all events\n\t  if (arguments.length === 0) {\n\t    for (key in this._events) {\n\t      if (key === 'removeListener') continue;\n\t      this.removeAllListeners(key);\n\t    }\n\t    this.removeAllListeners('removeListener');\n\t    this._events = {};\n\t    return this;\n\t  }\n\t\n\t  listeners = this._events[type];\n\t\n\t  if (isFunction(listeners)) {\n\t    this.removeListener(type, listeners);\n\t  } else if (listeners) {\n\t    // LIFO order\n\t    while (listeners.length)\n\t      this.removeListener(type, listeners[listeners.length - 1]);\n\t  }\n\t  delete this._events[type];\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.listeners = function(type) {\n\t  var ret;\n\t  if (!this._events || !this._events[type])\n\t    ret = [];\n\t  else if (isFunction(this._events[type]))\n\t    ret = [this._events[type]];\n\t  else\n\t    ret = this._events[type].slice();\n\t  return ret;\n\t};\n\t\n\tEventEmitter.prototype.listenerCount = function(type) {\n\t  if (this._events) {\n\t    var evlistener = this._events[type];\n\t\n\t    if (isFunction(evlistener))\n\t      return 1;\n\t    else if (evlistener)\n\t      return evlistener.length;\n\t  }\n\t  return 0;\n\t};\n\t\n\tEventEmitter.listenerCount = function(emitter, type) {\n\t  return emitter.listenerCount(type);\n\t};\n\t\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\t\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\t\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\n\n/***/ }),\n\n/***/ 244:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process, setImmediate, global) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t// A bit simpler than readable streams.\n\t// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n\t// the drain event emission and buffering.\n\t\n\t'use strict';\n\t\n\t/*<replacement>*/\n\t\n\tvar processNextTick = __webpack_require__(156);\n\t/*</replacement>*/\n\t\n\tmodule.exports = Writable;\n\t\n\t/* <replacement> */\n\tfunction WriteReq(chunk, encoding, cb) {\n\t  this.chunk = chunk;\n\t  this.encoding = encoding;\n\t  this.callback = cb;\n\t  this.next = null;\n\t}\n\t\n\t// It seems a linked list but it is not\n\t// there will be only 2 of these for each stream\n\tfunction CorkedRequest(state) {\n\t  var _this = this;\n\t\n\t  this.next = null;\n\t  this.entry = null;\n\t  this.finish = function () {\n\t    onCorkedFinish(_this, state);\n\t  };\n\t}\n\t/* </replacement> */\n\t\n\t/*<replacement>*/\n\tvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : processNextTick;\n\t/*</replacement>*/\n\t\n\t/*<replacement>*/\n\tvar Duplex;\n\t/*</replacement>*/\n\t\n\tWritable.WritableState = WritableState;\n\t\n\t/*<replacement>*/\n\tvar util = __webpack_require__(95);\n\tutil.inherits = __webpack_require__(80);\n\t/*</replacement>*/\n\t\n\t/*<replacement>*/\n\tvar internalUtil = {\n\t  deprecate: __webpack_require__(1061)\n\t};\n\t/*</replacement>*/\n\t\n\t/*<replacement>*/\n\tvar Stream = __webpack_require__(410);\n\t/*</replacement>*/\n\t\n\t/*<replacement>*/\n\tvar Buffer = __webpack_require__(246).Buffer;\n\tvar OurUint8Array = global.Uint8Array || function () {};\n\tfunction _uint8ArrayToBuffer(chunk) {\n\t  return Buffer.from(chunk);\n\t}\n\tfunction _isUint8Array(obj) {\n\t  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n\t}\n\t/*</replacement>*/\n\t\n\tvar destroyImpl = __webpack_require__(409);\n\t\n\tutil.inherits(Writable, Stream);\n\t\n\tfunction nop() {}\n\t\n\tfunction WritableState(options, stream) {\n\t  Duplex = Duplex || __webpack_require__(71);\n\t\n\t  options = options || {};\n\t\n\t  // object stream flag to indicate whether or not this stream\n\t  // contains buffers or objects.\n\t  this.objectMode = !!options.objectMode;\n\t\n\t  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\t\n\t  // the point at which write() starts returning false\n\t  // Note: 0 is a valid value, means that we always return false if\n\t  // the entire buffer is not flushed immediately on write()\n\t  var hwm = options.highWaterMark;\n\t  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\t  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\t\n\t  // cast to ints.\n\t  this.highWaterMark = Math.floor(this.highWaterMark);\n\t\n\t  // if _final has been called\n\t  this.finalCalled = false;\n\t\n\t  // drain event flag.\n\t  this.needDrain = false;\n\t  // at the start of calling end()\n\t  this.ending = false;\n\t  // when end() has been called, and returned\n\t  this.ended = false;\n\t  // when 'finish' is emitted\n\t  this.finished = false;\n\t\n\t  // has it been destroyed\n\t  this.destroyed = false;\n\t\n\t  // should we decode strings into buffers before passing to _write?\n\t  // this is here so that some node-core streams can optimize string\n\t  // handling at a lower level.\n\t  var noDecode = options.decodeStrings === false;\n\t  this.decodeStrings = !noDecode;\n\t\n\t  // Crypto is kind of old and crusty.  Historically, its default string\n\t  // encoding is 'binary' so we have to make this configurable.\n\t  // Everything else in the universe uses 'utf8', though.\n\t  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\t\n\t  // not an actual buffer we keep track of, but a measurement\n\t  // of how much we're waiting to get pushed to some underlying\n\t  // socket or file.\n\t  this.length = 0;\n\t\n\t  // a flag to see when we're in the middle of a write.\n\t  this.writing = false;\n\t\n\t  // when true all writes will be buffered until .uncork() call\n\t  this.corked = 0;\n\t\n\t  // a flag to be able to tell if the onwrite cb is called immediately,\n\t  // or on a later tick.  We set this to true at first, because any\n\t  // actions that shouldn't happen until \"later\" should generally also\n\t  // not happen before the first write call.\n\t  this.sync = true;\n\t\n\t  // a flag to know if we're processing previously buffered items, which\n\t  // may call the _write() callback in the same tick, so that we don't\n\t  // end up in an overlapped onwrite situation.\n\t  this.bufferProcessing = false;\n\t\n\t  // the callback that's passed to _write(chunk,cb)\n\t  this.onwrite = function (er) {\n\t    onwrite(stream, er);\n\t  };\n\t\n\t  // the callback that the user supplies to write(chunk,encoding,cb)\n\t  this.writecb = null;\n\t\n\t  // the amount that is being written when _write is called.\n\t  this.writelen = 0;\n\t\n\t  this.bufferedRequest = null;\n\t  this.lastBufferedRequest = null;\n\t\n\t  // number of pending user-supplied write callbacks\n\t  // this must be 0 before 'finish' can be emitted\n\t  this.pendingcb = 0;\n\t\n\t  // emit prefinish if the only thing we're waiting for is _write cbs\n\t  // This is relevant for synchronous Transform streams\n\t  this.prefinished = false;\n\t\n\t  // True if the error was already emitted and should not be thrown again\n\t  this.errorEmitted = false;\n\t\n\t  // count buffered requests\n\t  this.bufferedRequestCount = 0;\n\t\n\t  // allocate the first CorkedRequest, there is always\n\t  // one allocated and free to use, and we maintain at most two\n\t  this.corkedRequestsFree = new CorkedRequest(this);\n\t}\n\t\n\tWritableState.prototype.getBuffer = function getBuffer() {\n\t  var current = this.bufferedRequest;\n\t  var out = [];\n\t  while (current) {\n\t    out.push(current);\n\t    current = current.next;\n\t  }\n\t  return out;\n\t};\n\t\n\t(function () {\n\t  try {\n\t    Object.defineProperty(WritableState.prototype, 'buffer', {\n\t      get: internalUtil.deprecate(function () {\n\t        return this.getBuffer();\n\t      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n\t    });\n\t  } catch (_) {}\n\t})();\n\t\n\t// Test _writableState for inheritance to account for Duplex streams,\n\t// whose prototype chain only points to Readable.\n\tvar realHasInstance;\n\tif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n\t  realHasInstance = Function.prototype[Symbol.hasInstance];\n\t  Object.defineProperty(Writable, Symbol.hasInstance, {\n\t    value: function (object) {\n\t      if (realHasInstance.call(this, object)) return true;\n\t\n\t      return object && object._writableState instanceof WritableState;\n\t    }\n\t  });\n\t} else {\n\t  realHasInstance = function (object) {\n\t    return object instanceof this;\n\t  };\n\t}\n\t\n\tfunction Writable(options) {\n\t  Duplex = Duplex || __webpack_require__(71);\n\t\n\t  // Writable ctor is applied to Duplexes, too.\n\t  // `realHasInstance` is necessary because using plain `instanceof`\n\t  // would return false, as no `_writableState` property is attached.\n\t\n\t  // Trying to use the custom `instanceof` for Writable here will also break the\n\t  // Node.js LazyTransform implementation, which has a non-trivial getter for\n\t  // `_writableState` that would lead to infinite recursion.\n\t  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n\t    return new Writable(options);\n\t  }\n\t\n\t  this._writableState = new WritableState(options, this);\n\t\n\t  // legacy.\n\t  this.writable = true;\n\t\n\t  if (options) {\n\t    if (typeof options.write === 'function') this._write = options.write;\n\t\n\t    if (typeof options.writev === 'function') this._writev = options.writev;\n\t\n\t    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\t\n\t    if (typeof options.final === 'function') this._final = options.final;\n\t  }\n\t\n\t  Stream.call(this);\n\t}\n\t\n\t// Otherwise people can pipe Writable streams, which is just wrong.\n\tWritable.prototype.pipe = function () {\n\t  this.emit('error', new Error('Cannot pipe, not readable'));\n\t};\n\t\n\tfunction writeAfterEnd(stream, cb) {\n\t  var er = new Error('write after end');\n\t  // TODO: defer error events consistently everywhere, not just the cb\n\t  stream.emit('error', er);\n\t  processNextTick(cb, er);\n\t}\n\t\n\t// Checks that a user-supplied chunk is valid, especially for the particular\n\t// mode the stream is in. Currently this means that `null` is never accepted\n\t// and undefined/non-string values are only allowed in object mode.\n\tfunction validChunk(stream, state, chunk, cb) {\n\t  var valid = true;\n\t  var er = false;\n\t\n\t  if (chunk === null) {\n\t    er = new TypeError('May not write null values to stream');\n\t  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n\t    er = new TypeError('Invalid non-string/buffer chunk');\n\t  }\n\t  if (er) {\n\t    stream.emit('error', er);\n\t    processNextTick(cb, er);\n\t    valid = false;\n\t  }\n\t  return valid;\n\t}\n\t\n\tWritable.prototype.write = function (chunk, encoding, cb) {\n\t  var state = this._writableState;\n\t  var ret = false;\n\t  var isBuf = _isUint8Array(chunk) && !state.objectMode;\n\t\n\t  if (isBuf && !Buffer.isBuffer(chunk)) {\n\t    chunk = _uint8ArrayToBuffer(chunk);\n\t  }\n\t\n\t  if (typeof encoding === 'function') {\n\t    cb = encoding;\n\t    encoding = null;\n\t  }\n\t\n\t  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\t\n\t  if (typeof cb !== 'function') cb = nop;\n\t\n\t  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n\t    state.pendingcb++;\n\t    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n\t  }\n\t\n\t  return ret;\n\t};\n\t\n\tWritable.prototype.cork = function () {\n\t  var state = this._writableState;\n\t\n\t  state.corked++;\n\t};\n\t\n\tWritable.prototype.uncork = function () {\n\t  var state = this._writableState;\n\t\n\t  if (state.corked) {\n\t    state.corked--;\n\t\n\t    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n\t  }\n\t};\n\t\n\tWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n\t  // node::ParseEncoding() requires lower case.\n\t  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n\t  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n\t  this._writableState.defaultEncoding = encoding;\n\t  return this;\n\t};\n\t\n\tfunction decodeChunk(state, chunk, encoding) {\n\t  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n\t    chunk = Buffer.from(chunk, encoding);\n\t  }\n\t  return chunk;\n\t}\n\t\n\t// if we're already writing something, then just put this\n\t// in the queue, and wait our turn.  Otherwise, call _write\n\t// If we return false, then we need a drain event, so set that flag.\n\tfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n\t  if (!isBuf) {\n\t    var newChunk = decodeChunk(state, chunk, encoding);\n\t    if (chunk !== newChunk) {\n\t      isBuf = true;\n\t      encoding = 'buffer';\n\t      chunk = newChunk;\n\t    }\n\t  }\n\t  var len = state.objectMode ? 1 : chunk.length;\n\t\n\t  state.length += len;\n\t\n\t  var ret = state.length < state.highWaterMark;\n\t  // we must ensure that previous needDrain will not be reset to false.\n\t  if (!ret) state.needDrain = true;\n\t\n\t  if (state.writing || state.corked) {\n\t    var last = state.lastBufferedRequest;\n\t    state.lastBufferedRequest = {\n\t      chunk: chunk,\n\t      encoding: encoding,\n\t      isBuf: isBuf,\n\t      callback: cb,\n\t      next: null\n\t    };\n\t    if (last) {\n\t      last.next = state.lastBufferedRequest;\n\t    } else {\n\t      state.bufferedRequest = state.lastBufferedRequest;\n\t    }\n\t    state.bufferedRequestCount += 1;\n\t  } else {\n\t    doWrite(stream, state, false, len, chunk, encoding, cb);\n\t  }\n\t\n\t  return ret;\n\t}\n\t\n\tfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n\t  state.writelen = len;\n\t  state.writecb = cb;\n\t  state.writing = true;\n\t  state.sync = true;\n\t  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n\t  state.sync = false;\n\t}\n\t\n\tfunction onwriteError(stream, state, sync, er, cb) {\n\t  --state.pendingcb;\n\t\n\t  if (sync) {\n\t    // defer the callback if we are being called synchronously\n\t    // to avoid piling up things on the stack\n\t    processNextTick(cb, er);\n\t    // this can emit finish, and it will always happen\n\t    // after error\n\t    processNextTick(finishMaybe, stream, state);\n\t    stream._writableState.errorEmitted = true;\n\t    stream.emit('error', er);\n\t  } else {\n\t    // the caller expect this to happen before if\n\t    // it is async\n\t    cb(er);\n\t    stream._writableState.errorEmitted = true;\n\t    stream.emit('error', er);\n\t    // this can emit finish, but finish must\n\t    // always follow error\n\t    finishMaybe(stream, state);\n\t  }\n\t}\n\t\n\tfunction onwriteStateUpdate(state) {\n\t  state.writing = false;\n\t  state.writecb = null;\n\t  state.length -= state.writelen;\n\t  state.writelen = 0;\n\t}\n\t\n\tfunction onwrite(stream, er) {\n\t  var state = stream._writableState;\n\t  var sync = state.sync;\n\t  var cb = state.writecb;\n\t\n\t  onwriteStateUpdate(state);\n\t\n\t  if (er) onwriteError(stream, state, sync, er, cb);else {\n\t    // Check if we're actually ready to finish, but don't emit yet\n\t    var finished = needFinish(state);\n\t\n\t    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n\t      clearBuffer(stream, state);\n\t    }\n\t\n\t    if (sync) {\n\t      /*<replacement>*/\n\t      asyncWrite(afterWrite, stream, state, finished, cb);\n\t      /*</replacement>*/\n\t    } else {\n\t      afterWrite(stream, state, finished, cb);\n\t    }\n\t  }\n\t}\n\t\n\tfunction afterWrite(stream, state, finished, cb) {\n\t  if (!finished) onwriteDrain(stream, state);\n\t  state.pendingcb--;\n\t  cb();\n\t  finishMaybe(stream, state);\n\t}\n\t\n\t// Must force callback to be called on nextTick, so that we don't\n\t// emit 'drain' before the write() consumer gets the 'false' return\n\t// value, and has a chance to attach a 'drain' listener.\n\tfunction onwriteDrain(stream, state) {\n\t  if (state.length === 0 && state.needDrain) {\n\t    state.needDrain = false;\n\t    stream.emit('drain');\n\t  }\n\t}\n\t\n\t// if there's something in the buffer waiting, then process it\n\tfunction clearBuffer(stream, state) {\n\t  state.bufferProcessing = true;\n\t  var entry = state.bufferedRequest;\n\t\n\t  if (stream._writev && entry && entry.next) {\n\t    // Fast case, write everything using _writev()\n\t    var l = state.bufferedRequestCount;\n\t    var buffer = new Array(l);\n\t    var holder = state.corkedRequestsFree;\n\t    holder.entry = entry;\n\t\n\t    var count = 0;\n\t    var allBuffers = true;\n\t    while (entry) {\n\t      buffer[count] = entry;\n\t      if (!entry.isBuf) allBuffers = false;\n\t      entry = entry.next;\n\t      count += 1;\n\t    }\n\t    buffer.allBuffers = allBuffers;\n\t\n\t    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\t\n\t    // doWrite is almost always async, defer these to save a bit of time\n\t    // as the hot path ends with doWrite\n\t    state.pendingcb++;\n\t    state.lastBufferedRequest = null;\n\t    if (holder.next) {\n\t      state.corkedRequestsFree = holder.next;\n\t      holder.next = null;\n\t    } else {\n\t      state.corkedRequestsFree = new CorkedRequest(state);\n\t    }\n\t  } else {\n\t    // Slow case, write chunks one-by-one\n\t    while (entry) {\n\t      var chunk = entry.chunk;\n\t      var encoding = entry.encoding;\n\t      var cb = entry.callback;\n\t      var len = state.objectMode ? 1 : chunk.length;\n\t\n\t      doWrite(stream, state, false, len, chunk, encoding, cb);\n\t      entry = entry.next;\n\t      // if we didn't call the onwrite immediately, then\n\t      // it means that we need to wait until it does.\n\t      // also, that means that the chunk and cb are currently\n\t      // being processed, so move the buffer counter past them.\n\t      if (state.writing) {\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (entry === null) state.lastBufferedRequest = null;\n\t  }\n\t\n\t  state.bufferedRequestCount = 0;\n\t  state.bufferedRequest = entry;\n\t  state.bufferProcessing = false;\n\t}\n\t\n\tWritable.prototype._write = function (chunk, encoding, cb) {\n\t  cb(new Error('_write() is not implemented'));\n\t};\n\t\n\tWritable.prototype._writev = null;\n\t\n\tWritable.prototype.end = function (chunk, encoding, cb) {\n\t  var state = this._writableState;\n\t\n\t  if (typeof chunk === 'function') {\n\t    cb = chunk;\n\t    chunk = null;\n\t    encoding = null;\n\t  } else if (typeof encoding === 'function') {\n\t    cb = encoding;\n\t    encoding = null;\n\t  }\n\t\n\t  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\t\n\t  // .end() fully uncorks\n\t  if (state.corked) {\n\t    state.corked = 1;\n\t    this.uncork();\n\t  }\n\t\n\t  // ignore unnecessary end() calls.\n\t  if (!state.ending && !state.finished) endWritable(this, state, cb);\n\t};\n\t\n\tfunction needFinish(state) {\n\t  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n\t}\n\tfunction callFinal(stream, state) {\n\t  stream._final(function (err) {\n\t    state.pendingcb--;\n\t    if (err) {\n\t      stream.emit('error', err);\n\t    }\n\t    state.prefinished = true;\n\t    stream.emit('prefinish');\n\t    finishMaybe(stream, state);\n\t  });\n\t}\n\tfunction prefinish(stream, state) {\n\t  if (!state.prefinished && !state.finalCalled) {\n\t    if (typeof stream._final === 'function') {\n\t      state.pendingcb++;\n\t      state.finalCalled = true;\n\t      processNextTick(callFinal, stream, state);\n\t    } else {\n\t      state.prefinished = true;\n\t      stream.emit('prefinish');\n\t    }\n\t  }\n\t}\n\t\n\tfunction finishMaybe(stream, state) {\n\t  var need = needFinish(state);\n\t  if (need) {\n\t    prefinish(stream, state);\n\t    if (state.pendingcb === 0) {\n\t      state.finished = true;\n\t      stream.emit('finish');\n\t    }\n\t  }\n\t  return need;\n\t}\n\t\n\tfunction endWritable(stream, state, cb) {\n\t  state.ending = true;\n\t  finishMaybe(stream, state);\n\t  if (cb) {\n\t    if (state.finished) processNextTick(cb);else stream.once('finish', cb);\n\t  }\n\t  state.ended = true;\n\t  stream.writable = false;\n\t}\n\t\n\tfunction onCorkedFinish(corkReq, state, err) {\n\t  var entry = corkReq.entry;\n\t  corkReq.entry = null;\n\t  while (entry) {\n\t    var cb = entry.callback;\n\t    state.pendingcb--;\n\t    cb(err);\n\t    entry = entry.next;\n\t  }\n\t  if (state.corkedRequestsFree) {\n\t    state.corkedRequestsFree.next = corkReq;\n\t  } else {\n\t    state.corkedRequestsFree = corkReq;\n\t  }\n\t}\n\t\n\tObject.defineProperty(Writable.prototype, 'destroyed', {\n\t  get: function () {\n\t    if (this._writableState === undefined) {\n\t      return false;\n\t    }\n\t    return this._writableState.destroyed;\n\t  },\n\t  set: function (value) {\n\t    // we ignore the value if the stream\n\t    // has not been initialized yet\n\t    if (!this._writableState) {\n\t      return;\n\t    }\n\t\n\t    // backward compatibility, the user is explicitly\n\t    // managing destroyed\n\t    this._writableState.destroyed = value;\n\t  }\n\t});\n\t\n\tWritable.prototype.destroy = destroyImpl.destroy;\n\tWritable.prototype._undestroy = destroyImpl.undestroy;\n\tWritable.prototype._destroy = function (err, cb) {\n\t  this.end();\n\t  cb(err);\n\t};\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(69), __webpack_require__(1052).setImmediate, (function() { return this; }())))\n\n/***/ }),\n\n/***/ 245:\n/***/ (function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(407);\n\texports.Stream = exports;\n\texports.Readable = exports;\n\texports.Writable = __webpack_require__(244);\n\texports.Duplex = __webpack_require__(71);\n\texports.Transform = __webpack_require__(408);\n\texports.PassThrough = __webpack_require__(953);\n\n\n/***/ }),\n\n/***/ 246:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* eslint-disable node/no-deprecated-api */\n\tvar buffer = __webpack_require__(173)\n\tvar Buffer = buffer.Buffer\n\t\n\t// alternative to using Object.keys for old browsers\n\tfunction copyProps (src, dst) {\n\t  for (var key in src) {\n\t    dst[key] = src[key]\n\t  }\n\t}\n\tif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n\t  module.exports = buffer\n\t} else {\n\t  // Copy properties from require('buffer')\n\t  copyProps(buffer, exports)\n\t  exports.Buffer = SafeBuffer\n\t}\n\t\n\tfunction SafeBuffer (arg, encodingOrOffset, length) {\n\t  return Buffer(arg, encodingOrOffset, length)\n\t}\n\t\n\t// Copy static methods from Buffer\n\tcopyProps(Buffer, SafeBuffer)\n\t\n\tSafeBuffer.from = function (arg, encodingOrOffset, length) {\n\t  if (typeof arg === 'number') {\n\t    throw new TypeError('Argument must not be a number')\n\t  }\n\t  return Buffer(arg, encodingOrOffset, length)\n\t}\n\t\n\tSafeBuffer.alloc = function (size, fill, encoding) {\n\t  if (typeof size !== 'number') {\n\t    throw new TypeError('Argument must be a number')\n\t  }\n\t  var buf = Buffer(size)\n\t  if (fill !== undefined) {\n\t    if (typeof encoding === 'string') {\n\t      buf.fill(fill, encoding)\n\t    } else {\n\t      buf.fill(fill)\n\t    }\n\t  } else {\n\t    buf.fill(0)\n\t  }\n\t  return buf\n\t}\n\t\n\tSafeBuffer.allocUnsafe = function (size) {\n\t  if (typeof size !== 'number') {\n\t    throw new TypeError('Argument must be a number')\n\t  }\n\t  return Buffer(size)\n\t}\n\t\n\tSafeBuffer.allocUnsafeSlow = function (size) {\n\t  if (typeof size !== 'number') {\n\t    throw new TypeError('Argument must be a number')\n\t  }\n\t  return buffer.SlowBuffer(size)\n\t}\n\n\n/***/ }),\n\n/***/ 407:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t'use strict';\n\t\n\t/*<replacement>*/\n\t\n\tvar processNextTick = __webpack_require__(156);\n\t/*</replacement>*/\n\t\n\tmodule.exports = Readable;\n\t\n\t/*<replacement>*/\n\tvar isArray = __webpack_require__(197);\n\t/*</replacement>*/\n\t\n\t/*<replacement>*/\n\tvar Duplex;\n\t/*</replacement>*/\n\t\n\tReadable.ReadableState = ReadableState;\n\t\n\t/*<replacement>*/\n\tvar EE = __webpack_require__(194).EventEmitter;\n\t\n\tvar EElistenerCount = function (emitter, type) {\n\t  return emitter.listeners(type).length;\n\t};\n\t/*</replacement>*/\n\t\n\t/*<replacement>*/\n\tvar Stream = __webpack_require__(410);\n\t/*</replacement>*/\n\t\n\t// TODO(bmeurer): Change this back to const once hole checks are\n\t// properly optimized away early in Ignition+TurboFan.\n\t/*<replacement>*/\n\tvar Buffer = __webpack_require__(246).Buffer;\n\tvar OurUint8Array = global.Uint8Array || function () {};\n\tfunction _uint8ArrayToBuffer(chunk) {\n\t  return Buffer.from(chunk);\n\t}\n\tfunction _isUint8Array(obj) {\n\t  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n\t}\n\t/*</replacement>*/\n\t\n\t/*<replacement>*/\n\tvar util = __webpack_require__(95);\n\tutil.inherits = __webpack_require__(80);\n\t/*</replacement>*/\n\t\n\t/*<replacement>*/\n\tvar debugUtil = __webpack_require__(1063);\n\tvar debug = void 0;\n\tif (debugUtil && debugUtil.debuglog) {\n\t  debug = debugUtil.debuglog('stream');\n\t} else {\n\t  debug = function () {};\n\t}\n\t/*</replacement>*/\n\t\n\tvar BufferList = __webpack_require__(954);\n\tvar destroyImpl = __webpack_require__(409);\n\tvar StringDecoder;\n\t\n\tutil.inherits(Readable, Stream);\n\t\n\tvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\t\n\tfunction prependListener(emitter, event, fn) {\n\t  // Sadly this is not cacheable as some libraries bundle their own\n\t  // event emitter implementation with them.\n\t  if (typeof emitter.prependListener === 'function') {\n\t    return emitter.prependListener(event, fn);\n\t  } else {\n\t    // This is a hack to make sure that our error handler is attached before any\n\t    // userland ones.  NEVER DO THIS. This is here only because this code needs\n\t    // to continue to work with older versions of Node.js that do not include\n\t    // the prependListener() method. The goal is to eventually remove this hack.\n\t    if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n\t  }\n\t}\n\t\n\tfunction ReadableState(options, stream) {\n\t  Duplex = Duplex || __webpack_require__(71);\n\t\n\t  options = options || {};\n\t\n\t  // object stream flag. Used to make read(n) ignore n and to\n\t  // make all the buffer merging and length checks go away\n\t  this.objectMode = !!options.objectMode;\n\t\n\t  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\t\n\t  // the point at which it stops calling _read() to fill the buffer\n\t  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\t  var hwm = options.highWaterMark;\n\t  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\t  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\t\n\t  // cast to ints.\n\t  this.highWaterMark = Math.floor(this.highWaterMark);\n\t\n\t  // A linked list is used to store data chunks instead of an array because the\n\t  // linked list can remove elements from the beginning faster than\n\t  // array.shift()\n\t  this.buffer = new BufferList();\n\t  this.length = 0;\n\t  this.pipes = null;\n\t  this.pipesCount = 0;\n\t  this.flowing = null;\n\t  this.ended = false;\n\t  this.endEmitted = false;\n\t  this.reading = false;\n\t\n\t  // a flag to be able to tell if the event 'readable'/'data' is emitted\n\t  // immediately, or on a later tick.  We set this to true at first, because\n\t  // any actions that shouldn't happen until \"later\" should generally also\n\t  // not happen before the first read call.\n\t  this.sync = true;\n\t\n\t  // whenever we return null, then we set a flag to say\n\t  // that we're awaiting a 'readable' event emission.\n\t  this.needReadable = false;\n\t  this.emittedReadable = false;\n\t  this.readableListening = false;\n\t  this.resumeScheduled = false;\n\t\n\t  // has it been destroyed\n\t  this.destroyed = false;\n\t\n\t  // Crypto is kind of old and crusty.  Historically, its default string\n\t  // encoding is 'binary' so we have to make this configurable.\n\t  // Everything else in the universe uses 'utf8', though.\n\t  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\t\n\t  // the number of writers that are awaiting a drain event in .pipe()s\n\t  this.awaitDrain = 0;\n\t\n\t  // if true, a maybeReadMore has been scheduled\n\t  this.readingMore = false;\n\t\n\t  this.decoder = null;\n\t  this.encoding = null;\n\t  if (options.encoding) {\n\t    if (!StringDecoder) StringDecoder = __webpack_require__(503).StringDecoder;\n\t    this.decoder = new StringDecoder(options.encoding);\n\t    this.encoding = options.encoding;\n\t  }\n\t}\n\t\n\tfunction Readable(options) {\n\t  Duplex = Duplex || __webpack_require__(71);\n\t\n\t  if (!(this instanceof Readable)) return new Readable(options);\n\t\n\t  this._readableState = new ReadableState(options, this);\n\t\n\t  // legacy\n\t  this.readable = true;\n\t\n\t  if (options) {\n\t    if (typeof options.read === 'function') this._read = options.read;\n\t\n\t    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\t  }\n\t\n\t  Stream.call(this);\n\t}\n\t\n\tObject.defineProperty(Readable.prototype, 'destroyed', {\n\t  get: function () {\n\t    if (this._readableState === undefined) {\n\t      return false;\n\t    }\n\t    return this._readableState.destroyed;\n\t  },\n\t  set: function (value) {\n\t    // we ignore the value if the stream\n\t    // has not been initialized yet\n\t    if (!this._readableState) {\n\t      return;\n\t    }\n\t\n\t    // backward compatibility, the user is explicitly\n\t    // managing destroyed\n\t    this._readableState.destroyed = value;\n\t  }\n\t});\n\t\n\tReadable.prototype.destroy = destroyImpl.destroy;\n\tReadable.prototype._undestroy = destroyImpl.undestroy;\n\tReadable.prototype._destroy = function (err, cb) {\n\t  this.push(null);\n\t  cb(err);\n\t};\n\t\n\t// Manually shove something into the read() buffer.\n\t// This returns true if the highWaterMark has not been hit yet,\n\t// similar to how Writable.write() returns true if you should\n\t// write() some more.\n\tReadable.prototype.push = function (chunk, encoding) {\n\t  var state = this._readableState;\n\t  var skipChunkCheck;\n\t\n\t  if (!state.objectMode) {\n\t    if (typeof chunk === 'string') {\n\t      encoding = encoding || state.defaultEncoding;\n\t      if (encoding !== state.encoding) {\n\t        chunk = Buffer.from(chunk, encoding);\n\t        encoding = '';\n\t      }\n\t      skipChunkCheck = true;\n\t    }\n\t  } else {\n\t    skipChunkCheck = true;\n\t  }\n\t\n\t  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n\t};\n\t\n\t// Unshift should *always* be something directly out of read()\n\tReadable.prototype.unshift = function (chunk) {\n\t  return readableAddChunk(this, chunk, null, true, false);\n\t};\n\t\n\tfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n\t  var state = stream._readableState;\n\t  if (chunk === null) {\n\t    state.reading = false;\n\t    onEofChunk(stream, state);\n\t  } else {\n\t    var er;\n\t    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n\t    if (er) {\n\t      stream.emit('error', er);\n\t    } else if (state.objectMode || chunk && chunk.length > 0) {\n\t      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n\t        chunk = _uint8ArrayToBuffer(chunk);\n\t      }\n\t\n\t      if (addToFront) {\n\t        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n\t      } else if (state.ended) {\n\t        stream.emit('error', new Error('stream.push() after EOF'));\n\t      } else {\n\t        state.reading = false;\n\t        if (state.decoder && !encoding) {\n\t          chunk = state.decoder.write(chunk);\n\t          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n\t        } else {\n\t          addChunk(stream, state, chunk, false);\n\t        }\n\t      }\n\t    } else if (!addToFront) {\n\t      state.reading = false;\n\t    }\n\t  }\n\t\n\t  return needMoreData(state);\n\t}\n\t\n\tfunction addChunk(stream, state, chunk, addToFront) {\n\t  if (state.flowing && state.length === 0 && !state.sync) {\n\t    stream.emit('data', chunk);\n\t    stream.read(0);\n\t  } else {\n\t    // update the buffer info.\n\t    state.length += state.objectMode ? 1 : chunk.length;\n\t    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\t\n\t    if (state.needReadable) emitReadable(stream);\n\t  }\n\t  maybeReadMore(stream, state);\n\t}\n\t\n\tfunction chunkInvalid(state, chunk) {\n\t  var er;\n\t  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n\t    er = new TypeError('Invalid non-string/buffer chunk');\n\t  }\n\t  return er;\n\t}\n\t\n\t// if it's past the high water mark, we can push in some more.\n\t// Also, if we have no data yet, we can stand some\n\t// more bytes.  This is to work around cases where hwm=0,\n\t// such as the repl.  Also, if the push() triggered a\n\t// readable event, and the user called read(largeNumber) such that\n\t// needReadable was set, then we ought to push more, so that another\n\t// 'readable' event will be triggered.\n\tfunction needMoreData(state) {\n\t  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n\t}\n\t\n\tReadable.prototype.isPaused = function () {\n\t  return this._readableState.flowing === false;\n\t};\n\t\n\t// backwards compatibility.\n\tReadable.prototype.setEncoding = function (enc) {\n\t  if (!StringDecoder) StringDecoder = __webpack_require__(503).StringDecoder;\n\t  this._readableState.decoder = new StringDecoder(enc);\n\t  this._readableState.encoding = enc;\n\t  return this;\n\t};\n\t\n\t// Don't raise the hwm > 8MB\n\tvar MAX_HWM = 0x800000;\n\tfunction computeNewHighWaterMark(n) {\n\t  if (n >= MAX_HWM) {\n\t    n = MAX_HWM;\n\t  } else {\n\t    // Get the next highest power of 2 to prevent increasing hwm excessively in\n\t    // tiny amounts\n\t    n--;\n\t    n |= n >>> 1;\n\t    n |= n >>> 2;\n\t    n |= n >>> 4;\n\t    n |= n >>> 8;\n\t    n |= n >>> 16;\n\t    n++;\n\t  }\n\t  return n;\n\t}\n\t\n\t// This function is designed to be inlinable, so please take care when making\n\t// changes to the function body.\n\tfunction howMuchToRead(n, state) {\n\t  if (n <= 0 || state.length === 0 && state.ended) return 0;\n\t  if (state.objectMode) return 1;\n\t  if (n !== n) {\n\t    // Only flow one buffer at a time\n\t    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n\t  }\n\t  // If we're asking for more than the current hwm, then raise the hwm.\n\t  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n\t  if (n <= state.length) return n;\n\t  // Don't have enough\n\t  if (!state.ended) {\n\t    state.needReadable = true;\n\t    return 0;\n\t  }\n\t  return state.length;\n\t}\n\t\n\t// you can override either this method, or the async _read(n) below.\n\tReadable.prototype.read = function (n) {\n\t  debug('read', n);\n\t  n = parseInt(n, 10);\n\t  var state = this._readableState;\n\t  var nOrig = n;\n\t\n\t  if (n !== 0) state.emittedReadable = false;\n\t\n\t  // if we're doing read(0) to trigger a readable event, but we\n\t  // already have a bunch of data in the buffer, then just trigger\n\t  // the 'readable' event and move on.\n\t  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n\t    debug('read: emitReadable', state.length, state.ended);\n\t    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n\t    return null;\n\t  }\n\t\n\t  n = howMuchToRead(n, state);\n\t\n\t  // if we've ended, and we're now clear, then finish it up.\n\t  if (n === 0 && state.ended) {\n\t    if (state.length === 0) endReadable(this);\n\t    return null;\n\t  }\n\t\n\t  // All the actual chunk generation logic needs to be\n\t  // *below* the call to _read.  The reason is that in certain\n\t  // synthetic stream cases, such as passthrough streams, _read\n\t  // may be a completely synchronous operation which may change\n\t  // the state of the read buffer, providing enough data when\n\t  // before there was *not* enough.\n\t  //\n\t  // So, the steps are:\n\t  // 1. Figure out what the state of things will be after we do\n\t  // a read from the buffer.\n\t  //\n\t  // 2. If that resulting state will trigger a _read, then call _read.\n\t  // Note that this may be asynchronous, or synchronous.  Yes, it is\n\t  // deeply ugly to write APIs this way, but that still doesn't mean\n\t  // that the Readable class should behave improperly, as streams are\n\t  // designed to be sync/async agnostic.\n\t  // Take note if the _read call is sync or async (ie, if the read call\n\t  // has returned yet), so that we know whether or not it's safe to emit\n\t  // 'readable' etc.\n\t  //\n\t  // 3. Actually pull the requested chunks out of the buffer and return.\n\t\n\t  // if we need a readable event, then we need to do some reading.\n\t  var doRead = state.needReadable;\n\t  debug('need readable', doRead);\n\t\n\t  // if we currently have less than the highWaterMark, then also read some\n\t  if (state.length === 0 || state.length - n < state.highWaterMark) {\n\t    doRead = true;\n\t    debug('length less than watermark', doRead);\n\t  }\n\t\n\t  // however, if we've ended, then there's no point, and if we're already\n\t  // reading, then it's unnecessary.\n\t  if (state.ended || state.reading) {\n\t    doRead = false;\n\t    debug('reading or ended', doRead);\n\t  } else if (doRead) {\n\t    debug('do read');\n\t    state.reading = true;\n\t    state.sync = true;\n\t    // if the length is currently zero, then we *need* a readable event.\n\t    if (state.length === 0) state.needReadable = true;\n\t    // call internal read method\n\t    this._read(state.highWaterMark);\n\t    state.sync = false;\n\t    // If _read pushed data synchronously, then `reading` will be false,\n\t    // and we need to re-evaluate how much data we can return to the user.\n\t    if (!state.reading) n = howMuchToRead(nOrig, state);\n\t  }\n\t\n\t  var ret;\n\t  if (n > 0) ret = fromList(n, state);else ret = null;\n\t\n\t  if (ret === null) {\n\t    state.needReadable = true;\n\t    n = 0;\n\t  } else {\n\t    state.length -= n;\n\t  }\n\t\n\t  if (state.length === 0) {\n\t    // If we have nothing in the buffer, then we want to know\n\t    // as soon as we *do* get something into the buffer.\n\t    if (!state.ended) state.needReadable = true;\n\t\n\t    // If we tried to read() past the EOF, then emit end on the next tick.\n\t    if (nOrig !== n && state.ended) endReadable(this);\n\t  }\n\t\n\t  if (ret !== null) this.emit('data', ret);\n\t\n\t  return ret;\n\t};\n\t\n\tfunction onEofChunk(stream, state) {\n\t  if (state.ended) return;\n\t  if (state.decoder) {\n\t    var chunk = state.decoder.end();\n\t    if (chunk && chunk.length) {\n\t      state.buffer.push(chunk);\n\t      state.length += state.objectMode ? 1 : chunk.length;\n\t    }\n\t  }\n\t  state.ended = true;\n\t\n\t  // emit 'readable' now to make sure it gets picked up.\n\t  emitReadable(stream);\n\t}\n\t\n\t// Don't emit readable right away in sync mode, because this can trigger\n\t// another read() call => stack overflow.  This way, it might trigger\n\t// a nextTick recursion warning, but that's not so bad.\n\tfunction emitReadable(stream) {\n\t  var state = stream._readableState;\n\t  state.needReadable = false;\n\t  if (!state.emittedReadable) {\n\t    debug('emitReadable', state.flowing);\n\t    state.emittedReadable = true;\n\t    if (state.sync) processNextTick(emitReadable_, stream);else emitReadable_(stream);\n\t  }\n\t}\n\t\n\tfunction emitReadable_(stream) {\n\t  debug('emit readable');\n\t  stream.emit('readable');\n\t  flow(stream);\n\t}\n\t\n\t// at this point, the user has presumably seen the 'readable' event,\n\t// and called read() to consume some data.  that may have triggered\n\t// in turn another _read(n) call, in which case reading = true if\n\t// it's in progress.\n\t// However, if we're not ended, or reading, and the length < hwm,\n\t// then go ahead and try to read some more preemptively.\n\tfunction maybeReadMore(stream, state) {\n\t  if (!state.readingMore) {\n\t    state.readingMore = true;\n\t    processNextTick(maybeReadMore_, stream, state);\n\t  }\n\t}\n\t\n\tfunction maybeReadMore_(stream, state) {\n\t  var len = state.length;\n\t  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n\t    debug('maybeReadMore read 0');\n\t    stream.read(0);\n\t    if (len === state.length)\n\t      // didn't get any data, stop spinning.\n\t      break;else len = state.length;\n\t  }\n\t  state.readingMore = false;\n\t}\n\t\n\t// abstract method.  to be overridden in specific implementation classes.\n\t// call cb(er, data) where data is <= n in length.\n\t// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n\t// arbitrary, and perhaps not very meaningful.\n\tReadable.prototype._read = function (n) {\n\t  this.emit('error', new Error('_read() is not implemented'));\n\t};\n\t\n\tReadable.prototype.pipe = function (dest, pipeOpts) {\n\t  var src = this;\n\t  var state = this._readableState;\n\t\n\t  switch (state.pipesCount) {\n\t    case 0:\n\t      state.pipes = dest;\n\t      break;\n\t    case 1:\n\t      state.pipes = [state.pipes, dest];\n\t      break;\n\t    default:\n\t      state.pipes.push(dest);\n\t      break;\n\t  }\n\t  state.pipesCount += 1;\n\t  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\t\n\t  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\t\n\t  var endFn = doEnd ? onend : unpipe;\n\t  if (state.endEmitted) processNextTick(endFn);else src.once('end', endFn);\n\t\n\t  dest.on('unpipe', onunpipe);\n\t  function onunpipe(readable, unpipeInfo) {\n\t    debug('onunpipe');\n\t    if (readable === src) {\n\t      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n\t        unpipeInfo.hasUnpiped = true;\n\t        cleanup();\n\t      }\n\t    }\n\t  }\n\t\n\t  function onend() {\n\t    debug('onend');\n\t    dest.end();\n\t  }\n\t\n\t  // when the dest drains, it reduces the awaitDrain counter\n\t  // on the source.  This would be more elegant with a .once()\n\t  // handler in flow(), but adding and removing repeatedly is\n\t  // too slow.\n\t  var ondrain = pipeOnDrain(src);\n\t  dest.on('drain', ondrain);\n\t\n\t  var cleanedUp = false;\n\t  function cleanup() {\n\t    debug('cleanup');\n\t    // cleanup event handlers once the pipe is broken\n\t    dest.removeListener('close', onclose);\n\t    dest.removeListener('finish', onfinish);\n\t    dest.removeListener('drain', ondrain);\n\t    dest.removeListener('error', onerror);\n\t    dest.removeListener('unpipe', onunpipe);\n\t    src.removeListener('end', onend);\n\t    src.removeListener('end', unpipe);\n\t    src.removeListener('data', ondata);\n\t\n\t    cleanedUp = true;\n\t\n\t    // if the reader is waiting for a drain event from this\n\t    // specific writer, then it would cause it to never start\n\t    // flowing again.\n\t    // So, if this is awaiting a drain, then we just call it now.\n\t    // If we don't know, then assume that we are waiting for one.\n\t    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n\t  }\n\t\n\t  // If the user pushes more data while we're writing to dest then we'll end up\n\t  // in ondata again. However, we only want to increase awaitDrain once because\n\t  // dest will only emit one 'drain' event for the multiple writes.\n\t  // => Introduce a guard on increasing awaitDrain.\n\t  var increasedAwaitDrain = false;\n\t  src.on('data', ondata);\n\t  function ondata(chunk) {\n\t    debug('ondata');\n\t    increasedAwaitDrain = false;\n\t    var ret = dest.write(chunk);\n\t    if (false === ret && !increasedAwaitDrain) {\n\t      // If the user unpiped during `dest.write()`, it is possible\n\t      // to get stuck in a permanently paused state if that write\n\t      // also returned false.\n\t      // => Check whether `dest` is still a piping destination.\n\t      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n\t        debug('false write response, pause', src._readableState.awaitDrain);\n\t        src._readableState.awaitDrain++;\n\t        increasedAwaitDrain = true;\n\t      }\n\t      src.pause();\n\t    }\n\t  }\n\t\n\t  // if the dest has an error, then stop piping into it.\n\t  // however, don't suppress the throwing behavior for this.\n\t  function onerror(er) {\n\t    debug('onerror', er);\n\t    unpipe();\n\t    dest.removeListener('error', onerror);\n\t    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n\t  }\n\t\n\t  // Make sure our error handler is attached before userland ones.\n\t  prependListener(dest, 'error', onerror);\n\t\n\t  // Both close and finish should trigger unpipe, but only once.\n\t  function onclose() {\n\t    dest.removeListener('finish', onfinish);\n\t    unpipe();\n\t  }\n\t  dest.once('close', onclose);\n\t  function onfinish() {\n\t    debug('onfinish');\n\t    dest.removeListener('close', onclose);\n\t    unpipe();\n\t  }\n\t  dest.once('finish', onfinish);\n\t\n\t  function unpipe() {\n\t    debug('unpipe');\n\t    src.unpipe(dest);\n\t  }\n\t\n\t  // tell the dest that it's being piped to\n\t  dest.emit('pipe', src);\n\t\n\t  // start the flow if it hasn't been started already.\n\t  if (!state.flowing) {\n\t    debug('pipe resume');\n\t    src.resume();\n\t  }\n\t\n\t  return dest;\n\t};\n\t\n\tfunction pipeOnDrain(src) {\n\t  return function () {\n\t    var state = src._readableState;\n\t    debug('pipeOnDrain', state.awaitDrain);\n\t    if (state.awaitDrain) state.awaitDrain--;\n\t    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n\t      state.flowing = true;\n\t      flow(src);\n\t    }\n\t  };\n\t}\n\t\n\tReadable.prototype.unpipe = function (dest) {\n\t  var state = this._readableState;\n\t  var unpipeInfo = { hasUnpiped: false };\n\t\n\t  // if we're not piping anywhere, then do nothing.\n\t  if (state.pipesCount === 0) return this;\n\t\n\t  // just one destination.  most common case.\n\t  if (state.pipesCount === 1) {\n\t    // passed in one, but it's not the right one.\n\t    if (dest && dest !== state.pipes) return this;\n\t\n\t    if (!dest) dest = state.pipes;\n\t\n\t    // got a match.\n\t    state.pipes = null;\n\t    state.pipesCount = 0;\n\t    state.flowing = false;\n\t    if (dest) dest.emit('unpipe', this, unpipeInfo);\n\t    return this;\n\t  }\n\t\n\t  // slow case. multiple pipe destinations.\n\t\n\t  if (!dest) {\n\t    // remove all.\n\t    var dests = state.pipes;\n\t    var len = state.pipesCount;\n\t    state.pipes = null;\n\t    state.pipesCount = 0;\n\t    state.flowing = false;\n\t\n\t    for (var i = 0; i < len; i++) {\n\t      dests[i].emit('unpipe', this, unpipeInfo);\n\t    }return this;\n\t  }\n\t\n\t  // try to find the right one.\n\t  var index = indexOf(state.pipes, dest);\n\t  if (index === -1) return this;\n\t\n\t  state.pipes.splice(index, 1);\n\t  state.pipesCount -= 1;\n\t  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\t\n\t  dest.emit('unpipe', this, unpipeInfo);\n\t\n\t  return this;\n\t};\n\t\n\t// set up data events if they are asked for\n\t// Ensure readable listeners eventually get something\n\tReadable.prototype.on = function (ev, fn) {\n\t  var res = Stream.prototype.on.call(this, ev, fn);\n\t\n\t  if (ev === 'data') {\n\t    // Start flowing on next tick if stream isn't explicitly paused\n\t    if (this._readableState.flowing !== false) this.resume();\n\t  } else if (ev === 'readable') {\n\t    var state = this._readableState;\n\t    if (!state.endEmitted && !state.readableListening) {\n\t      state.readableListening = state.needReadable = true;\n\t      state.emittedReadable = false;\n\t      if (!state.reading) {\n\t        processNextTick(nReadingNextTick, this);\n\t      } else if (state.length) {\n\t        emitReadable(this);\n\t      }\n\t    }\n\t  }\n\t\n\t  return res;\n\t};\n\tReadable.prototype.addListener = Readable.prototype.on;\n\t\n\tfunction nReadingNextTick(self) {\n\t  debug('readable nexttick read 0');\n\t  self.read(0);\n\t}\n\t\n\t// pause() and resume() are remnants of the legacy readable stream API\n\t// If the user uses them, then switch into old mode.\n\tReadable.prototype.resume = function () {\n\t  var state = this._readableState;\n\t  if (!state.flowing) {\n\t    debug('resume');\n\t    state.flowing = true;\n\t    resume(this, state);\n\t  }\n\t  return this;\n\t};\n\t\n\tfunction resume(stream, state) {\n\t  if (!state.resumeScheduled) {\n\t    state.resumeScheduled = true;\n\t    processNextTick(resume_, stream, state);\n\t  }\n\t}\n\t\n\tfunction resume_(stream, state) {\n\t  if (!state.reading) {\n\t    debug('resume read 0');\n\t    stream.read(0);\n\t  }\n\t\n\t  state.resumeScheduled = false;\n\t  state.awaitDrain = 0;\n\t  stream.emit('resume');\n\t  flow(stream);\n\t  if (state.flowing && !state.reading) stream.read(0);\n\t}\n\t\n\tReadable.prototype.pause = function () {\n\t  debug('call pause flowing=%j', this._readableState.flowing);\n\t  if (false !== this._readableState.flowing) {\n\t    debug('pause');\n\t    this._readableState.flowing = false;\n\t    this.emit('pause');\n\t  }\n\t  return this;\n\t};\n\t\n\tfunction flow(stream) {\n\t  var state = stream._readableState;\n\t  debug('flow', state.flowing);\n\t  while (state.flowing && stream.read() !== null) {}\n\t}\n\t\n\t// wrap an old-style stream as the async data source.\n\t// This is *not* part of the readable stream interface.\n\t// It is an ugly unfortunate mess of history.\n\tReadable.prototype.wrap = function (stream) {\n\t  var state = this._readableState;\n\t  var paused = false;\n\t\n\t  var self = this;\n\t  stream.on('end', function () {\n\t    debug('wrapped end');\n\t    if (state.decoder && !state.ended) {\n\t      var chunk = state.decoder.end();\n\t      if (chunk && chunk.length) self.push(chunk);\n\t    }\n\t\n\t    self.push(null);\n\t  });\n\t\n\t  stream.on('data', function (chunk) {\n\t    debug('wrapped data');\n\t    if (state.decoder) chunk = state.decoder.write(chunk);\n\t\n\t    // don't skip over falsy values in objectMode\n\t    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\t\n\t    var ret = self.push(chunk);\n\t    if (!ret) {\n\t      paused = true;\n\t      stream.pause();\n\t    }\n\t  });\n\t\n\t  // proxy all the other methods.\n\t  // important when wrapping filters and duplexes.\n\t  for (var i in stream) {\n\t    if (this[i] === undefined && typeof stream[i] === 'function') {\n\t      this[i] = function (method) {\n\t        return function () {\n\t          return stream[method].apply(stream, arguments);\n\t        };\n\t      }(i);\n\t    }\n\t  }\n\t\n\t  // proxy certain important events.\n\t  for (var n = 0; n < kProxyEvents.length; n++) {\n\t    stream.on(kProxyEvents[n], self.emit.bind(self, kProxyEvents[n]));\n\t  }\n\t\n\t  // when we try to consume some more bytes, simply unpause the\n\t  // underlying stream.\n\t  self._read = function (n) {\n\t    debug('wrapped _read', n);\n\t    if (paused) {\n\t      paused = false;\n\t      stream.resume();\n\t    }\n\t  };\n\t\n\t  return self;\n\t};\n\t\n\t// exposed for testing purposes only.\n\tReadable._fromList = fromList;\n\t\n\t// Pluck off n bytes from an array of buffers.\n\t// Length is the combined lengths of all the buffers in the list.\n\t// This function is designed to be inlinable, so please take care when making\n\t// changes to the function body.\n\tfunction fromList(n, state) {\n\t  // nothing buffered\n\t  if (state.length === 0) return null;\n\t\n\t  var ret;\n\t  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n\t    // read it all, truncate the list\n\t    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n\t    state.buffer.clear();\n\t  } else {\n\t    // read part of list\n\t    ret = fromListPartial(n, state.buffer, state.decoder);\n\t  }\n\t\n\t  return ret;\n\t}\n\t\n\t// Extracts only enough buffered data to satisfy the amount requested.\n\t// This function is designed to be inlinable, so please take care when making\n\t// changes to the function body.\n\tfunction fromListPartial(n, list, hasStrings) {\n\t  var ret;\n\t  if (n < list.head.data.length) {\n\t    // slice is the same for buffers and strings\n\t    ret = list.head.data.slice(0, n);\n\t    list.head.data = list.head.data.slice(n);\n\t  } else if (n === list.head.data.length) {\n\t    // first chunk is a perfect match\n\t    ret = list.shift();\n\t  } else {\n\t    // result spans more than one buffer\n\t    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n\t  }\n\t  return ret;\n\t}\n\t\n\t// Copies a specified amount of characters from the list of buffered data\n\t// chunks.\n\t// This function is designed to be inlinable, so please take care when making\n\t// changes to the function body.\n\tfunction copyFromBufferString(n, list) {\n\t  var p = list.head;\n\t  var c = 1;\n\t  var ret = p.data;\n\t  n -= ret.length;\n\t  while (p = p.next) {\n\t    var str = p.data;\n\t    var nb = n > str.length ? str.length : n;\n\t    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n\t    n -= nb;\n\t    if (n === 0) {\n\t      if (nb === str.length) {\n\t        ++c;\n\t        if (p.next) list.head = p.next;else list.head = list.tail = null;\n\t      } else {\n\t        list.head = p;\n\t        p.data = str.slice(nb);\n\t      }\n\t      break;\n\t    }\n\t    ++c;\n\t  }\n\t  list.length -= c;\n\t  return ret;\n\t}\n\t\n\t// Copies a specified amount of bytes from the list of buffered data chunks.\n\t// This function is designed to be inlinable, so please take care when making\n\t// changes to the function body.\n\tfunction copyFromBuffer(n, list) {\n\t  var ret = Buffer.allocUnsafe(n);\n\t  var p = list.head;\n\t  var c = 1;\n\t  p.data.copy(ret);\n\t  n -= p.data.length;\n\t  while (p = p.next) {\n\t    var buf = p.data;\n\t    var nb = n > buf.length ? buf.length : n;\n\t    buf.copy(ret, ret.length - n, 0, nb);\n\t    n -= nb;\n\t    if (n === 0) {\n\t      if (nb === buf.length) {\n\t        ++c;\n\t        if (p.next) list.head = p.next;else list.head = list.tail = null;\n\t      } else {\n\t        list.head = p;\n\t        p.data = buf.slice(nb);\n\t      }\n\t      break;\n\t    }\n\t    ++c;\n\t  }\n\t  list.length -= c;\n\t  return ret;\n\t}\n\t\n\tfunction endReadable(stream) {\n\t  var state = stream._readableState;\n\t\n\t  // If we get here before consuming all the bytes, then that is a\n\t  // bug in node.  Should never happen.\n\t  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\t\n\t  if (!state.endEmitted) {\n\t    state.ended = true;\n\t    processNextTick(endReadableNT, state, stream);\n\t  }\n\t}\n\t\n\tfunction endReadableNT(state, stream) {\n\t  // Check that we didn't get one last unshift.\n\t  if (!state.endEmitted && state.length === 0) {\n\t    state.endEmitted = true;\n\t    stream.readable = false;\n\t    stream.emit('end');\n\t  }\n\t}\n\t\n\tfunction forEach(xs, f) {\n\t  for (var i = 0, l = xs.length; i < l; i++) {\n\t    f(xs[i], i);\n\t  }\n\t}\n\t\n\tfunction indexOf(xs, x) {\n\t  for (var i = 0, l = xs.length; i < l; i++) {\n\t    if (xs[i] === x) return i;\n\t  }\n\t  return -1;\n\t}\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(69)))\n\n/***/ }),\n\n/***/ 408:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t// a transform stream is a readable/writable stream where you do\n\t// something with the data.  Sometimes it's called a \"filter\",\n\t// but that's not a great name for it, since that implies a thing where\n\t// some bits pass through, and others are simply ignored.  (That would\n\t// be a valid example of a transform, of course.)\n\t//\n\t// While the output is causally related to the input, it's not a\n\t// necessarily symmetric or synchronous transformation.  For example,\n\t// a zlib stream might take multiple plain-text writes(), and then\n\t// emit a single compressed chunk some time in the future.\n\t//\n\t// Here's how this works:\n\t//\n\t// The Transform stream has all the aspects of the readable and writable\n\t// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n\t// internally, and returns false if there's a lot of pending writes\n\t// buffered up.  When you call read(), that calls _read(n) until\n\t// there's enough pending readable data buffered up.\n\t//\n\t// In a transform stream, the written data is placed in a buffer.  When\n\t// _read(n) is called, it transforms the queued up data, calling the\n\t// buffered _write cb's as it consumes chunks.  If consuming a single\n\t// written chunk would result in multiple output chunks, then the first\n\t// outputted bit calls the readcb, and subsequent chunks just go into\n\t// the read buffer, and will cause it to emit 'readable' if necessary.\n\t//\n\t// This way, back-pressure is actually determined by the reading side,\n\t// since _read has to be called to start processing a new chunk.  However,\n\t// a pathological inflate type of transform can cause excessive buffering\n\t// here.  For example, imagine a stream where every byte of input is\n\t// interpreted as an integer from 0-255, and then results in that many\n\t// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n\t// 1kb of data being output.  In this case, you could write a very small\n\t// amount of input, and end up with a very large amount of output.  In\n\t// such a pathological inflating mechanism, there'd be no way to tell\n\t// the system to stop doing the transform.  A single 4MB write could\n\t// cause the system to run out of memory.\n\t//\n\t// However, even in such a pathological case, only a single written chunk\n\t// would be consumed, and then the rest would wait (un-transformed) until\n\t// the results of the previous transformed chunk were consumed.\n\t\n\t'use strict';\n\t\n\tmodule.exports = Transform;\n\t\n\tvar Duplex = __webpack_require__(71);\n\t\n\t/*<replacement>*/\n\tvar util = __webpack_require__(95);\n\tutil.inherits = __webpack_require__(80);\n\t/*</replacement>*/\n\t\n\tutil.inherits(Transform, Duplex);\n\t\n\tfunction TransformState(stream) {\n\t  this.afterTransform = function (er, data) {\n\t    return afterTransform(stream, er, data);\n\t  };\n\t\n\t  this.needTransform = false;\n\t  this.transforming = false;\n\t  this.writecb = null;\n\t  this.writechunk = null;\n\t  this.writeencoding = null;\n\t}\n\t\n\tfunction afterTransform(stream, er, data) {\n\t  var ts = stream._transformState;\n\t  ts.transforming = false;\n\t\n\t  var cb = ts.writecb;\n\t\n\t  if (!cb) {\n\t    return stream.emit('error', new Error('write callback called multiple times'));\n\t  }\n\t\n\t  ts.writechunk = null;\n\t  ts.writecb = null;\n\t\n\t  if (data !== null && data !== undefined) stream.push(data);\n\t\n\t  cb(er);\n\t\n\t  var rs = stream._readableState;\n\t  rs.reading = false;\n\t  if (rs.needReadable || rs.length < rs.highWaterMark) {\n\t    stream._read(rs.highWaterMark);\n\t  }\n\t}\n\t\n\tfunction Transform(options) {\n\t  if (!(this instanceof Transform)) return new Transform(options);\n\t\n\t  Duplex.call(this, options);\n\t\n\t  this._transformState = new TransformState(this);\n\t\n\t  var stream = this;\n\t\n\t  // start out asking for a readable event once data is transformed.\n\t  this._readableState.needReadable = true;\n\t\n\t  // we have implemented the _read method, and done the other things\n\t  // that Readable wants before the first _read call, so unset the\n\t  // sync guard flag.\n\t  this._readableState.sync = false;\n\t\n\t  if (options) {\n\t    if (typeof options.transform === 'function') this._transform = options.transform;\n\t\n\t    if (typeof options.flush === 'function') this._flush = options.flush;\n\t  }\n\t\n\t  // When the writable side finishes, then flush out anything remaining.\n\t  this.once('prefinish', function () {\n\t    if (typeof this._flush === 'function') this._flush(function (er, data) {\n\t      done(stream, er, data);\n\t    });else done(stream);\n\t  });\n\t}\n\t\n\tTransform.prototype.push = function (chunk, encoding) {\n\t  this._transformState.needTransform = false;\n\t  return Duplex.prototype.push.call(this, chunk, encoding);\n\t};\n\t\n\t// This is the part where you do stuff!\n\t// override this function in implementation classes.\n\t// 'chunk' is an input chunk.\n\t//\n\t// Call `push(newChunk)` to pass along transformed output\n\t// to the readable side.  You may call 'push' zero or more times.\n\t//\n\t// Call `cb(err)` when you are done with this chunk.  If you pass\n\t// an error, then that'll put the hurt on the whole operation.  If you\n\t// never call cb(), then you'll never get another chunk.\n\tTransform.prototype._transform = function (chunk, encoding, cb) {\n\t  throw new Error('_transform() is not implemented');\n\t};\n\t\n\tTransform.prototype._write = function (chunk, encoding, cb) {\n\t  var ts = this._transformState;\n\t  ts.writecb = cb;\n\t  ts.writechunk = chunk;\n\t  ts.writeencoding = encoding;\n\t  if (!ts.transforming) {\n\t    var rs = this._readableState;\n\t    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n\t  }\n\t};\n\t\n\t// Doesn't matter what the args are here.\n\t// _transform does all the work.\n\t// That we got here means that the readable side wants more data.\n\tTransform.prototype._read = function (n) {\n\t  var ts = this._transformState;\n\t\n\t  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n\t    ts.transforming = true;\n\t    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n\t  } else {\n\t    // mark that we need a transform, so that any data that comes in\n\t    // will get processed, now that we've asked for it.\n\t    ts.needTransform = true;\n\t  }\n\t};\n\t\n\tTransform.prototype._destroy = function (err, cb) {\n\t  var _this = this;\n\t\n\t  Duplex.prototype._destroy.call(this, err, function (err2) {\n\t    cb(err2);\n\t    _this.emit('close');\n\t  });\n\t};\n\t\n\tfunction done(stream, er, data) {\n\t  if (er) return stream.emit('error', er);\n\t\n\t  if (data !== null && data !== undefined) stream.push(data);\n\t\n\t  // if there's nothing in the write buffer, then that means\n\t  // that nothing more will ever be provided\n\t  var ws = stream._writableState;\n\t  var ts = stream._transformState;\n\t\n\t  if (ws.length) throw new Error('Calling transform done when ws.length != 0');\n\t\n\t  if (ts.transforming) throw new Error('Calling transform done when still transforming');\n\t\n\t  return stream.push(null);\n\t}\n\n/***/ }),\n\n/***/ 409:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*<replacement>*/\n\t\n\tvar processNextTick = __webpack_require__(156);\n\t/*</replacement>*/\n\t\n\t// undocumented cb() API, needed for core, not for public API\n\tfunction destroy(err, cb) {\n\t  var _this = this;\n\t\n\t  var readableDestroyed = this._readableState && this._readableState.destroyed;\n\t  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\t\n\t  if (readableDestroyed || writableDestroyed) {\n\t    if (cb) {\n\t      cb(err);\n\t    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n\t      processNextTick(emitErrorNT, this, err);\n\t    }\n\t    return;\n\t  }\n\t\n\t  // we set destroyed to true before firing error callbacks in order\n\t  // to make it re-entrance safe in case destroy() is called within callbacks\n\t\n\t  if (this._readableState) {\n\t    this._readableState.destroyed = true;\n\t  }\n\t\n\t  // if this is a duplex stream mark the writable part as destroyed as well\n\t  if (this._writableState) {\n\t    this._writableState.destroyed = true;\n\t  }\n\t\n\t  this._destroy(err || null, function (err) {\n\t    if (!cb && err) {\n\t      processNextTick(emitErrorNT, _this, err);\n\t      if (_this._writableState) {\n\t        _this._writableState.errorEmitted = true;\n\t      }\n\t    } else if (cb) {\n\t      cb(err);\n\t    }\n\t  });\n\t}\n\t\n\tfunction undestroy() {\n\t  if (this._readableState) {\n\t    this._readableState.destroyed = false;\n\t    this._readableState.reading = false;\n\t    this._readableState.ended = false;\n\t    this._readableState.endEmitted = false;\n\t  }\n\t\n\t  if (this._writableState) {\n\t    this._writableState.destroyed = false;\n\t    this._writableState.ended = false;\n\t    this._writableState.ending = false;\n\t    this._writableState.finished = false;\n\t    this._writableState.errorEmitted = false;\n\t  }\n\t}\n\t\n\tfunction emitErrorNT(self, err) {\n\t  self.emit('error', err);\n\t}\n\t\n\tmodule.exports = {\n\t  destroy: destroy,\n\t  undestroy: undestroy\n\t};\n\n/***/ }),\n\n/***/ 410:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(194).EventEmitter;\n\n\n/***/ }),\n\n/***/ 80:\n/***/ (function(module, exports) {\n\n\tif (typeof Object.create === 'function') {\n\t  // implementation from standard node.js 'util' module\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    ctor.prototype = Object.create(superCtor.prototype, {\n\t      constructor: {\n\t        value: ctor,\n\t        enumerable: false,\n\t        writable: true,\n\t        configurable: true\n\t      }\n\t    });\n\t  };\n\t} else {\n\t  // old school shim for old browsers\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    var TempCtor = function () {}\n\t    TempCtor.prototype = superCtor.prototype\n\t    ctor.prototype = new TempCtor()\n\t    ctor.prototype.constructor = ctor\n\t  }\n\t}\n\n\n/***/ }),\n\n/***/ 518:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _gatsbyLink = __webpack_require__(54);\n\t\n\tvar _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);\n\t\n\tvar _semanticUiReact = __webpack_require__(59);\n\t\n\t__webpack_require__(96);\n\t\n\tvar _common = __webpack_require__(72);\n\t\n\tvar _papaparse = __webpack_require__(856);\n\t\n\tvar _papaparse2 = _interopRequireDefault(_papaparse);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n\tthis is supposed to become an up-to-date reading list synced from my PC\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */\n\t\n\tvar _URL = 'https://raw.githubusercontent.com/joetm/jonaso/master/reading_list/readinglist.csv';\n\t\n\t//dev\n\tvar documents = [{\n\t  fname: '++++++++++++D07-1074.pdf',\n\t  title: 'TITLE HERE',\n\t  author: 'AUTHOR HERE',\n\t  year: '2000',\n\t  keywords: ''\n\t}, {\n\t  fname: '+++++++++AAAI06-223.pdf',\n\t  title: 'TITLE HERE',\n\t  author: 'AUTHOR HERE',\n\t  year: '2000',\n\t  keywords: ''\n\t}, {\n\t  fname: '+++++++++ECIS_2009_taxonomy_final_3.pdf',\n\t  title: 'TITLE HERE',\n\t  author: 'AUTHOR HERE',\n\t  year: '2000',\n\t  keywords: ''\n\t}, {\n\t  fname: 'FOIS98.pdf',\n\t  title: 'TITLE HERE',\n\t  author: 'AUTHOR HERE',\n\t  year: '2000',\n\t  keywords: ''\n\t}];\n\t\n\tvar ReadingList = function (_React$Component) {\n\t  _inherits(ReadingList, _React$Component);\n\t\n\t  function ReadingList() {\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, ReadingList);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {\n\t      documents: []\n\t    }, _this.componentWillMount = function () {\n\t      _papaparse2.default.parse(_URL, {\n\t        download: true,\n\t        delimiter: \"|\",\n\t        header: true,\n\t        trimHeaders: true,\n\t        dynamicTyping: false,\n\t        preview: 0,\n\t        encoding: \"utf-8\",\n\t        // worker: false,\n\t        // comments: false,\n\t        // step: undefined,\n\t        // error: undefined,\n\t        skipEmptyLines: true,\n\t        // chunk: undefined,\n\t        // fastMode: undefined,\n\t        // beforeFirstChunk: undefined,\n\t        complete: function complete(results) {\n\t          // console.log(results)\n\t          _this.setState({ documents: results.data });\n\t        }\n\t      });\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  ReadingList.prototype.render = function render() {\n\t    var documents = this.state.documents;\n\t\n\t    return _react2.default.createElement(\n\t      \"div\",\n\t      null,\n\t      _react2.default.createElement(\n\t        _semanticUiReact.Container,\n\t        null,\n\t        _react2.default.createElement(\n\t          _semanticUiReact.Header,\n\t          { size: \"large\" },\n\t          \"Reading List\"\n\t        ),\n\t        _react2.default.createElement(\n\t          _semanticUiReact.Table,\n\t          { celled: true },\n\t          _react2.default.createElement(\n\t            _semanticUiReact.Table.Header,\n\t            null,\n\t            _react2.default.createElement(\n\t              _semanticUiReact.Table.Row,\n\t              null,\n\t              _react2.default.createElement(\n\t                _semanticUiReact.Table.HeaderCell,\n\t                null,\n\t                \"Filename\"\n\t              ),\n\t              _react2.default.createElement(\n\t                _semanticUiReact.Table.HeaderCell,\n\t                null,\n\t                \"Title\"\n\t              ),\n\t              _react2.default.createElement(\n\t                _semanticUiReact.Table.HeaderCell,\n\t                null,\n\t                \"Author\"\n\t              ),\n\t              _react2.default.createElement(\n\t                _semanticUiReact.Table.HeaderCell,\n\t                null,\n\t                \"Author Keywords\"\n\t              ),\n\t              _react2.default.createElement(\n\t                _semanticUiReact.Table.HeaderCell,\n\t                null,\n\t                \"# Pages\"\n\t              )\n\t            )\n\t          ),\n\t          _react2.default.createElement(\n\t            _semanticUiReact.Table.Body,\n\t            null,\n\t            documents.map(function (doc, idx) {\n\t              return _react2.default.createElement(\n\t                _semanticUiReact.Table.Row,\n\t                { key: \"row_\" + idx },\n\t                _react2.default.createElement(\n\t                  _semanticUiReact.Table.Cell,\n\t                  { textAlign: \"left\", width: \"one\" },\n\t                  _react2.default.createElement(\n\t                    _semanticUiReact.Label,\n\t                    null,\n\t                    doc.filename\n\t                  )\n\t                ),\n\t                _react2.default.createElement(\n\t                  _semanticUiReact.Table.Cell,\n\t                  { textAlign: \"left\" },\n\t                  doc.title\n\t                ),\n\t                _react2.default.createElement(\n\t                  _semanticUiReact.Table.Cell,\n\t                  { textAlign: \"left\", width: \"two\" },\n\t                  doc.author\n\t                ),\n\t                _react2.default.createElement(\n\t                  _semanticUiReact.Table.Cell,\n\t                  { textAlign: \"left\", width: \"two\" },\n\t                  doc.keywords\n\t                ),\n\t                _react2.default.createElement(\n\t                  _semanticUiReact.Table.Cell,\n\t                  { textAlign: \"left\", width: \"one\" },\n\t                  doc.numPages\n\t                )\n\t              );\n\t            })\n\t          )\n\t        ),\n\t        _react2.default.createElement(\"div\", { style: _common.spacer })\n\t      )\n\t    );\n\t  };\n\t\n\t  return ReadingList;\n\t}(_react2.default.Component);\n\t\n\texports.default = ReadingList;\n\tmodule.exports = exports[\"default\"];\n\n/***/ }),\n\n/***/ 533:\n/***/ (function(module, exports) {\n\n\t'use strict'\n\t\n\texports.byteLength = byteLength\n\texports.toByteArray = toByteArray\n\texports.fromByteArray = fromByteArray\n\t\n\tvar lookup = []\n\tvar revLookup = []\n\tvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\t\n\tvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n\tfor (var i = 0, len = code.length; i < len; ++i) {\n\t  lookup[i] = code[i]\n\t  revLookup[code.charCodeAt(i)] = i\n\t}\n\t\n\trevLookup['-'.charCodeAt(0)] = 62\n\trevLookup['_'.charCodeAt(0)] = 63\n\t\n\tfunction placeHoldersCount (b64) {\n\t  var len = b64.length\n\t  if (len % 4 > 0) {\n\t    throw new Error('Invalid string. Length must be a multiple of 4')\n\t  }\n\t\n\t  // the number of equal signs (place holders)\n\t  // if there are two placeholders, than the two characters before it\n\t  // represent one byte\n\t  // if there is only one, then the three characters before it represent 2 bytes\n\t  // this is just a cheap hack to not do indexOf twice\n\t  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n\t}\n\t\n\tfunction byteLength (b64) {\n\t  // base64 is 4/3 + up to two characters of the original data\n\t  return (b64.length * 3 / 4) - placeHoldersCount(b64)\n\t}\n\t\n\tfunction toByteArray (b64) {\n\t  var i, l, tmp, placeHolders, arr\n\t  var len = b64.length\n\t  placeHolders = placeHoldersCount(b64)\n\t\n\t  arr = new Arr((len * 3 / 4) - placeHolders)\n\t\n\t  // if there are placeholders, only get up to the last complete 4 chars\n\t  l = placeHolders > 0 ? len - 4 : len\n\t\n\t  var L = 0\n\t\n\t  for (i = 0; i < l; i += 4) {\n\t    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n\t    arr[L++] = (tmp >> 16) & 0xFF\n\t    arr[L++] = (tmp >> 8) & 0xFF\n\t    arr[L++] = tmp & 0xFF\n\t  }\n\t\n\t  if (placeHolders === 2) {\n\t    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n\t    arr[L++] = tmp & 0xFF\n\t  } else if (placeHolders === 1) {\n\t    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n\t    arr[L++] = (tmp >> 8) & 0xFF\n\t    arr[L++] = tmp & 0xFF\n\t  }\n\t\n\t  return arr\n\t}\n\t\n\tfunction tripletToBase64 (num) {\n\t  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n\t}\n\t\n\tfunction encodeChunk (uint8, start, end) {\n\t  var tmp\n\t  var output = []\n\t  for (var i = start; i < end; i += 3) {\n\t    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t    output.push(tripletToBase64(tmp))\n\t  }\n\t  return output.join('')\n\t}\n\t\n\tfunction fromByteArray (uint8) {\n\t  var tmp\n\t  var len = uint8.length\n\t  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n\t  var output = ''\n\t  var parts = []\n\t  var maxChunkLength = 16383 // must be multiple of 3\n\t\n\t  // go through the array every three bytes, we'll deal with trailing stuff later\n\t  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n\t    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n\t  }\n\t\n\t  // pad the end with zeros, but make sure to not forget the extra bytes\n\t  if (extraBytes === 1) {\n\t    tmp = uint8[len - 1]\n\t    output += lookup[tmp >> 2]\n\t    output += lookup[(tmp << 4) & 0x3F]\n\t    output += '=='\n\t  } else if (extraBytes === 2) {\n\t    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n\t    output += lookup[tmp >> 10]\n\t    output += lookup[(tmp >> 4) & 0x3F]\n\t    output += lookup[(tmp << 2) & 0x3F]\n\t    output += '='\n\t  }\n\t\n\t  parts.push(output)\n\t\n\t  return parts.join('')\n\t}\n\n\n/***/ }),\n\n/***/ 662:\n/***/ (function(module, exports) {\n\n\texports.read = function (buffer, offset, isLE, mLen, nBytes) {\n\t  var e, m\n\t  var eLen = nBytes * 8 - mLen - 1\n\t  var eMax = (1 << eLen) - 1\n\t  var eBias = eMax >> 1\n\t  var nBits = -7\n\t  var i = isLE ? (nBytes - 1) : 0\n\t  var d = isLE ? -1 : 1\n\t  var s = buffer[offset + i]\n\t\n\t  i += d\n\t\n\t  e = s & ((1 << (-nBits)) - 1)\n\t  s >>= (-nBits)\n\t  nBits += eLen\n\t  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\t\n\t  m = e & ((1 << (-nBits)) - 1)\n\t  e >>= (-nBits)\n\t  nBits += mLen\n\t  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\t\n\t  if (e === 0) {\n\t    e = 1 - eBias\n\t  } else if (e === eMax) {\n\t    return m ? NaN : ((s ? -1 : 1) * Infinity)\n\t  } else {\n\t    m = m + Math.pow(2, mLen)\n\t    e = e - eBias\n\t  }\n\t  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n\t}\n\t\n\texports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n\t  var e, m, c\n\t  var eLen = nBytes * 8 - mLen - 1\n\t  var eMax = (1 << eLen) - 1\n\t  var eBias = eMax >> 1\n\t  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n\t  var i = isLE ? 0 : (nBytes - 1)\n\t  var d = isLE ? 1 : -1\n\t  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\t\n\t  value = Math.abs(value)\n\t\n\t  if (isNaN(value) || value === Infinity) {\n\t    m = isNaN(value) ? 1 : 0\n\t    e = eMax\n\t  } else {\n\t    e = Math.floor(Math.log(value) / Math.LN2)\n\t    if (value * (c = Math.pow(2, -e)) < 1) {\n\t      e--\n\t      c *= 2\n\t    }\n\t    if (e + eBias >= 1) {\n\t      value += rt / c\n\t    } else {\n\t      value += rt * Math.pow(2, 1 - eBias)\n\t    }\n\t    if (value * c >= 2) {\n\t      e++\n\t      c /= 2\n\t    }\n\t\n\t    if (e + eBias >= eMax) {\n\t      m = 0\n\t      e = eMax\n\t    } else if (e + eBias >= 1) {\n\t      m = (value * c - 1) * Math.pow(2, mLen)\n\t      e = e + eBias\n\t    } else {\n\t      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n\t      e = 0\n\t    }\n\t  }\n\t\n\t  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\t\n\t  e = (e << mLen) | m\n\t  eLen += mLen\n\t  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\t\n\t  buffer[offset + i - d] |= s * 128\n\t}\n\n\n/***/ }),\n\n/***/ 856:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*@license\n\t\tPapa Parse\n\t\tv4.6.0\n\t\thttps://github.com/mholt/PapaParse\n\t\tLicense: MIT\n\t*/\n\t(function(root, factory)\n\t{\n\t\t/* globals define */\n\t\tif (true)\n\t\t{\n\t\t\t// AMD. Register as an anonymous module.\n\t\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t}\n\t\telse if (typeof module === 'object' && typeof exports !== 'undefined')\n\t\t{\n\t\t\t// Node. Does not work with strict CommonJS, but\n\t\t\t// only CommonJS-like environments that support module.exports,\n\t\t\t// like Node.\n\t\t\tmodule.exports = factory();\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Browser globals (root is window)\n\t\t\troot.Papa = factory();\n\t\t}\n\t}(this, function()\n\t{\n\t\t'use strict';\n\t\n\t\tvar global = (function() {\n\t\t\t// alternative method, similar to `Function('return this')()`\n\t\t\t// but without using `eval` (which is disabled when\n\t\t\t// using Content Security Policy).\n\t\n\t\t\tif (typeof self !== 'undefined') { return self; }\n\t\t\tif (typeof window !== 'undefined') { return window; }\n\t\t\tif (typeof global !== 'undefined') { return global; }\n\t\n\t\t\t// When running tests none of the above have been defined\n\t\t\treturn {};\n\t\t})();\n\t\n\t\n\t\tvar IS_WORKER = !global.document && !!global.postMessage,\n\t\t\tIS_PAPA_WORKER = IS_WORKER && /(\\?|&)papaworker(=|&|$)/.test(global.location.search),\n\t\t\tLOADED_SYNC = false, AUTO_SCRIPT_PATH;\n\t\tvar workers = {}, workerIdCounter = 0;\n\t\n\t\tvar Papa = {};\n\t\n\t\tPapa.parse = CsvToJson;\n\t\tPapa.unparse = JsonToCsv;\n\t\n\t\tPapa.RECORD_SEP = String.fromCharCode(30);\n\t\tPapa.UNIT_SEP = String.fromCharCode(31);\n\t\tPapa.BYTE_ORDER_MARK = '\\ufeff';\n\t\tPapa.BAD_DELIMITERS = ['\\r', '\\n', '\"', Papa.BYTE_ORDER_MARK];\n\t\tPapa.WORKERS_SUPPORTED = !IS_WORKER && !!global.Worker;\n\t\tPapa.SCRIPT_PATH = null;\t// Must be set by your code if you use workers and this lib is loaded asynchronously\n\t\tPapa.NODE_STREAM_INPUT = 1;\n\t\n\t\t// Configurable chunk sizes for local and remote files, respectively\n\t\tPapa.LocalChunkSize = 1024 * 1024 * 10;\t// 10 MB\n\t\tPapa.RemoteChunkSize = 1024 * 1024 * 5;\t// 5 MB\n\t\tPapa.DefaultDelimiter = ',';\t\t\t// Used if not specified and detection fails\n\t\n\t\t// Exposed for testing and development only\n\t\tPapa.Parser = Parser;\n\t\tPapa.ParserHandle = ParserHandle;\n\t\tPapa.NetworkStreamer = NetworkStreamer;\n\t\tPapa.FileStreamer = FileStreamer;\n\t\tPapa.StringStreamer = StringStreamer;\n\t\tPapa.ReadableStreamStreamer = ReadableStreamStreamer;\n\t\tPapa.DuplexStreamStreamer = DuplexStreamStreamer;\n\t\n\t\tif (global.jQuery)\n\t\t{\n\t\t\tvar $ = global.jQuery;\n\t\t\t$.fn.parse = function(options)\n\t\t\t{\n\t\t\t\tvar config = options.config || {};\n\t\t\t\tvar queue = [];\n\t\n\t\t\t\tthis.each(function(idx)\n\t\t\t\t{\n\t\t\t\t\tvar supported = $(this).prop('tagName').toUpperCase() === 'INPUT'\n\t\t\t\t\t\t\t\t\t&& $(this).attr('type').toLowerCase() === 'file'\n\t\t\t\t\t\t\t\t\t&& global.FileReader;\n\t\n\t\t\t\t\tif (!supported || !this.files || this.files.length === 0)\n\t\t\t\t\t\treturn true;\t// continue to next input element\n\t\n\t\t\t\t\tfor (var i = 0; i < this.files.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tqueue.push({\n\t\t\t\t\t\t\tfile: this.files[i],\n\t\t\t\t\t\t\tinputElem: this,\n\t\t\t\t\t\t\tinstanceConfig: $.extend({}, config)\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\t\t\tparseNextFile();\t// begin parsing\n\t\t\t\treturn this;\t\t// maintains chainability\n\t\n\t\n\t\t\t\tfunction parseNextFile()\n\t\t\t\t{\n\t\t\t\t\tif (queue.length === 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (isFunction(options.complete))\n\t\t\t\t\t\t\toptions.complete();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar f = queue[0];\n\t\n\t\t\t\t\tif (isFunction(options.before))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar returned = options.before(f.file, f.inputElem);\n\t\n\t\t\t\t\t\tif (typeof returned === 'object')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (returned.action === 'abort')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\terror('AbortError', f.file, f.inputElem, returned.reason);\n\t\t\t\t\t\t\t\treturn;\t// Aborts all queued files immediately\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (returned.action === 'skip')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfileComplete();\t// parse the next file in the queue, if any\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (typeof returned.config === 'object')\n\t\t\t\t\t\t\t\tf.instanceConfig = $.extend(f.instanceConfig, returned.config);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (returned === 'skip')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfileComplete();\t// parse the next file in the queue, if any\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Wrap up the user's complete callback, if any, so that ours also gets executed\n\t\t\t\t\tvar userCompleteFunc = f.instanceConfig.complete;\n\t\t\t\t\tf.instanceConfig.complete = function(results)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (isFunction(userCompleteFunc))\n\t\t\t\t\t\t\tuserCompleteFunc(results, f.file, f.inputElem);\n\t\t\t\t\t\tfileComplete();\n\t\t\t\t\t};\n\t\n\t\t\t\t\tPapa.parse(f.file, f.instanceConfig);\n\t\t\t\t}\n\t\n\t\t\t\tfunction error(name, file, elem, reason)\n\t\t\t\t{\n\t\t\t\t\tif (isFunction(options.error))\n\t\t\t\t\t\toptions.error({name: name}, file, elem, reason);\n\t\t\t\t}\n\t\n\t\t\t\tfunction fileComplete()\n\t\t\t\t{\n\t\t\t\t\tqueue.splice(0, 1);\n\t\t\t\t\tparseNextFile();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\n\t\n\t\tif (IS_PAPA_WORKER)\n\t\t{\n\t\t\tglobal.onmessage = workerThreadReceivedMessage;\n\t\t}\n\t\telse if (Papa.WORKERS_SUPPORTED)\n\t\t{\n\t\t\tAUTO_SCRIPT_PATH = getScriptPath();\n\t\n\t\t\t// Check if the script was loaded synchronously\n\t\t\tif (!document.body)\n\t\t\t{\n\t\t\t\t// Body doesn't exist yet, must be synchronous\n\t\t\t\tLOADED_SYNC = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdocument.addEventListener('DOMContentLoaded', function() {\n\t\t\t\t\tLOADED_SYNC = true;\n\t\t\t\t}, true);\n\t\t\t}\n\t\t}\n\t\n\t\n\t\n\t\n\t\tfunction CsvToJson(_input, _config)\n\t\t{\n\t\t\t_config = _config || {};\n\t\t\tvar dynamicTyping = _config.dynamicTyping || false;\n\t\t\tif (isFunction(dynamicTyping)) {\n\t\t\t\t_config.dynamicTypingFunction = dynamicTyping;\n\t\t\t\t// Will be filled on first row call\n\t\t\t\tdynamicTyping = {};\n\t\t\t}\n\t\t\t_config.dynamicTyping = dynamicTyping;\n\t\n\t\t\t_config.transform = isFunction(_config.transform) ? _config.transform : false;\n\t\n\t\t\tif (_config.worker && Papa.WORKERS_SUPPORTED)\n\t\t\t{\n\t\t\t\tvar w = newWorker();\n\t\n\t\t\t\tw.userStep = _config.step;\n\t\t\t\tw.userChunk = _config.chunk;\n\t\t\t\tw.userComplete = _config.complete;\n\t\t\t\tw.userError = _config.error;\n\t\n\t\t\t\t_config.step = isFunction(_config.step);\n\t\t\t\t_config.chunk = isFunction(_config.chunk);\n\t\t\t\t_config.complete = isFunction(_config.complete);\n\t\t\t\t_config.error = isFunction(_config.error);\n\t\t\t\tdelete _config.worker;\t// prevent infinite loop\n\t\n\t\t\t\tw.postMessage({\n\t\t\t\t\tinput: _input,\n\t\t\t\t\tconfig: _config,\n\t\t\t\t\tworkerId: w.id\n\t\t\t\t});\n\t\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tvar streamer = null;\n\t\t\tif (_input === Papa.NODE_STREAM_INPUT)\n\t\t\t{\n\t\t\t\t// create a node Duplex stream for use\n\t\t\t\t// with .pipe\n\t\t\t\tstreamer = new DuplexStreamStreamer(_config);\n\t\t\t\treturn streamer.getStream();\n\t\t\t}\n\t\t\telse if (typeof _input === 'string')\n\t\t\t{\n\t\t\t\tif (_config.download)\n\t\t\t\t\tstreamer = new NetworkStreamer(_config);\n\t\t\t\telse\n\t\t\t\t\tstreamer = new StringStreamer(_config);\n\t\t\t}\n\t\t\telse if (_input.readable === true && isFunction(_input.read) && isFunction(_input.on))\n\t\t\t{\n\t\t\t\tstreamer = new ReadableStreamStreamer(_config);\n\t\t\t}\n\t\t\telse if ((global.File && _input instanceof File) || _input instanceof Object)\t// ...Safari. (see issue #106)\n\t\t\t\tstreamer = new FileStreamer(_config);\n\t\n\t\t\treturn streamer.stream(_input);\n\t\t}\n\t\n\t\n\t\n\t\n\t\n\t\n\t\tfunction JsonToCsv(_input, _config)\n\t\t{\n\t\t\t// Default configuration\n\t\n\t\t\t/** whether to surround every datum with quotes */\n\t\t\tvar _quotes = false;\n\t\n\t\t\t/** whether to write headers */\n\t\t\tvar _writeHeader = true;\n\t\n\t\t\t/** delimiting character(s) */\n\t\t\tvar _delimiter = ',';\n\t\n\t\t\t/** newline character(s) */\n\t\t\tvar _newline = '\\r\\n';\n\t\n\t\t\t/** quote character */\n\t\t\tvar _quoteChar = '\"';\n\t\n\t\t\tunpackConfig();\n\t\n\t\t\tvar quoteCharRegex = new RegExp(_quoteChar, 'g');\n\t\n\t\t\tif (typeof _input === 'string')\n\t\t\t\t_input = JSON.parse(_input);\n\t\n\t\t\tif (_input instanceof Array)\n\t\t\t{\n\t\t\t\tif (!_input.length || _input[0] instanceof Array)\n\t\t\t\t\treturn serialize(null, _input);\n\t\t\t\telse if (typeof _input[0] === 'object')\n\t\t\t\t\treturn serialize(objectKeys(_input[0]), _input);\n\t\t\t}\n\t\t\telse if (typeof _input === 'object')\n\t\t\t{\n\t\t\t\tif (typeof _input.data === 'string')\n\t\t\t\t\t_input.data = JSON.parse(_input.data);\n\t\n\t\t\t\tif (_input.data instanceof Array)\n\t\t\t\t{\n\t\t\t\t\tif (!_input.fields)\n\t\t\t\t\t\t_input.fields =  _input.meta && _input.meta.fields;\n\t\n\t\t\t\t\tif (!_input.fields)\n\t\t\t\t\t\t_input.fields =  _input.data[0] instanceof Array\n\t\t\t\t\t\t\t? _input.fields\n\t\t\t\t\t\t\t: objectKeys(_input.data[0]);\n\t\n\t\t\t\t\tif (!(_input.data[0] instanceof Array) && typeof _input.data[0] !== 'object')\n\t\t\t\t\t\t_input.data = [_input.data];\t// handles input like [1,2,3] or ['asdf']\n\t\t\t\t}\n\t\n\t\t\t\treturn serialize(_input.fields || [], _input.data || []);\n\t\t\t}\n\t\n\t\t\t// Default (any valid paths should return before this)\n\t\t\tthrow 'exception: Unable to serialize unrecognized input';\n\t\n\t\n\t\t\tfunction unpackConfig()\n\t\t\t{\n\t\t\t\tif (typeof _config !== 'object')\n\t\t\t\t\treturn;\n\t\n\t\t\t\tif (typeof _config.delimiter === 'string'\n\t                && !Papa.BAD_DELIMITERS.filter(function(value) { return _config.delimiter.indexOf(value) !== -1; }).length)\n\t\t\t\t{\n\t\t\t\t\t_delimiter = _config.delimiter;\n\t\t\t\t}\n\t\n\t\t\t\tif (typeof _config.quotes === 'boolean'\n\t\t\t\t\t|| _config.quotes instanceof Array)\n\t\t\t\t\t_quotes = _config.quotes;\n\t\n\t\t\t\tif (typeof _config.newline === 'string')\n\t\t\t\t\t_newline = _config.newline;\n\t\n\t\t\t\tif (typeof _config.quoteChar === 'string')\n\t\t\t\t\t_quoteChar = _config.quoteChar;\n\t\n\t\t\t\tif (typeof _config.header === 'boolean')\n\t\t\t\t\t_writeHeader = _config.header;\n\t\t\t}\n\t\n\t\n\t\t\t/** Turns an object's keys into an array */\n\t\t\tfunction objectKeys(obj)\n\t\t\t{\n\t\t\t\tif (typeof obj !== 'object')\n\t\t\t\t\treturn [];\n\t\t\t\tvar keys = [];\n\t\t\t\tfor (var key in obj)\n\t\t\t\t\tkeys.push(key);\n\t\t\t\treturn keys;\n\t\t\t}\n\t\n\t\t\t/** The double for loop that iterates the data and writes out a CSV string including header row */\n\t\t\tfunction serialize(fields, data)\n\t\t\t{\n\t\t\t\tvar csv = '';\n\t\n\t\t\t\tif (typeof fields === 'string')\n\t\t\t\t\tfields = JSON.parse(fields);\n\t\t\t\tif (typeof data === 'string')\n\t\t\t\t\tdata = JSON.parse(data);\n\t\n\t\t\t\tvar hasHeader = fields instanceof Array && fields.length > 0;\n\t\t\t\tvar dataKeyedByField = !(data[0] instanceof Array);\n\t\n\t\t\t\t// If there a header row, write it first\n\t\t\t\tif (hasHeader && _writeHeader)\n\t\t\t\t{\n\t\t\t\t\tfor (var i = 0; i < fields.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (i > 0)\n\t\t\t\t\t\t\tcsv += _delimiter;\n\t\t\t\t\t\tcsv += safe(fields[i], i);\n\t\t\t\t\t}\n\t\t\t\t\tif (data.length > 0)\n\t\t\t\t\t\tcsv += _newline;\n\t\t\t\t}\n\t\n\t\t\t\t// Then write out the data\n\t\t\t\tfor (var row = 0; row < data.length; row++)\n\t\t\t\t{\n\t\t\t\t\tvar maxCol = hasHeader ? fields.length : data[row].length;\n\t\n\t\t\t\t\tfor (var col = 0; col < maxCol; col++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (col > 0)\n\t\t\t\t\t\t\tcsv += _delimiter;\n\t\t\t\t\t\tvar colIdx = hasHeader && dataKeyedByField ? fields[col] : col;\n\t\t\t\t\t\tcsv += safe(data[row][colIdx], col);\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (row < data.length - 1)\n\t\t\t\t\t\tcsv += _newline;\n\t\t\t\t}\n\t\n\t\t\t\treturn csv;\n\t\t\t}\n\t\n\t\t\t/** Encloses a value around quotes if needed (makes a value safe for CSV insertion) */\n\t\t\tfunction safe(str, col)\n\t\t\t{\n\t\t\t\tif (typeof str === 'undefined' || str === null)\n\t\t\t\t\treturn '';\n\t\n\t\t\t\tif (str.constructor === Date)\n\t\t\t\t\treturn JSON.stringify(str).slice(1, 25);\n\t\n\t\t\t\tstr = str.toString().replace(quoteCharRegex, _quoteChar + _quoteChar);\n\t\n\t\t\t\tvar needsQuotes = (typeof _quotes === 'boolean' && _quotes)\n\t\t\t\t\t\t\t\t|| (_quotes instanceof Array && _quotes[col])\n\t\t\t\t\t\t\t\t|| hasAny(str, Papa.BAD_DELIMITERS)\n\t\t\t\t\t\t\t\t|| str.indexOf(_delimiter) > -1\n\t\t\t\t\t\t\t\t|| str.charAt(0) === ' '\n\t\t\t\t\t\t\t\t|| str.charAt(str.length - 1) === ' ';\n\t\n\t\t\t\treturn needsQuotes ? _quoteChar + str + _quoteChar : str;\n\t\t\t}\n\t\n\t\t\tfunction hasAny(str, substrings)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < substrings.length; i++)\n\t\t\t\t\tif (str.indexOf(substrings[i]) > -1)\n\t\t\t\t\t\treturn true;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\n\t\t/** ChunkStreamer is the base prototype for various streamer implementations. */\n\t\tfunction ChunkStreamer(config)\n\t\t{\n\t\t\tthis._handle = null;\n\t\t\tthis._finished = false;\n\t\t\tthis._completed = false;\n\t\t\tthis._input = null;\n\t\t\tthis._baseIndex = 0;\n\t\t\tthis._partialLine = '';\n\t\t\tthis._rowCount = 0;\n\t\t\tthis._start = 0;\n\t\t\tthis._nextChunk = null;\n\t\t\tthis.isFirstChunk = true;\n\t\t\tthis._completeResults = {\n\t\t\t\tdata: [],\n\t\t\t\terrors: [],\n\t\t\t\tmeta: {}\n\t\t\t};\n\t\t\treplaceConfig.call(this, config);\n\t\n\t\t\tthis.parseChunk = function(chunk, isFakeChunk)\n\t\t\t{\n\t\t\t\t// First chunk pre-processing\n\t\t\t\tif (this.isFirstChunk && isFunction(this._config.beforeFirstChunk))\n\t\t\t\t{\n\t\t\t\t\tvar modifiedChunk = this._config.beforeFirstChunk(chunk);\n\t\t\t\t\tif (modifiedChunk !== undefined)\n\t\t\t\t\t\tchunk = modifiedChunk;\n\t\t\t\t}\n\t\t\t\tthis.isFirstChunk = false;\n\t\n\t\t\t\t// Rejoin the line we likely just split in two by chunking the file\n\t\t\t\tvar aggregate = this._partialLine + chunk;\n\t\t\t\tthis._partialLine = '';\n\t\n\t\t\t\tvar results = this._handle.parse(aggregate, this._baseIndex, !this._finished);\n\t\n\t\t\t\tif (this._handle.paused() || this._handle.aborted())\n\t\t\t\t\treturn;\n\t\n\t\t\t\tvar lastIndex = results.meta.cursor;\n\t\n\t\t\t\tif (!this._finished)\n\t\t\t\t{\n\t\t\t\t\tthis._partialLine = aggregate.substring(lastIndex - this._baseIndex);\n\t\t\t\t\tthis._baseIndex = lastIndex;\n\t\t\t\t}\n\t\n\t\t\t\tif (results && results.data)\n\t\t\t\t\tthis._rowCount += results.data.length;\n\t\n\t\t\t\tvar finishedIncludingPreview = this._finished || (this._config.preview && this._rowCount >= this._config.preview);\n\t\n\t\t\t\tif (IS_PAPA_WORKER)\n\t\t\t\t{\n\t\t\t\t\tglobal.postMessage({\n\t\t\t\t\t\tresults: results,\n\t\t\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\t\t\tfinished: finishedIncludingPreview\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse if (isFunction(this._config.chunk) && !isFakeChunk)\n\t\t\t\t{\n\t\t\t\t\tthis._config.chunk(results, this._handle);\n\t\t\t\t\tif (this._handle.paused() || this._handle.aborted())\n\t\t\t\t\t\treturn;\n\t\t\t\t\tresults = undefined;\n\t\t\t\t\tthis._completeResults = undefined;\n\t\t\t\t}\n\t\n\t\t\t\tif (!this._config.step && !this._config.chunk) {\n\t\t\t\t\tthis._completeResults.data = this._completeResults.data.concat(results.data);\n\t\t\t\t\tthis._completeResults.errors = this._completeResults.errors.concat(results.errors);\n\t\t\t\t\tthis._completeResults.meta = results.meta;\n\t\t\t\t}\n\t\n\t\t\t\tif (!this._completed && finishedIncludingPreview && isFunction(this._config.complete) && (!results || !results.meta.aborted)) {\n\t\t\t\t\tthis._config.complete(this._completeResults, this._input);\n\t\t\t\t\tthis._completed = true;\n\t\t\t\t}\n\t\n\t\t\t\tif (!finishedIncludingPreview && (!results || !results.meta.paused))\n\t\t\t\t\tthis._nextChunk();\n\t\n\t\t\t\treturn results;\n\t\t\t};\n\t\n\t\t\tthis._sendError = function(error)\n\t\t\t{\n\t\t\t\tif (isFunction(this._config.error))\n\t\t\t\t\tthis._config.error(error);\n\t\t\t\telse if (IS_PAPA_WORKER && this._config.error)\n\t\t\t\t{\n\t\t\t\t\tglobal.postMessage({\n\t\t\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\t\t\terror: error,\n\t\t\t\t\t\tfinished: false\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tfunction replaceConfig(config)\n\t\t\t{\n\t\t\t\t// Deep-copy the config so we can edit it\n\t\t\t\tvar configCopy = copy(config);\n\t\t\t\tconfigCopy.chunkSize = parseInt(configCopy.chunkSize);\t// parseInt VERY important so we don't concatenate strings!\n\t\t\t\tif (!config.step && !config.chunk)\n\t\t\t\t\tconfigCopy.chunkSize = null;  // disable Range header if not streaming; bad values break IIS - see issue #196\n\t\t\t\tthis._handle = new ParserHandle(configCopy);\n\t\t\t\tthis._handle.streamer = this;\n\t\t\t\tthis._config = configCopy;\t// persist the copy to the caller\n\t\t\t}\n\t\t}\n\t\n\t\n\t\tfunction NetworkStreamer(config)\n\t\t{\n\t\t\tconfig = config || {};\n\t\t\tif (!config.chunkSize)\n\t\t\t\tconfig.chunkSize = Papa.RemoteChunkSize;\n\t\t\tChunkStreamer.call(this, config);\n\t\n\t\t\tvar xhr;\n\t\n\t\t\tif (IS_WORKER)\n\t\t\t{\n\t\t\t\tthis._nextChunk = function()\n\t\t\t\t{\n\t\t\t\t\tthis._readChunk();\n\t\t\t\t\tthis._chunkLoaded();\n\t\t\t\t};\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis._nextChunk = function()\n\t\t\t\t{\n\t\t\t\t\tthis._readChunk();\n\t\t\t\t};\n\t\t\t}\n\t\n\t\t\tthis.stream = function(url)\n\t\t\t{\n\t\t\t\tthis._input = url;\n\t\t\t\tthis._nextChunk();\t// Starts streaming\n\t\t\t};\n\t\n\t\t\tthis._readChunk = function()\n\t\t\t{\n\t\t\t\tif (this._finished)\n\t\t\t\t{\n\t\t\t\t\tthis._chunkLoaded();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\txhr = new XMLHttpRequest();\n\t\n\t\t\t\tif (this._config.withCredentials)\n\t\t\t\t{\n\t\t\t\t\txhr.withCredentials = this._config.withCredentials;\n\t\t\t\t}\n\t\n\t\t\t\tif (!IS_WORKER)\n\t\t\t\t{\n\t\t\t\t\txhr.onload = bindFunction(this._chunkLoaded, this);\n\t\t\t\t\txhr.onerror = bindFunction(this._chunkError, this);\n\t\t\t\t}\n\t\n\t\t\t\txhr.open('GET', this._input, !IS_WORKER);\n\t\t\t\t// Headers can only be set when once the request state is OPENED\n\t\t\t\tif (this._config.downloadRequestHeaders)\n\t\t\t\t{\n\t\t\t\t\tvar headers = this._config.downloadRequestHeaders;\n\t\n\t\t\t\t\tfor (var headerName in headers)\n\t\t\t\t\t{\n\t\t\t\t\t\txhr.setRequestHeader(headerName, headers[headerName]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tif (this._config.chunkSize)\n\t\t\t\t{\n\t\t\t\t\tvar end = this._start + this._config.chunkSize - 1;\t// minus one because byte range is inclusive\n\t\t\t\t\txhr.setRequestHeader('Range', 'bytes=' + this._start + '-' + end);\n\t\t\t\t\txhr.setRequestHeader('If-None-Match', 'webkit-no-cache'); // https://bugs.webkit.org/show_bug.cgi?id=82672\n\t\t\t\t}\n\t\n\t\t\t\ttry {\n\t\t\t\t\txhr.send();\n\t\t\t\t}\n\t\t\t\tcatch (err) {\n\t\t\t\t\tthis._chunkError(err.message);\n\t\t\t\t}\n\t\n\t\t\t\tif (IS_WORKER && xhr.status === 0)\n\t\t\t\t\tthis._chunkError();\n\t\t\t\telse\n\t\t\t\t\tthis._start += this._config.chunkSize;\n\t\t\t};\n\t\n\t\t\tthis._chunkLoaded = function()\n\t\t\t{\n\t\t\t\tif (xhr.readyState !== 4)\n\t\t\t\t\treturn;\n\t\n\t\t\t\tif (xhr.status < 200 || xhr.status >= 400)\n\t\t\t\t{\n\t\t\t\t\tthis._chunkError();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tthis._finished = !this._config.chunkSize || this._start > getFileSize(xhr);\n\t\t\t\tthis.parseChunk(xhr.responseText);\n\t\t\t};\n\t\n\t\t\tthis._chunkError = function(errorMessage)\n\t\t\t{\n\t\t\t\tvar errorText = xhr.statusText || errorMessage;\n\t\t\t\tthis._sendError(new Error(errorText));\n\t\t\t};\n\t\n\t\t\tfunction getFileSize(xhr)\n\t\t\t{\n\t\t\t\tvar contentRange = xhr.getResponseHeader('Content-Range');\n\t\t\t\tif (contentRange === null) { // no content range, then finish!\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\treturn parseInt(contentRange.substr(contentRange.lastIndexOf('/') + 1));\n\t\t\t}\n\t\t}\n\t\tNetworkStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\t\tNetworkStreamer.prototype.constructor = NetworkStreamer;\n\t\n\t\n\t\tfunction FileStreamer(config)\n\t\t{\n\t\t\tconfig = config || {};\n\t\t\tif (!config.chunkSize)\n\t\t\t\tconfig.chunkSize = Papa.LocalChunkSize;\n\t\t\tChunkStreamer.call(this, config);\n\t\n\t\t\tvar reader, slice;\n\t\n\t\t\t// FileReader is better than FileReaderSync (even in worker) - see http://stackoverflow.com/q/24708649/1048862\n\t\t\t// But Firefox is a pill, too - see issue #76: https://github.com/mholt/PapaParse/issues/76\n\t\t\tvar usingAsyncReader = typeof FileReader !== 'undefined';\t// Safari doesn't consider it a function - see issue #105\n\t\n\t\t\tthis.stream = function(file)\n\t\t\t{\n\t\t\t\tthis._input = file;\n\t\t\t\tslice = file.slice || file.webkitSlice || file.mozSlice;\n\t\n\t\t\t\tif (usingAsyncReader)\n\t\t\t\t{\n\t\t\t\t\treader = new FileReader();\t\t// Preferred method of reading files, even in workers\n\t\t\t\t\treader.onload = bindFunction(this._chunkLoaded, this);\n\t\t\t\t\treader.onerror = bindFunction(this._chunkError, this);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\treader = new FileReaderSync();\t// Hack for running in a web worker in Firefox\n\t\n\t\t\t\tthis._nextChunk();\t// Starts streaming\n\t\t\t};\n\t\n\t\t\tthis._nextChunk = function()\n\t\t\t{\n\t\t\t\tif (!this._finished && (!this._config.preview || this._rowCount < this._config.preview))\n\t\t\t\t\tthis._readChunk();\n\t\t\t};\n\t\n\t\t\tthis._readChunk = function()\n\t\t\t{\n\t\t\t\tvar input = this._input;\n\t\t\t\tif (this._config.chunkSize)\n\t\t\t\t{\n\t\t\t\t\tvar end = Math.min(this._start + this._config.chunkSize, this._input.size);\n\t\t\t\t\tinput = slice.call(input, this._start, end);\n\t\t\t\t}\n\t\t\t\tvar txt = reader.readAsText(input, this._config.encoding);\n\t\t\t\tif (!usingAsyncReader)\n\t\t\t\t\tthis._chunkLoaded({ target: { result: txt } });\t// mimic the async signature\n\t\t\t};\n\t\n\t\t\tthis._chunkLoaded = function(event)\n\t\t\t{\n\t\t\t\t// Very important to increment start each time before handling results\n\t\t\t\tthis._start += this._config.chunkSize;\n\t\t\t\tthis._finished = !this._config.chunkSize || this._start >= this._input.size;\n\t\t\t\tthis.parseChunk(event.target.result);\n\t\t\t};\n\t\n\t\t\tthis._chunkError = function()\n\t\t\t{\n\t\t\t\tthis._sendError(reader.error);\n\t\t\t};\n\t\n\t\t}\n\t\tFileStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\t\tFileStreamer.prototype.constructor = FileStreamer;\n\t\n\t\n\t\tfunction StringStreamer(config)\n\t\t{\n\t\t\tconfig = config || {};\n\t\t\tChunkStreamer.call(this, config);\n\t\n\t\t\tvar remaining;\n\t\t\tthis.stream = function(s)\n\t\t\t{\n\t\t\t\tremaining = s;\n\t\t\t\treturn this._nextChunk();\n\t\t\t};\n\t\t\tthis._nextChunk = function()\n\t\t\t{\n\t\t\t\tif (this._finished) return;\n\t\t\t\tvar size = this._config.chunkSize;\n\t\t\t\tvar chunk = size ? remaining.substr(0, size) : remaining;\n\t\t\t\tremaining = size ? remaining.substr(size) : '';\n\t\t\t\tthis._finished = !remaining;\n\t\t\t\treturn this.parseChunk(chunk);\n\t\t\t};\n\t\t}\n\t\tStringStreamer.prototype = Object.create(StringStreamer.prototype);\n\t\tStringStreamer.prototype.constructor = StringStreamer;\n\t\n\t\n\t\tfunction ReadableStreamStreamer(config)\n\t\t{\n\t\t\tconfig = config || {};\n\t\n\t\t\tChunkStreamer.call(this, config);\n\t\n\t\t\tvar queue = [];\n\t\t\tvar parseOnData = true;\n\t\t\tvar streamHasEnded = false;\n\t\n\t\t\tthis.pause = function()\n\t\t\t{\n\t\t\t\tChunkStreamer.prototype.pause.apply(this, arguments);\n\t\t\t\tthis._input.pause();\n\t\t\t};\n\t\n\t\t\tthis.resume = function()\n\t\t\t{\n\t\t\t\tChunkStreamer.prototype.resume.apply(this, arguments);\n\t\t\t\tthis._input.resume();\n\t\t\t};\n\t\n\t\t\tthis.stream = function(stream)\n\t\t\t{\n\t\t\t\tthis._input = stream;\n\t\n\t\t\t\tthis._input.on('data', this._streamData);\n\t\t\t\tthis._input.on('end', this._streamEnd);\n\t\t\t\tthis._input.on('error', this._streamError);\n\t\t\t};\n\t\n\t\t\tthis._checkIsFinished = function()\n\t\t\t{\n\t\t\t\tif (streamHasEnded && queue.length === 1) {\n\t\t\t\t\tthis._finished = true;\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tthis._nextChunk = function()\n\t\t\t{\n\t\t\t\tthis._checkIsFinished();\n\t\t\t\tif (queue.length)\n\t\t\t\t{\n\t\t\t\t\tthis.parseChunk(queue.shift());\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tparseOnData = true;\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tthis._streamData = bindFunction(function(chunk)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tqueue.push(typeof chunk === 'string' ? chunk : chunk.toString(this._config.encoding));\n\t\n\t\t\t\t\tif (parseOnData)\n\t\t\t\t\t{\n\t\t\t\t\t\tparseOnData = false;\n\t\t\t\t\t\tthis._checkIsFinished();\n\t\t\t\t\t\tthis.parseChunk(queue.shift());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcatch (error)\n\t\t\t\t{\n\t\t\t\t\tthis._streamError(error);\n\t\t\t\t}\n\t\t\t}, this);\n\t\n\t\t\tthis._streamError = bindFunction(function(error)\n\t\t\t{\n\t\t\t\tthis._streamCleanUp();\n\t\t\t\tthis._sendError(error);\n\t\t\t}, this);\n\t\n\t\t\tthis._streamEnd = bindFunction(function()\n\t\t\t{\n\t\t\t\tthis._streamCleanUp();\n\t\t\t\tstreamHasEnded = true;\n\t\t\t\tthis._streamData('');\n\t\t\t}, this);\n\t\n\t\t\tthis._streamCleanUp = bindFunction(function()\n\t\t\t{\n\t\t\t\tthis._input.removeListener('data', this._streamData);\n\t\t\t\tthis._input.removeListener('end', this._streamEnd);\n\t\t\t\tthis._input.removeListener('error', this._streamError);\n\t\t\t}, this);\n\t\t}\n\t\tReadableStreamStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\t\tReadableStreamStreamer.prototype.constructor = ReadableStreamStreamer;\n\t\n\t\n\t\tfunction DuplexStreamStreamer(_config) {\n\t\t\tvar Duplex = __webpack_require__(1051).Duplex;\n\t\t\tvar config = copy(_config);\n\t\t\tvar parseOnWrite = true;\n\t\t\tvar writeStreamHasFinished = false;\n\t\t\tvar parseCallbackQueue = [];\n\t\t\tvar stream = null;\n\t\n\t\t\tthis._onCsvData = function(results)\n\t\t\t{\n\t\t\t\tvar data = results.data;\n\t\t\t\tfor (var i = 0; i < data.length; i++) {\n\t\t\t\t\tif (!stream.push(data[i]) && !this._handle.paused()) {\n\t\t\t\t\t\t// the writeable consumer buffer has filled up\n\t\t\t\t\t\t// so we need to pause until more items\n\t\t\t\t\t\t// can be processed\n\t\t\t\t\t\tthis._handle.pause();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tthis._onCsvComplete = function()\n\t\t\t{\n\t\t\t\t// node will finish the read stream when\n\t\t\t\t// null is pushed\n\t\t\t\tstream.push(null);\n\t\t\t};\n\t\n\t\t\tconfig.step = bindFunction(this._onCsvData, this);\n\t\t\tconfig.complete = bindFunction(this._onCsvComplete, this);\n\t\t\tChunkStreamer.call(this, config);\n\t\n\t\t\tthis._nextChunk = function()\n\t\t\t{\n\t\t\t\tif (writeStreamHasFinished && parseCallbackQueue.length === 1) {\n\t\t\t\t\tthis._finished = true;\n\t\t\t\t}\n\t\t\t\tif (parseCallbackQueue.length) {\n\t\t\t\t\tparseCallbackQueue.shift()();\n\t\t\t\t} else {\n\t\t\t\t\tparseOnWrite = true;\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tthis._addToParseQueue = function(chunk, callback)\n\t\t\t{\n\t\t\t\t// add to queue so that we can indicate\n\t\t\t\t// completion via callback\n\t\t\t\t// node will automatically pause the incoming stream\n\t\t\t\t// when too many items have been added without their\n\t\t\t\t// callback being invoked\n\t\t\t\tparseCallbackQueue.push(bindFunction(function() {\n\t\t\t\t\tthis.parseChunk(typeof chunk === 'string' ? chunk : chunk.toString(config.encoding));\n\t\t\t\t\tif (isFunction(callback)) {\n\t\t\t\t\t\treturn callback();\n\t\t\t\t\t}\n\t\t\t\t}, this));\n\t\t\t\tif (parseOnWrite) {\n\t\t\t\t\tparseOnWrite = false;\n\t\t\t\t\tthis._nextChunk();\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tthis._onRead = function()\n\t\t\t{\n\t\t\t\tif (this._handle.paused()) {\n\t\t\t\t\t// the writeable consumer can handle more data\n\t\t\t\t\t// so resume the chunk parsing\n\t\t\t\t\tthis._handle.resume();\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tthis._onWrite = function(chunk, encoding, callback)\n\t\t\t{\n\t\t\t\tthis._addToParseQueue(chunk, callback);\n\t\t\t};\n\t\n\t\t\tthis._onWriteComplete = function()\n\t\t\t{\n\t\t\t\twriteStreamHasFinished = true;\n\t\t\t\t// have to write empty string\n\t\t\t\t// so parser knows its done\n\t\t\t\tthis._addToParseQueue('');\n\t\t\t};\n\t\n\t\t\tthis.getStream = function()\n\t\t\t{\n\t\t\t\treturn stream;\n\t\t\t};\n\t\t\tstream = new Duplex({\n\t\t\t\treadableObjectMode: true,\n\t\t\t\tdecodeStrings: false,\n\t\t\t\tread: bindFunction(this._onRead, this),\n\t\t\t\twrite: bindFunction(this._onWrite, this)\n\t\t\t});\n\t\t\tstream.once('finish', bindFunction(this._onWriteComplete, this));\n\t\t}\n\t\tDuplexStreamStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\t\tDuplexStreamStreamer.prototype.constructor = DuplexStreamStreamer;\n\t\n\t\n\t\t// Use one ParserHandle per entire CSV file or string\n\t\tfunction ParserHandle(_config)\n\t\t{\n\t\t\t// One goal is to minimize the use of regular expressions...\n\t\t\tvar FLOAT = /^\\s*-?(\\d*\\.?\\d+|\\d+\\.?\\d*)(e[-+]?\\d+)?\\s*$/i;\n\t\t\tvar ISO_DATE = /(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))/;\n\t\n\t\t\tvar self = this;\n\t\t\tvar _stepCounter = 0;\t// Number of times step was called (number of rows parsed)\n\t\t\tvar _rowCounter = 0;\t// Number of rows that have been parsed so far\n\t\t\tvar _input;\t\t\t\t// The input being parsed\n\t\t\tvar _parser;\t\t\t// The core parser being used\n\t\t\tvar _paused = false;\t// Whether we are paused or not\n\t\t\tvar _aborted = false;\t// Whether the parser has aborted or not\n\t\t\tvar _delimiterError;\t// Temporary state between delimiter detection and processing results\n\t\t\tvar _fields = [];\t\t// Fields are from the header row of the input, if there is one\n\t\t\tvar _results = {\t\t// The last results returned from the parser\n\t\t\t\tdata: [],\n\t\t\t\terrors: [],\n\t\t\t\tmeta: {}\n\t\t\t};\n\t\n\t\t\tif (isFunction(_config.step))\n\t\t\t{\n\t\t\t\tvar userStep = _config.step;\n\t\t\t\t_config.step = function(results)\n\t\t\t\t{\n\t\t\t\t\t_results = results;\n\t\n\t\t\t\t\tif (needsHeaderRow())\n\t\t\t\t\t\tprocessResults();\n\t\t\t\t\telse\t// only call user's step function after header row\n\t\t\t\t\t{\n\t\t\t\t\t\tprocessResults();\n\t\n\t\t\t\t\t\t// It's possbile that this line was empty and there's no row here after all\n\t\t\t\t\t\tif (_results.data.length === 0)\n\t\t\t\t\t\t\treturn;\n\t\n\t\t\t\t\t\t_stepCounter += results.data.length;\n\t\t\t\t\t\tif (_config.preview && _stepCounter > _config.preview)\n\t\t\t\t\t\t\t_parser.abort();\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tuserStep(_results, self);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\n\t\t\t/**\n\t\t\t * Parses input. Most users won't need, and shouldn't mess with, the baseIndex\n\t\t\t * and ignoreLastRow parameters. They are used by streamers (wrapper functions)\n\t\t\t * when an input comes in multiple chunks, like from a file.\n\t\t\t */\n\t\t\tthis.parse = function(input, baseIndex, ignoreLastRow)\n\t\t\t{\n\t\t\t\tvar quoteChar = _config.quoteChar || '\"';\n\t\t\t\tif (!_config.newline)\n\t\t\t\t\t_config.newline = guessLineEndings(input, quoteChar);\n\t\n\t\t\t\t_delimiterError = false;\n\t\t\t\tif (!_config.delimiter)\n\t\t\t\t{\n\t\t\t\t\tvar delimGuess = guessDelimiter(input, _config.newline, _config.skipEmptyLines, _config.comments);\n\t\t\t\t\tif (delimGuess.successful)\n\t\t\t\t\t\t_config.delimiter = delimGuess.bestDelimiter;\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t_delimiterError = true;\t// add error after parsing (otherwise it would be overwritten)\n\t\t\t\t\t\t_config.delimiter = Papa.DefaultDelimiter;\n\t\t\t\t\t}\n\t\t\t\t\t_results.meta.delimiter = _config.delimiter;\n\t\t\t\t}\n\t\t\t\telse if(isFunction(_config.delimiter))\n\t\t\t\t{\n\t\t\t\t\t_config.delimiter = _config.delimiter(input);\n\t\t\t\t\t_results.meta.delimiter = _config.delimiter;\n\t\t\t\t}\n\t\n\t\t\t\tvar parserConfig = copy(_config);\n\t\t\t\tif (_config.preview && _config.header)\n\t\t\t\t\tparserConfig.preview++;\t// to compensate for header row\n\t\n\t\t\t\t_input = input;\n\t\t\t\t_parser = new Parser(parserConfig);\n\t\t\t\t_results = _parser.parse(_input, baseIndex, ignoreLastRow);\n\t\t\t\tprocessResults();\n\t\t\t\treturn _paused ? { meta: { paused: true } } : (_results || { meta: { paused: false } });\n\t\t\t};\n\t\n\t\t\tthis.paused = function()\n\t\t\t{\n\t\t\t\treturn _paused;\n\t\t\t};\n\t\n\t\t\tthis.pause = function()\n\t\t\t{\n\t\t\t\t_paused = true;\n\t\t\t\t_parser.abort();\n\t\t\t\t_input = _input.substr(_parser.getCharIndex());\n\t\t\t};\n\t\n\t\t\tthis.resume = function()\n\t\t\t{\n\t\t\t\t_paused = false;\n\t\t\t\tself.streamer.parseChunk(_input, true);\n\t\t\t};\n\t\n\t\t\tthis.aborted = function()\n\t\t\t{\n\t\t\t\treturn _aborted;\n\t\t\t};\n\t\n\t\t\tthis.abort = function()\n\t\t\t{\n\t\t\t\t_aborted = true;\n\t\t\t\t_parser.abort();\n\t\t\t\t_results.meta.aborted = true;\n\t\t\t\tif (isFunction(_config.complete))\n\t\t\t\t\t_config.complete(_results);\n\t\t\t\t_input = '';\n\t\t\t};\n\t\n\t\t\tfunction testEmptyLine(s) {\n\t\t\t\treturn _config.skipEmptyLines === 'greedy' ? s.join('').trim() === '' : s.length === 1 && s[0].length === 0;\n\t\t\t}\n\t\n\t\t\tfunction processResults()\n\t\t\t{\n\t\t\t\tif (_results && _delimiterError)\n\t\t\t\t{\n\t\t\t\t\taddError('Delimiter', 'UndetectableDelimiter', 'Unable to auto-detect delimiting character; defaulted to \\'' + Papa.DefaultDelimiter + '\\'');\n\t\t\t\t\t_delimiterError = false;\n\t\t\t\t}\n\t\n\t\t\t\tif (_config.skipEmptyLines)\n\t\t\t\t{\n\t\t\t\t\tfor (var i = 0; i < _results.data.length; i++)\n\t\t\t\t\t\tif (testEmptyLine(_results.data[i]))\n\t\t\t\t\t\t\t_results.data.splice(i--, 1);\n\t\t\t\t}\n\t\n\t\t\t\tif (needsHeaderRow())\n\t\t\t\t\tfillHeaderFields();\n\t\n\t\t\t\treturn applyHeaderAndDynamicTypingAndTransformation();\n\t\t\t}\n\t\n\t\t\tfunction needsHeaderRow()\n\t\t\t{\n\t\t\t\treturn _config.header && _fields.length === 0;\n\t\t\t}\n\t\n\t\t\tfunction fillHeaderFields()\n\t\t\t{\n\t\t\t\tif (!_results)\n\t\t\t\t\treturn;\n\t\t\t\tfor (var i = 0; needsHeaderRow() && i < _results.data.length; i++)\n\t\t\t\t\tfor (var j = 0; j < _results.data[i].length; j++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar header = _results.data[i][j];\n\t\n\t\t\t\t\t\tif (_config.trimHeaders) {\n\t\t\t\t\t\t\theader = header.trim();\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t_fields.push(header);\n\t\t\t\t\t}\n\t\t\t\t_results.data.splice(0, 1);\n\t\t\t}\n\t\n\t\t\tfunction shouldApplyDynamicTyping(field) {\n\t\t\t\t// Cache function values to avoid calling it for each row\n\t\t\t\tif (_config.dynamicTypingFunction && _config.dynamicTyping[field] === undefined) {\n\t\t\t\t\t_config.dynamicTyping[field] = _config.dynamicTypingFunction(field);\n\t\t\t\t}\n\t\t\t\treturn (_config.dynamicTyping[field] || _config.dynamicTyping) === true;\n\t\t\t}\n\t\n\t\t\tfunction parseDynamic(field, value)\n\t\t\t{\n\t\t\t\tif (shouldApplyDynamicTyping(field))\n\t\t\t\t{\n\t\t\t\t\tif (value === 'true' || value === 'TRUE')\n\t\t\t\t\t\treturn true;\n\t\t\t\t\telse if (value === 'false' || value === 'FALSE')\n\t\t\t\t\t\treturn false;\n\t\t\t\t\telse if (FLOAT.test(value))\n\t\t\t\t\t\treturn parseFloat(value);\n\t\t\t\t\telse if (ISO_DATE.test(value))\n\t\t\t\t\t\treturn new Date(value);\n\t\t\t\t\telse\n\t\t\t\t\t\treturn (value === '' ? null : value);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\n\t\t\tfunction applyHeaderAndDynamicTypingAndTransformation()\n\t\t\t{\n\t\t\t\tif (!_results || (!_config.header && !_config.dynamicTyping && !_config.transform))\n\t\t\t\t\treturn _results;\n\t\n\t\t\t\tfor (var i = 0; i < _results.data.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar row = _config.header ? {} : [];\n\t\n\t\t\t\t\tvar j;\n\t\t\t\t\tfor (j = 0; j < _results.data[i].length; j++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar field = j;\n\t\t\t\t\t\tvar value = _results.data[i][j];\n\t\n\t\t\t\t\t\tif (_config.header)\n\t\t\t\t\t\t\tfield = j >= _fields.length ? '__parsed_extra' : _fields[j];\n\t\n\t\t\t\t\t\tif (_config.transform)\n\t\t\t\t\t\t\tvalue = _config.transform(value,field);\n\t\n\t\t\t\t\t\tvalue = parseDynamic(field, value);\n\t\n\t\t\t\t\t\tif (field === '__parsed_extra')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trow[field] = row[field] || [];\n\t\t\t\t\t\t\trow[field].push(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\trow[field] = value;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t_results.data[i] = row;\n\t\n\t\t\t\t\tif (_config.header)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (j > _fields.length)\n\t\t\t\t\t\t\taddError('FieldMismatch', 'TooManyFields', 'Too many fields: expected ' + _fields.length + ' fields but parsed ' + j, _rowCounter + i);\n\t\t\t\t\t\telse if (j < _fields.length)\n\t\t\t\t\t\t\taddError('FieldMismatch', 'TooFewFields', 'Too few fields: expected ' + _fields.length + ' fields but parsed ' + j, _rowCounter + i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tif (_config.header && _results.meta)\n\t\t\t\t\t_results.meta.fields = _fields;\n\t\n\t\t\t\t_rowCounter += _results.data.length;\n\t\t\t\treturn _results;\n\t\t\t}\n\t\n\t\t\tfunction guessDelimiter(input, newline, skipEmptyLines, comments)\n\t\t\t{\n\t\t\t\tvar delimChoices = [',', '\\t', '|', ';', Papa.RECORD_SEP, Papa.UNIT_SEP];\n\t\t\t\tvar bestDelim, bestDelta, fieldCountPrevRow;\n\t\n\t\t\t\tfor (var i = 0; i < delimChoices.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar delim = delimChoices[i];\n\t\t\t\t\tvar delta = 0, avgFieldCount = 0, emptyLinesCount = 0;\n\t\t\t\t\tfieldCountPrevRow = undefined;\n\t\n\t\t\t\t\tvar preview = new Parser({\n\t\t\t\t\t\tcomments: comments,\n\t\t\t\t\t\tdelimiter: delim,\n\t\t\t\t\t\tnewline: newline,\n\t\t\t\t\t\tpreview: 10\n\t\t\t\t\t}).parse(input);\n\t\n\t\t\t\t\tfor (var j = 0; j < preview.data.length; j++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (skipEmptyLines && testEmptyLine(preview.data[j]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\temptyLinesCount++;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar fieldCount = preview.data[j].length;\n\t\t\t\t\t\tavgFieldCount += fieldCount;\n\t\n\t\t\t\t\t\tif (typeof fieldCountPrevRow === 'undefined')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfieldCountPrevRow = fieldCount;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (fieldCount > 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdelta += Math.abs(fieldCount - fieldCountPrevRow);\n\t\t\t\t\t\t\tfieldCountPrevRow = fieldCount;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (preview.data.length > 0)\n\t\t\t\t\t\tavgFieldCount /= (preview.data.length - emptyLinesCount);\n\t\n\t\t\t\t\tif ((typeof bestDelta === 'undefined' || delta < bestDelta)\n\t\t\t\t\t\t&& avgFieldCount > 1.99)\n\t\t\t\t\t{\n\t\t\t\t\t\tbestDelta = delta;\n\t\t\t\t\t\tbestDelim = delim;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t_config.delimiter = bestDelim;\n\t\n\t\t\t\treturn {\n\t\t\t\t\tsuccessful: !!bestDelim,\n\t\t\t\t\tbestDelimiter: bestDelim\n\t\t\t\t};\n\t\t\t}\n\t\n\t\t\tfunction guessLineEndings(input, quoteChar)\n\t\t\t{\n\t\t\t\tinput = input.substr(0, 1024 * 1024);\t// max length 1 MB\n\t\t\t\t// Replace all the text inside quotes\n\t\t\t\tvar re = new RegExp(escapeRegExp(quoteChar) + '([^]*?)' + escapeRegExp(quoteChar), 'gm');\n\t\t\t\tinput = input.replace(re, '');\n\t\n\t\t\t\tvar r = input.split('\\r');\n\t\n\t\t\t\tvar n = input.split('\\n');\n\t\n\t\t\t\tvar nAppearsFirst = (n.length > 1 && n[0].length < r[0].length);\n\t\n\t\t\t\tif (r.length === 1 || nAppearsFirst)\n\t\t\t\t\treturn '\\n';\n\t\n\t\t\t\tvar numWithN = 0;\n\t\t\t\tfor (var i = 0; i < r.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (r[i][0] === '\\n')\n\t\t\t\t\t\tnumWithN++;\n\t\t\t\t}\n\t\n\t\t\t\treturn numWithN >= r.length / 2 ? '\\r\\n' : '\\r';\n\t\t\t}\n\t\n\t\t\tfunction addError(type, code, msg, row)\n\t\t\t{\n\t\t\t\t_results.errors.push({\n\t\t\t\t\ttype: type,\n\t\t\t\t\tcode: code,\n\t\t\t\t\tmessage: msg,\n\t\t\t\t\trow: row\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\n\t\t/** https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions */\n\t\tfunction escapeRegExp(string)\n\t\t{\n\t\t\treturn string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n\t\t}\n\t\n\t\t/** The core parser implements speedy and correct CSV parsing */\n\t\tfunction Parser(config)\n\t\t{\n\t\t\t// Unpack the config object\n\t\t\tconfig = config || {};\n\t\t\tvar delim = config.delimiter;\n\t\t\tvar newline = config.newline;\n\t\t\tvar comments = config.comments;\n\t\t\tvar step = config.step;\n\t\t\tvar preview = config.preview;\n\t\t\tvar fastMode = config.fastMode;\n\t\t\tvar quoteChar;\n\t\t\t/** Allows for no quoteChar by setting quoteChar to undefined in config */\n\t\t\tif (config.quoteChar === undefined) {\n\t\t\t\tquoteChar = '\"';\n\t\t\t} else {\n\t\t\t\tquoteChar = config.quoteChar;\n\t\t\t}\n\t\t\tvar escapeChar = quoteChar;\n\t\t\tif (config.escapeChar !== undefined) {\n\t\t\t\tescapeChar = config.escapeChar;\n\t\t\t}\n\t\n\t\t\t// Delimiter must be valid\n\t\t\tif (typeof delim !== 'string'\n\t\t\t\t|| Papa.BAD_DELIMITERS.indexOf(delim) > -1)\n\t\t\t\tdelim = ',';\n\t\n\t\t\t// Comment character must be valid\n\t\t\tif (comments === delim)\n\t\t\t\tthrow 'Comment character same as delimiter';\n\t\t\telse if (comments === true)\n\t\t\t\tcomments = '#';\n\t\t\telse if (typeof comments !== 'string'\n\t\t\t\t|| Papa.BAD_DELIMITERS.indexOf(comments) > -1)\n\t\t\t\tcomments = false;\n\t\n\t\t\t// Newline must be valid: \\r, \\n, or \\r\\n\n\t\t\tif (newline !== '\\n' && newline !== '\\r' && newline !== '\\r\\n')\n\t\t\t\tnewline = '\\n';\n\t\n\t\t\t// We're gonna need these at the Parser scope\n\t\t\tvar cursor = 0;\n\t\t\tvar aborted = false;\n\t\n\t\t\tthis.parse = function(input, baseIndex, ignoreLastRow)\n\t\t\t{\n\t\t\t\t// For some reason, in Chrome, this speeds things up (!?)\n\t\t\t\tif (typeof input !== 'string')\n\t\t\t\t\tthrow 'Input must be a string';\n\t\n\t\t\t\t// We don't need to compute some of these every time parse() is called,\n\t\t\t\t// but having them in a more local scope seems to perform better\n\t\t\t\tvar inputLen = input.length,\n\t\t\t\t\tdelimLen = delim.length,\n\t\t\t\t\tnewlineLen = newline.length,\n\t\t\t\t\tcommentsLen = comments.length;\n\t\t\t\tvar stepIsFunction = isFunction(step);\n\t\n\t\t\t\t// Establish starting state\n\t\t\t\tcursor = 0;\n\t\t\t\tvar data = [], errors = [], row = [], lastCursor = 0;\n\t\n\t\t\t\tif (!input)\n\t\t\t\t\treturn returnable();\n\t\n\t\t\t\tif (fastMode || (fastMode !== false && input.indexOf(quoteChar) === -1))\n\t\t\t\t{\n\t\t\t\t\tvar rows = input.split(newline);\n\t\t\t\t\tfor (var i = 0; i < rows.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\trow = rows[i];\n\t\t\t\t\t\tcursor += row.length;\n\t\t\t\t\t\tif (i !== rows.length - 1)\n\t\t\t\t\t\t\tcursor += newline.length;\n\t\t\t\t\t\telse if (ignoreLastRow)\n\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t\tif (comments && row.substr(0, commentsLen) === comments)\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\tif (stepIsFunction)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdata = [];\n\t\t\t\t\t\t\tpushRow(row.split(delim));\n\t\t\t\t\t\t\tdoStep();\n\t\t\t\t\t\t\tif (aborted)\n\t\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tpushRow(row.split(delim));\n\t\t\t\t\t\tif (preview && i >= preview)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdata = data.slice(0, preview);\n\t\t\t\t\t\t\treturn returnable(true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn returnable();\n\t\t\t\t}\n\t\n\t\t\t\tvar nextDelim = input.indexOf(delim, cursor);\n\t\t\t\tvar nextNewline = input.indexOf(newline, cursor);\n\t\t\t\tvar quoteCharRegex = new RegExp(escapeChar.replace(/[-[\\]/{}()*+?.\\\\^$|]/g, '\\\\$&') + quoteChar, 'g');\n\t\t\t\tvar quoteSearch;\n\t\n\t\t\t\t// Parser loop\n\t\t\t\tfor (;;)\n\t\t\t\t{\n\t\t\t\t\t// Field has opening quote\n\t\t\t\t\tif (input[cursor] === quoteChar)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Start our search for the closing quote where the cursor is\n\t\t\t\t\t\tquoteSearch = cursor;\n\t\n\t\t\t\t\t\t// Skip the opening quote\n\t\t\t\t\t\tcursor++;\n\t\n\t\t\t\t\t\tfor (;;)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Find closing quote\n\t\t\t\t\t\t\tquoteSearch = input.indexOf(quoteChar, quoteSearch + 1);\n\t\n\t\t\t\t\t\t\t//No other quotes are found - no other delimiters\n\t\t\t\t\t\t\tif (quoteSearch === -1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (!ignoreLastRow) {\n\t\t\t\t\t\t\t\t\t// No closing quote... what a pity\n\t\t\t\t\t\t\t\t\terrors.push({\n\t\t\t\t\t\t\t\t\t\ttype: 'Quotes',\n\t\t\t\t\t\t\t\t\t\tcode: 'MissingQuotes',\n\t\t\t\t\t\t\t\t\t\tmessage: 'Quoted field unterminated',\n\t\t\t\t\t\t\t\t\t\trow: data.length,\t// row has yet to be inserted\n\t\t\t\t\t\t\t\t\t\tindex: cursor\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn finish();\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// Closing quote at EOF\n\t\t\t\t\t\t\tif (quoteSearch === inputLen - 1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar value = input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar);\n\t\t\t\t\t\t\t\treturn finish(value);\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// If this quote is escaped, it's part of the data; skip it\n\t\t\t\t\t\t\t// If the quote character is the escape character, then check if the next character is the escape character\n\t\t\t\t\t\t\tif (quoteChar === escapeChar &&  input[quoteSearch + 1] === escapeChar)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tquoteSearch++;\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// If the quote character is not the escape character, then check if the previous character was the escape character\n\t\t\t\t\t\t\tif (quoteChar !== escapeChar && quoteSearch !== 0 && input[quoteSearch - 1] === escapeChar)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// Check up to nextDelim or nextNewline, whichever is closest\n\t\t\t\t\t\t\tvar checkUpTo = nextNewline === -1 ? nextDelim : Math.min(nextDelim, nextNewline);\n\t\t\t\t\t\t\tvar spacesBetweenQuoteAndDelimiter = extraSpaces(checkUpTo);\n\t\n\t\t\t\t\t\t\t// Closing quote followed by delimiter or 'unnecessary spaces + delimiter'\n\t\t\t\t\t\t\tif (input[quoteSearch + 1 + spacesBetweenQuoteAndDelimiter] === delim)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\trow.push(input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar));\n\t\t\t\t\t\t\t\tcursor = quoteSearch + 1 + spacesBetweenQuoteAndDelimiter + delimLen;\n\t\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n\t\t\t\t\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tvar spacesBetweenQuoteAndNewLine = extraSpaces(nextNewline);\n\t\n\t\t\t\t\t\t\t// Closing quote followed by newline or 'unnecessary spaces + newLine'\n\t\t\t\t\t\t\tif (input.substr(quoteSearch + 1 + spacesBetweenQuoteAndNewLine, newlineLen) === newline)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\trow.push(input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar));\n\t\t\t\t\t\t\t\tsaveRow(quoteSearch + 1 + spacesBetweenQuoteAndNewLine + newlineLen);\n\t\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\t// because we may have skipped the nextDelim in the quoted field\n\t\n\t\t\t\t\t\t\t\tif (stepIsFunction)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tdoStep();\n\t\t\t\t\t\t\t\t\tif (aborted)\n\t\t\t\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\tif (preview && data.length >= preview)\n\t\t\t\t\t\t\t\t\treturn returnable(true);\n\t\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\n\t\n\t\t\t\t\t\t\t// Checks for valid closing quotes are complete (escaped quotes or quote followed by EOF/delimiter/newline) -- assume these quotes are part of an invalid text string\n\t\t\t\t\t\t\terrors.push({\n\t\t\t\t\t\t\t\ttype: 'Quotes',\n\t\t\t\t\t\t\t\tcode: 'InvalidQuotes',\n\t\t\t\t\t\t\t\tmessage: 'Trailing quote on quoted field is malformed',\n\t\t\t\t\t\t\t\trow: data.length,\t// row has yet to be inserted\n\t\t\t\t\t\t\t\tindex: cursor\n\t\t\t\t\t\t\t});\n\t\n\t\t\t\t\t\t\tquoteSearch++;\n\t\t\t\t\t\t\tcontinue;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Comment found at start of new line\n\t\t\t\t\tif (comments && row.length === 0 && input.substr(cursor, commentsLen) === comments)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (nextNewline === -1)\t// Comment ends at EOF\n\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t\tcursor = nextNewline + newlineLen;\n\t\t\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n\t\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Next delimiter comes before next newline, so we've reached end of field\n\t\t\t\t\tif (nextDelim !== -1 && (nextDelim < nextNewline || nextNewline === -1))\n\t\t\t\t\t{\n\t\t\t\t\t\trow.push(input.substring(cursor, nextDelim));\n\t\t\t\t\t\tcursor = nextDelim + delimLen;\n\t\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// End of row\n\t\t\t\t\tif (nextNewline !== -1)\n\t\t\t\t\t{\n\t\t\t\t\t\trow.push(input.substring(cursor, nextNewline));\n\t\t\t\t\t\tsaveRow(nextNewline + newlineLen);\n\t\n\t\t\t\t\t\tif (stepIsFunction)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdoStep();\n\t\t\t\t\t\t\tif (aborted)\n\t\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif (preview && data.length >= preview)\n\t\t\t\t\t\t\treturn returnable(true);\n\t\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\n\t\n\t\t\t\treturn finish();\n\t\n\t\n\t\t\t\tfunction pushRow(row)\n\t\t\t\t{\n\t\t\t\t\tdata.push(row);\n\t\t\t\t\tlastCursor = cursor;\n\t\t\t\t}\n\t\n\t\t\t\t/**\n\t             * checks if there are extra spaces after closing quote and given index without any text\n\t             * if Yes, returns the number of spaces\n\t             */\n\t\t\t\tfunction extraSpaces(index) {\n\t\t\t\t\tvar spaceLength = 0;\n\t\t\t\t\tif (index !== -1) {\n\t\t\t\t\t\tvar textBetweenClosingQuoteAndIndex = input.substring(quoteSearch + 1, index);\n\t\t\t\t\t\tif (textBetweenClosingQuoteAndIndex && textBetweenClosingQuoteAndIndex.trim() === '') {\n\t\t\t\t\t\t\tspaceLength = textBetweenClosingQuoteAndIndex.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn spaceLength;\n\t\t\t\t}\n\t\n\t\t\t\t/**\n\t\t\t\t * Appends the remaining input from cursor to the end into\n\t\t\t\t * row, saves the row, calls step, and returns the results.\n\t\t\t\t */\n\t\t\t\tfunction finish(value)\n\t\t\t\t{\n\t\t\t\t\tif (ignoreLastRow)\n\t\t\t\t\t\treturn returnable();\n\t\t\t\t\tif (typeof value === 'undefined')\n\t\t\t\t\t\tvalue = input.substr(cursor);\n\t\t\t\t\trow.push(value);\n\t\t\t\t\tcursor = inputLen;\t// important in case parsing is paused\n\t\t\t\t\tpushRow(row);\n\t\t\t\t\tif (stepIsFunction)\n\t\t\t\t\t\tdoStep();\n\t\t\t\t\treturn returnable();\n\t\t\t\t}\n\t\n\t\t\t\t/**\n\t\t\t\t * Appends the current row to the results. It sets the cursor\n\t\t\t\t * to newCursor and finds the nextNewline. The caller should\n\t\t\t\t * take care to execute user's step function and check for\n\t\t\t\t * preview and end parsing if necessary.\n\t\t\t\t */\n\t\t\t\tfunction saveRow(newCursor)\n\t\t\t\t{\n\t\t\t\t\tcursor = newCursor;\n\t\t\t\t\tpushRow(row);\n\t\t\t\t\trow = [];\n\t\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n\t\t\t\t}\n\t\n\t\t\t\t/** Returns an object with the results, errors, and meta. */\n\t\t\t\tfunction returnable(stopped)\n\t\t\t\t{\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: data,\n\t\t\t\t\t\terrors: errors,\n\t\t\t\t\t\tmeta: {\n\t\t\t\t\t\t\tdelimiter: delim,\n\t\t\t\t\t\t\tlinebreak: newline,\n\t\t\t\t\t\t\taborted: aborted,\n\t\t\t\t\t\t\ttruncated: !!stopped,\n\t\t\t\t\t\t\tcursor: lastCursor + (baseIndex || 0)\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\n\t\t\t\t/** Executes the user's step function and resets data & errors. */\n\t\t\t\tfunction doStep()\n\t\t\t\t{\n\t\t\t\t\tstep(returnable());\n\t\t\t\t\tdata = [];\n\t\t\t\t\terrors = [];\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\t/** Sets the abort flag */\n\t\t\tthis.abort = function()\n\t\t\t{\n\t\t\t\taborted = true;\n\t\t\t};\n\t\n\t\t\t/** Gets the cursor position */\n\t\t\tthis.getCharIndex = function()\n\t\t\t{\n\t\t\t\treturn cursor;\n\t\t\t};\n\t\t}\n\t\n\t\n\t\t// If you need to load Papa Parse asynchronously and you also need worker threads, hard-code\n\t\t// the script path here. See: https://github.com/mholt/PapaParse/issues/87#issuecomment-57885358\n\t\tfunction getScriptPath()\n\t\t{\n\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\treturn scripts.length ? scripts[scripts.length - 1].src : '';\n\t\t}\n\t\n\t\tfunction newWorker()\n\t\t{\n\t\t\tif (!Papa.WORKERS_SUPPORTED)\n\t\t\t\treturn false;\n\t\t\tif (!LOADED_SYNC && Papa.SCRIPT_PATH === null)\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Script path cannot be determined automatically when Papa Parse is loaded asynchronously. ' +\n\t\t\t\t\t'You need to set Papa.SCRIPT_PATH manually.'\n\t\t\t\t);\n\t\t\tvar workerUrl = Papa.SCRIPT_PATH || AUTO_SCRIPT_PATH;\n\t\t\t// Append 'papaworker' to the search string to tell papaparse that this is our worker.\n\t\t\tworkerUrl += (workerUrl.indexOf('?') !== -1 ? '&' : '?') + 'papaworker';\n\t\t\tvar w = new global.Worker(workerUrl);\n\t\t\tw.onmessage = mainThreadReceivedMessage;\n\t\t\tw.id = workerIdCounter++;\n\t\t\tworkers[w.id] = w;\n\t\t\treturn w;\n\t\t}\n\t\n\t\t/** Callback when main thread receives a message */\n\t\tfunction mainThreadReceivedMessage(e)\n\t\t{\n\t\t\tvar msg = e.data;\n\t\t\tvar worker = workers[msg.workerId];\n\t\t\tvar aborted = false;\n\t\n\t\t\tif (msg.error)\n\t\t\t\tworker.userError(msg.error, msg.file);\n\t\t\telse if (msg.results && msg.results.data)\n\t\t\t{\n\t\t\t\tvar abort = function() {\n\t\t\t\t\taborted = true;\n\t\t\t\t\tcompleteWorker(msg.workerId, { data: [], errors: [], meta: { aborted: true } });\n\t\t\t\t};\n\t\n\t\t\t\tvar handle = {\n\t\t\t\t\tabort: abort,\n\t\t\t\t\tpause: notImplemented,\n\t\t\t\t\tresume: notImplemented\n\t\t\t\t};\n\t\n\t\t\t\tif (isFunction(worker.userStep))\n\t\t\t\t{\n\t\t\t\t\tfor (var i = 0; i < msg.results.data.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tworker.userStep({\n\t\t\t\t\t\t\tdata: [msg.results.data[i]],\n\t\t\t\t\t\t\terrors: msg.results.errors,\n\t\t\t\t\t\t\tmeta: msg.results.meta\n\t\t\t\t\t\t}, handle);\n\t\t\t\t\t\tif (aborted)\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tdelete msg.results;\t// free memory ASAP\n\t\t\t\t}\n\t\t\t\telse if (isFunction(worker.userChunk))\n\t\t\t\t{\n\t\t\t\t\tworker.userChunk(msg.results, handle, msg.file);\n\t\t\t\t\tdelete msg.results;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (msg.finished && !aborted)\n\t\t\t\tcompleteWorker(msg.workerId, msg.results);\n\t\t}\n\t\n\t\tfunction completeWorker(workerId, results) {\n\t\t\tvar worker = workers[workerId];\n\t\t\tif (isFunction(worker.userComplete))\n\t\t\t\tworker.userComplete(results);\n\t\t\tworker.terminate();\n\t\t\tdelete workers[workerId];\n\t\t}\n\t\n\t\tfunction notImplemented() {\n\t\t\tthrow 'Not implemented.';\n\t\t}\n\t\n\t\t/** Callback when worker thread receives a message */\n\t\tfunction workerThreadReceivedMessage(e)\n\t\t{\n\t\t\tvar msg = e.data;\n\t\n\t\t\tif (typeof Papa.WORKER_ID === 'undefined' && msg)\n\t\t\t\tPapa.WORKER_ID = msg.workerId;\n\t\n\t\t\tif (typeof msg.input === 'string')\n\t\t\t{\n\t\t\t\tglobal.postMessage({\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\t\tresults: Papa.parse(msg.input, msg.config),\n\t\t\t\t\tfinished: true\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if ((global.File && msg.input instanceof File) || msg.input instanceof Object)\t// thank you, Safari (see issue #106)\n\t\t\t{\n\t\t\t\tvar results = Papa.parse(msg.input, msg.config);\n\t\t\t\tif (results)\n\t\t\t\t\tglobal.postMessage({\n\t\t\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\t\t\tresults: results,\n\t\t\t\t\t\tfinished: true\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\n\t\t/** Makes a deep copy of an array or object (mostly) */\n\t\tfunction copy(obj)\n\t\t{\n\t\t\tif (typeof obj !== 'object' || obj === null)\n\t\t\t\treturn obj;\n\t\t\tvar cpy = obj instanceof Array ? [] : {};\n\t\t\tfor (var key in obj)\n\t\t\t\tcpy[key] = copy(obj[key]);\n\t\t\treturn cpy;\n\t\t}\n\t\n\t\tfunction bindFunction(f, self)\n\t\t{\n\t\t\treturn function() { f.apply(self, arguments); };\n\t\t}\n\t\n\t\tfunction isFunction(func)\n\t\t{\n\t\t\treturn typeof func === 'function';\n\t\t}\n\t\n\t\treturn Papa;\n\t}));\n\n\n/***/ }),\n\n/***/ 952:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(71);\n\n\n/***/ }),\n\n/***/ 953:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t// a passthrough stream.\n\t// basically just the most minimal sort of Transform stream.\n\t// Every written chunk gets output as-is.\n\t\n\t'use strict';\n\t\n\tmodule.exports = PassThrough;\n\t\n\tvar Transform = __webpack_require__(408);\n\t\n\t/*<replacement>*/\n\tvar util = __webpack_require__(95);\n\tutil.inherits = __webpack_require__(80);\n\t/*</replacement>*/\n\t\n\tutil.inherits(PassThrough, Transform);\n\t\n\tfunction PassThrough(options) {\n\t  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\t\n\t  Transform.call(this, options);\n\t}\n\t\n\tPassThrough.prototype._transform = function (chunk, encoding, cb) {\n\t  cb(null, chunk);\n\t};\n\n/***/ }),\n\n/***/ 954:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*<replacement>*/\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Buffer = __webpack_require__(246).Buffer;\n\t/*</replacement>*/\n\t\n\tfunction copyBuffer(src, target, offset) {\n\t  src.copy(target, offset);\n\t}\n\t\n\tmodule.exports = function () {\n\t  function BufferList() {\n\t    _classCallCheck(this, BufferList);\n\t\n\t    this.head = null;\n\t    this.tail = null;\n\t    this.length = 0;\n\t  }\n\t\n\t  BufferList.prototype.push = function push(v) {\n\t    var entry = { data: v, next: null };\n\t    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n\t    this.tail = entry;\n\t    ++this.length;\n\t  };\n\t\n\t  BufferList.prototype.unshift = function unshift(v) {\n\t    var entry = { data: v, next: this.head };\n\t    if (this.length === 0) this.tail = entry;\n\t    this.head = entry;\n\t    ++this.length;\n\t  };\n\t\n\t  BufferList.prototype.shift = function shift() {\n\t    if (this.length === 0) return;\n\t    var ret = this.head.data;\n\t    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n\t    --this.length;\n\t    return ret;\n\t  };\n\t\n\t  BufferList.prototype.clear = function clear() {\n\t    this.head = this.tail = null;\n\t    this.length = 0;\n\t  };\n\t\n\t  BufferList.prototype.join = function join(s) {\n\t    if (this.length === 0) return '';\n\t    var p = this.head;\n\t    var ret = '' + p.data;\n\t    while (p = p.next) {\n\t      ret += s + p.data;\n\t    }return ret;\n\t  };\n\t\n\t  BufferList.prototype.concat = function concat(n) {\n\t    if (this.length === 0) return Buffer.alloc(0);\n\t    if (this.length === 1) return this.head.data;\n\t    var ret = Buffer.allocUnsafe(n >>> 0);\n\t    var p = this.head;\n\t    var i = 0;\n\t    while (p) {\n\t      copyBuffer(p.data, ret, i);\n\t      i += p.data.length;\n\t      p = p.next;\n\t    }\n\t    return ret;\n\t  };\n\t\n\t  return BufferList;\n\t}();\n\n/***/ }),\n\n/***/ 955:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(245).PassThrough\n\n\n/***/ }),\n\n/***/ 956:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(245).Transform\n\n\n/***/ }),\n\n/***/ 957:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(244);\n\n\n/***/ }),\n\n/***/ 1050:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n\t    \"use strict\";\n\t\n\t    if (global.setImmediate) {\n\t        return;\n\t    }\n\t\n\t    var nextHandle = 1; // Spec says greater than zero\n\t    var tasksByHandle = {};\n\t    var currentlyRunningATask = false;\n\t    var doc = global.document;\n\t    var registerImmediate;\n\t\n\t    function setImmediate(callback) {\n\t      // Callback can either be a function or a string\n\t      if (typeof callback !== \"function\") {\n\t        callback = new Function(\"\" + callback);\n\t      }\n\t      // Copy function arguments\n\t      var args = new Array(arguments.length - 1);\n\t      for (var i = 0; i < args.length; i++) {\n\t          args[i] = arguments[i + 1];\n\t      }\n\t      // Store and register the task\n\t      var task = { callback: callback, args: args };\n\t      tasksByHandle[nextHandle] = task;\n\t      registerImmediate(nextHandle);\n\t      return nextHandle++;\n\t    }\n\t\n\t    function clearImmediate(handle) {\n\t        delete tasksByHandle[handle];\n\t    }\n\t\n\t    function run(task) {\n\t        var callback = task.callback;\n\t        var args = task.args;\n\t        switch (args.length) {\n\t        case 0:\n\t            callback();\n\t            break;\n\t        case 1:\n\t            callback(args[0]);\n\t            break;\n\t        case 2:\n\t            callback(args[0], args[1]);\n\t            break;\n\t        case 3:\n\t            callback(args[0], args[1], args[2]);\n\t            break;\n\t        default:\n\t            callback.apply(undefined, args);\n\t            break;\n\t        }\n\t    }\n\t\n\t    function runIfPresent(handle) {\n\t        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n\t        // So if we're currently running a task, we'll need to delay this invocation.\n\t        if (currentlyRunningATask) {\n\t            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n\t            // \"too much recursion\" error.\n\t            setTimeout(runIfPresent, 0, handle);\n\t        } else {\n\t            var task = tasksByHandle[handle];\n\t            if (task) {\n\t                currentlyRunningATask = true;\n\t                try {\n\t                    run(task);\n\t                } finally {\n\t                    clearImmediate(handle);\n\t                    currentlyRunningATask = false;\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t    function installNextTickImplementation() {\n\t        registerImmediate = function(handle) {\n\t            process.nextTick(function () { runIfPresent(handle); });\n\t        };\n\t    }\n\t\n\t    function canUsePostMessage() {\n\t        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n\t        // where `global.postMessage` means something completely different and can't be used for this purpose.\n\t        if (global.postMessage && !global.importScripts) {\n\t            var postMessageIsAsynchronous = true;\n\t            var oldOnMessage = global.onmessage;\n\t            global.onmessage = function() {\n\t                postMessageIsAsynchronous = false;\n\t            };\n\t            global.postMessage(\"\", \"*\");\n\t            global.onmessage = oldOnMessage;\n\t            return postMessageIsAsynchronous;\n\t        }\n\t    }\n\t\n\t    function installPostMessageImplementation() {\n\t        // Installs an event handler on `global` for the `message` event: see\n\t        // * https://developer.mozilla.org/en/DOM/window.postMessage\n\t        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\t\n\t        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n\t        var onGlobalMessage = function(event) {\n\t            if (event.source === global &&\n\t                typeof event.data === \"string\" &&\n\t                event.data.indexOf(messagePrefix) === 0) {\n\t                runIfPresent(+event.data.slice(messagePrefix.length));\n\t            }\n\t        };\n\t\n\t        if (global.addEventListener) {\n\t            global.addEventListener(\"message\", onGlobalMessage, false);\n\t        } else {\n\t            global.attachEvent(\"onmessage\", onGlobalMessage);\n\t        }\n\t\n\t        registerImmediate = function(handle) {\n\t            global.postMessage(messagePrefix + handle, \"*\");\n\t        };\n\t    }\n\t\n\t    function installMessageChannelImplementation() {\n\t        var channel = new MessageChannel();\n\t        channel.port1.onmessage = function(event) {\n\t            var handle = event.data;\n\t            runIfPresent(handle);\n\t        };\n\t\n\t        registerImmediate = function(handle) {\n\t            channel.port2.postMessage(handle);\n\t        };\n\t    }\n\t\n\t    function installReadyStateChangeImplementation() {\n\t        var html = doc.documentElement;\n\t        registerImmediate = function(handle) {\n\t            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n\t            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n\t            var script = doc.createElement(\"script\");\n\t            script.onreadystatechange = function () {\n\t                runIfPresent(handle);\n\t                script.onreadystatechange = null;\n\t                html.removeChild(script);\n\t                script = null;\n\t            };\n\t            html.appendChild(script);\n\t        };\n\t    }\n\t\n\t    function installSetTimeoutImplementation() {\n\t        registerImmediate = function(handle) {\n\t            setTimeout(runIfPresent, 0, handle);\n\t        };\n\t    }\n\t\n\t    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n\t    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n\t    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\t\n\t    // Don't get fooled by e.g. browserify environments.\n\t    if ({}.toString.call(global.process) === \"[object process]\") {\n\t        // For Node.js before 0.9\n\t        installNextTickImplementation();\n\t\n\t    } else if (canUsePostMessage()) {\n\t        // For non-IE10 modern browsers\n\t        installPostMessageImplementation();\n\t\n\t    } else if (global.MessageChannel) {\n\t        // For web workers, where supported\n\t        installMessageChannelImplementation();\n\t\n\t    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n\t        // For IE 6–8\n\t        installReadyStateChangeImplementation();\n\t\n\t    } else {\n\t        // For older browsers\n\t        installSetTimeoutImplementation();\n\t    }\n\t\n\t    attachTo.setImmediate = setImmediate;\n\t    attachTo.clearImmediate = clearImmediate;\n\t}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(69)))\n\n/***/ }),\n\n/***/ 1051:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tmodule.exports = Stream;\n\t\n\tvar EE = __webpack_require__(194).EventEmitter;\n\tvar inherits = __webpack_require__(80);\n\t\n\tinherits(Stream, EE);\n\tStream.Readable = __webpack_require__(245);\n\tStream.Writable = __webpack_require__(957);\n\tStream.Duplex = __webpack_require__(952);\n\tStream.Transform = __webpack_require__(956);\n\tStream.PassThrough = __webpack_require__(955);\n\t\n\t// Backwards-compat with node 0.4.x\n\tStream.Stream = Stream;\n\t\n\t\n\t\n\t// old-style streams.  Note that the pipe method (the only relevant\n\t// part of this class) is overridden in the Readable class.\n\t\n\tfunction Stream() {\n\t  EE.call(this);\n\t}\n\t\n\tStream.prototype.pipe = function(dest, options) {\n\t  var source = this;\n\t\n\t  function ondata(chunk) {\n\t    if (dest.writable) {\n\t      if (false === dest.write(chunk) && source.pause) {\n\t        source.pause();\n\t      }\n\t    }\n\t  }\n\t\n\t  source.on('data', ondata);\n\t\n\t  function ondrain() {\n\t    if (source.readable && source.resume) {\n\t      source.resume();\n\t    }\n\t  }\n\t\n\t  dest.on('drain', ondrain);\n\t\n\t  // If the 'end' option is not supplied, dest.end() will be called when\n\t  // source gets the 'end' or 'close' events.  Only dest.end() once.\n\t  if (!dest._isStdio && (!options || options.end !== false)) {\n\t    source.on('end', onend);\n\t    source.on('close', onclose);\n\t  }\n\t\n\t  var didOnEnd = false;\n\t  function onend() {\n\t    if (didOnEnd) return;\n\t    didOnEnd = true;\n\t\n\t    dest.end();\n\t  }\n\t\n\t\n\t  function onclose() {\n\t    if (didOnEnd) return;\n\t    didOnEnd = true;\n\t\n\t    if (typeof dest.destroy === 'function') dest.destroy();\n\t  }\n\t\n\t  // don't leave dangling pipes when there are errors.\n\t  function onerror(er) {\n\t    cleanup();\n\t    if (EE.listenerCount(this, 'error') === 0) {\n\t      throw er; // Unhandled stream error in pipe.\n\t    }\n\t  }\n\t\n\t  source.on('error', onerror);\n\t  dest.on('error', onerror);\n\t\n\t  // remove all the event listeners that were added.\n\t  function cleanup() {\n\t    source.removeListener('data', ondata);\n\t    dest.removeListener('drain', ondrain);\n\t\n\t    source.removeListener('end', onend);\n\t    source.removeListener('close', onclose);\n\t\n\t    source.removeListener('error', onerror);\n\t    dest.removeListener('error', onerror);\n\t\n\t    source.removeListener('end', cleanup);\n\t    source.removeListener('close', cleanup);\n\t\n\t    dest.removeListener('close', cleanup);\n\t  }\n\t\n\t  source.on('end', cleanup);\n\t  source.on('close', cleanup);\n\t\n\t  dest.on('close', cleanup);\n\t\n\t  dest.emit('pipe', source);\n\t\n\t  // Allow for unix-like usage: A.pipe(B).pipe(C)\n\t  return dest;\n\t};\n\n\n/***/ }),\n\n/***/ 1052:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar apply = Function.prototype.apply;\n\t\n\t// DOM APIs, for completeness\n\t\n\texports.setTimeout = function() {\n\t  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n\t};\n\texports.setInterval = function() {\n\t  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n\t};\n\texports.clearTimeout =\n\texports.clearInterval = function(timeout) {\n\t  if (timeout) {\n\t    timeout.close();\n\t  }\n\t};\n\t\n\tfunction Timeout(id, clearFn) {\n\t  this._id = id;\n\t  this._clearFn = clearFn;\n\t}\n\tTimeout.prototype.unref = Timeout.prototype.ref = function() {};\n\tTimeout.prototype.close = function() {\n\t  this._clearFn.call(window, this._id);\n\t};\n\t\n\t// Does not start the time, just sets up the members needed.\n\texports.enroll = function(item, msecs) {\n\t  clearTimeout(item._idleTimeoutId);\n\t  item._idleTimeout = msecs;\n\t};\n\t\n\texports.unenroll = function(item) {\n\t  clearTimeout(item._idleTimeoutId);\n\t  item._idleTimeout = -1;\n\t};\n\t\n\texports._unrefActive = exports.active = function(item) {\n\t  clearTimeout(item._idleTimeoutId);\n\t\n\t  var msecs = item._idleTimeout;\n\t  if (msecs >= 0) {\n\t    item._idleTimeoutId = setTimeout(function onTimeout() {\n\t      if (item._onTimeout)\n\t        item._onTimeout();\n\t    }, msecs);\n\t  }\n\t};\n\t\n\t// setimmediate attaches itself to the global object\n\t__webpack_require__(1050);\n\texports.setImmediate = setImmediate;\n\texports.clearImmediate = clearImmediate;\n\n\n/***/ }),\n\n/***/ 1061:\n/***/ (function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = deprecate;\n\t\n\t/**\n\t * Mark that a method should not be used.\n\t * Returns a modified function which warns once by default.\n\t *\n\t * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n\t *\n\t * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n\t * will throw an Error when invoked.\n\t *\n\t * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n\t * will invoke `console.trace()` instead of `console.error()`.\n\t *\n\t * @param {Function} fn - the function to deprecate\n\t * @param {String} msg - the string to print to the console when `fn` is invoked\n\t * @returns {Function} a new \"deprecated\" version of `fn`\n\t * @api public\n\t */\n\t\n\tfunction deprecate (fn, msg) {\n\t  if (config('noDeprecation')) {\n\t    return fn;\n\t  }\n\t\n\t  var warned = false;\n\t  function deprecated() {\n\t    if (!warned) {\n\t      if (config('throwDeprecation')) {\n\t        throw new Error(msg);\n\t      } else if (config('traceDeprecation')) {\n\t        console.trace(msg);\n\t      } else {\n\t        console.warn(msg);\n\t      }\n\t      warned = true;\n\t    }\n\t    return fn.apply(this, arguments);\n\t  }\n\t\n\t  return deprecated;\n\t}\n\t\n\t/**\n\t * Checks `localStorage` for boolean values for the given `name`.\n\t *\n\t * @param {String} name\n\t * @returns {Boolean}\n\t * @api private\n\t */\n\t\n\tfunction config (name) {\n\t  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n\t  try {\n\t    if (!global.localStorage) return false;\n\t  } catch (_) {\n\t    return false;\n\t  }\n\t  var val = global.localStorage[name];\n\t  if (null == val) return false;\n\t  return String(val).toLowerCase() === 'true';\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n\n/***/ 503:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tvar Buffer = __webpack_require__(173).Buffer;\n\t\n\tvar isBufferEncoding = Buffer.isEncoding\n\t  || function(encoding) {\n\t       switch (encoding && encoding.toLowerCase()) {\n\t         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n\t         default: return false;\n\t       }\n\t     }\n\t\n\t\n\tfunction assertEncoding(encoding) {\n\t  if (encoding && !isBufferEncoding(encoding)) {\n\t    throw new Error('Unknown encoding: ' + encoding);\n\t  }\n\t}\n\t\n\t// StringDecoder provides an interface for efficiently splitting a series of\n\t// buffers into a series of JS strings without breaking apart multi-byte\n\t// characters. CESU-8 is handled as part of the UTF-8 encoding.\n\t//\n\t// @TODO Handling all encodings inside a single object makes it very difficult\n\t// to reason about this code, so it should be split up in the future.\n\t// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n\t// points as used by CESU-8.\n\tvar StringDecoder = exports.StringDecoder = function(encoding) {\n\t  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n\t  assertEncoding(encoding);\n\t  switch (this.encoding) {\n\t    case 'utf8':\n\t      // CESU-8 represents each of Surrogate Pair by 3-bytes\n\t      this.surrogateSize = 3;\n\t      break;\n\t    case 'ucs2':\n\t    case 'utf16le':\n\t      // UTF-16 represents each of Surrogate Pair by 2-bytes\n\t      this.surrogateSize = 2;\n\t      this.detectIncompleteChar = utf16DetectIncompleteChar;\n\t      break;\n\t    case 'base64':\n\t      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n\t      this.surrogateSize = 3;\n\t      this.detectIncompleteChar = base64DetectIncompleteChar;\n\t      break;\n\t    default:\n\t      this.write = passThroughWrite;\n\t      return;\n\t  }\n\t\n\t  // Enough space to store all bytes of a single character. UTF-8 needs 4\n\t  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n\t  this.charBuffer = new Buffer(6);\n\t  // Number of bytes received for the current incomplete multi-byte character.\n\t  this.charReceived = 0;\n\t  // Number of bytes expected for the current incomplete multi-byte character.\n\t  this.charLength = 0;\n\t};\n\t\n\t\n\t// write decodes the given buffer and returns it as JS string that is\n\t// guaranteed to not contain any partial multi-byte characters. Any partial\n\t// character found at the end of the buffer is buffered up, and will be\n\t// returned when calling write again with the remaining bytes.\n\t//\n\t// Note: Converting a Buffer containing an orphan surrogate to a String\n\t// currently works, but converting a String to a Buffer (via `new Buffer`, or\n\t// Buffer#write) will replace incomplete surrogates with the unicode\n\t// replacement character. See https://codereview.chromium.org/121173009/ .\n\tStringDecoder.prototype.write = function(buffer) {\n\t  var charStr = '';\n\t  // if our last write ended with an incomplete multibyte character\n\t  while (this.charLength) {\n\t    // determine how many remaining bytes this buffer has to offer for this char\n\t    var available = (buffer.length >= this.charLength - this.charReceived) ?\n\t        this.charLength - this.charReceived :\n\t        buffer.length;\n\t\n\t    // add the new bytes to the char buffer\n\t    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n\t    this.charReceived += available;\n\t\n\t    if (this.charReceived < this.charLength) {\n\t      // still not enough chars in this buffer? wait for more ...\n\t      return '';\n\t    }\n\t\n\t    // remove bytes belonging to the current character from the buffer\n\t    buffer = buffer.slice(available, buffer.length);\n\t\n\t    // get the character that was split\n\t    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\t\n\t    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n\t    var charCode = charStr.charCodeAt(charStr.length - 1);\n\t    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n\t      this.charLength += this.surrogateSize;\n\t      charStr = '';\n\t      continue;\n\t    }\n\t    this.charReceived = this.charLength = 0;\n\t\n\t    // if there are no more bytes in this buffer, just emit our char\n\t    if (buffer.length === 0) {\n\t      return charStr;\n\t    }\n\t    break;\n\t  }\n\t\n\t  // determine and set charLength / charReceived\n\t  this.detectIncompleteChar(buffer);\n\t\n\t  var end = buffer.length;\n\t  if (this.charLength) {\n\t    // buffer the incomplete character bytes we got\n\t    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n\t    end -= this.charReceived;\n\t  }\n\t\n\t  charStr += buffer.toString(this.encoding, 0, end);\n\t\n\t  var end = charStr.length - 1;\n\t  var charCode = charStr.charCodeAt(end);\n\t  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n\t  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n\t    var size = this.surrogateSize;\n\t    this.charLength += size;\n\t    this.charReceived += size;\n\t    this.charBuffer.copy(this.charBuffer, size, 0, size);\n\t    buffer.copy(this.charBuffer, 0, 0, size);\n\t    return charStr.substring(0, end);\n\t  }\n\t\n\t  // or just emit the charStr\n\t  return charStr;\n\t};\n\t\n\t// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n\t// the end of the given buffer. If so, it sets this.charLength to the byte\n\t// length that character, and sets this.charReceived to the number of bytes\n\t// that are available for this character.\n\tStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n\t  // determine how many bytes we have to check at the end of this buffer\n\t  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\t\n\t  // Figure out if one of the last i bytes of our buffer announces an\n\t  // incomplete char.\n\t  for (; i > 0; i--) {\n\t    var c = buffer[buffer.length - i];\n\t\n\t    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\t\n\t    // 110XXXXX\n\t    if (i == 1 && c >> 5 == 0x06) {\n\t      this.charLength = 2;\n\t      break;\n\t    }\n\t\n\t    // 1110XXXX\n\t    if (i <= 2 && c >> 4 == 0x0E) {\n\t      this.charLength = 3;\n\t      break;\n\t    }\n\t\n\t    // 11110XXX\n\t    if (i <= 3 && c >> 3 == 0x1E) {\n\t      this.charLength = 4;\n\t      break;\n\t    }\n\t  }\n\t  this.charReceived = i;\n\t};\n\t\n\tStringDecoder.prototype.end = function(buffer) {\n\t  var res = '';\n\t  if (buffer && buffer.length)\n\t    res = this.write(buffer);\n\t\n\t  if (this.charReceived) {\n\t    var cr = this.charReceived;\n\t    var buf = this.charBuffer;\n\t    var enc = this.encoding;\n\t    res += buf.slice(0, cr).toString(enc);\n\t  }\n\t\n\t  return res;\n\t};\n\t\n\tfunction passThroughWrite(buffer) {\n\t  return buffer.toString(this.encoding);\n\t}\n\t\n\tfunction utf16DetectIncompleteChar(buffer) {\n\t  this.charReceived = buffer.length % 2;\n\t  this.charLength = this.charReceived ? 2 : 0;\n\t}\n\t\n\tfunction base64DetectIncompleteChar(buffer) {\n\t  this.charReceived = buffer.length % 3;\n\t  this.charLength = this.charReceived ? 3 : 0;\n\t}\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-reading-js-9dec2cc18ee3fa019889.js","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\nvar keys = objectKeys(Writable.prototype);\nfor (var v = 0; v < keys.length; v++) {\n  var method = keys[v];\n  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  processNextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  processNextTick(cb, err);\n};\n\nfunction forEach(xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/readable-stream/lib/_stream_duplex.js\n// module id = 71\n// module chunks = 47301250561866","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-util-is/lib/util.js\n// module id = 95\n// module chunks = 47301250561866","// the whatwg-fetch polyfill installs the fetch() function\n// on the global object (window or self)\n//\n// Return that as the export for use in Webpack, Browserify etc.\nrequire('whatwg-fetch');\nmodule.exports = self.fetch.bind(self);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/isomorphic-fetch/fetch-npm-browserify.js\n// module id = 96\n// module chunks = 47301250561866 72535408073075 96068746775097","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/whatwg-fetch/fetch.js\n// module id = 112\n// module chunks = 47301250561866 72535408073075 96068746775097","'use strict';\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = nextTick;\n} else {\n  module.exports = process.nextTick;\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process-nextick-args/index.js\n// module id = 156\n// module chunks = 47301250561866","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/buffer/index.js\n// module id = 173\n// module chunks = 47301250561866","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/events/events.js\n// module id = 194\n// module chunks = 47301250561866","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : processNextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  processNextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    processNextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = _isUint8Array(chunk) && !state.objectMode;\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    processNextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    processNextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequestCount = 0;\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      processNextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) processNextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/readable-stream/lib/_stream_writable.js\n// module id = 244\n// module chunks = 47301250561866","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/readable-stream/readable-browser.js\n// module id = 245\n// module chunks = 47301250561866","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/safe-buffer/index.js\n// module id = 246\n// module chunks = 47301250561866","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n// TODO(bmeurer): Change this back to const once hole checks are\n// properly optimized away early in Ignition+TurboFan.\n/*<replacement>*/\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') {\n    return emitter.prependListener(event, fn);\n  } else {\n    // This is a hack to make sure that our error handler is attached before any\n    // userland ones.  NEVER DO THIS. This is here only because this code needs\n    // to continue to work with older versions of Node.js that do not include\n    // the prependListener() method. The goal is to eventually remove this hack.\n    if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n  }\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) processNextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    processNextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) processNextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        processNextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    processNextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], self.emit.bind(self, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    processNextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction forEach(xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/readable-stream/lib/_stream_readable.js\n// module id = 407\n// module chunks = 47301250561866","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction TransformState(stream) {\n  this.afterTransform = function (er, data) {\n    return afterTransform(stream, er, data);\n  };\n\n  this.needTransform = false;\n  this.transforming = false;\n  this.writecb = null;\n  this.writechunk = null;\n  this.writeencoding = null;\n}\n\nfunction afterTransform(stream, er, data) {\n  var ts = stream._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return stream.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data !== null && data !== undefined) stream.push(data);\n\n  cb(er);\n\n  var rs = stream._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    stream._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = new TransformState(this);\n\n  var stream = this;\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.once('prefinish', function () {\n    if (typeof this._flush === 'function') this._flush(function (er, data) {\n      done(stream, er, data);\n    });else done(stream);\n  });\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data !== null && data !== undefined) stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  var ws = stream._writableState;\n  var ts = stream._transformState;\n\n  if (ws.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (ts.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/readable-stream/lib/_stream_transform.js\n// module id = 408\n// module chunks = 47301250561866","'use strict';\n\n/*<replacement>*/\n\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      processNextTick(emitErrorNT, this, err);\n    }\n    return;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      processNextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/readable-stream/lib/internal/streams/destroy.js\n// module id = 409\n// module chunks = 47301250561866","module.exports = require('events').EventEmitter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/readable-stream/lib/internal/streams/stream-browser.js\n// module id = 410\n// module chunks = 47301250561866","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inherits/inherits_browser.js\n// module id = 80\n// module chunks = 47301250561866","/*\n  DEV: this is supposed to become an up-to-date reading list synced from my PC\n*/\n\nimport React from \"react\"\nimport Link from \"gatsby-link\"\nimport { Table, Responsive, Header, List, Label, Item, Icon, Grid, Container } from 'semantic-ui-react'\nimport \"isomorphic-fetch\"\nimport { spacer } from \"../common\"\nimport Papa from 'papaparse'\n\nconst _URL = 'https://raw.githubusercontent.com/joetm/jonaso/master/reading_list/readinglist.csv'\n\n//dev\nconst documents = [\n  {\n    fname: '++++++++++++D07-1074.pdf',\n    title: 'TITLE HERE',\n    author: 'AUTHOR HERE',\n    year: '2000',\n    keywords: ''\n  },\n  {\n    fname: '+++++++++AAAI06-223.pdf',\n    title: 'TITLE HERE',\n    author: 'AUTHOR HERE',\n    year: '2000',\n    keywords: ''\n  },\n  {\n    fname: '+++++++++ECIS_2009_taxonomy_final_3.pdf',\n    title: 'TITLE HERE',\n    author: 'AUTHOR HERE',\n    year: '2000',\n    keywords: ''\n  },\n  {\n    fname: 'FOIS98.pdf',\n    title: 'TITLE HERE',\n    author: 'AUTHOR HERE',\n    year: '2000',\n    keywords: ''\n  },\n]\n\n\nclass ReadingList extends React.Component {\n  state = {\n    documents: [],\n  }\n  componentWillMount = () => {\n    Papa.parse(_URL, {\n      download: true,\n      delimiter: \"|\",\n      header: true,\n      trimHeaders: true,\n      dynamicTyping: false,\n      preview: 0,\n      encoding: \"utf-8\",\n      // worker: false,\n      // comments: false,\n      // step: undefined,\n      // error: undefined,\n      skipEmptyLines: true,\n      // chunk: undefined,\n      // fastMode: undefined,\n      // beforeFirstChunk: undefined,\n      complete: results => {\n        // console.log(results)\n        this.setState({documents: results.data})\n      }\n    })\n  }\n  render() {\n    const { documents } = this.state\n    return (\n      <div>\n        <Container>\n\n              <Header size=\"large\">Reading List</Header>\n\n<Table celled>\n    <Table.Header>\n      <Table.Row>\n        <Table.HeaderCell>Filename</Table.HeaderCell>\n        <Table.HeaderCell>Title</Table.HeaderCell>\n        <Table.HeaderCell>Author</Table.HeaderCell>\n        <Table.HeaderCell>Author Keywords</Table.HeaderCell>\n        <Table.HeaderCell># Pages</Table.HeaderCell>\n      </Table.Row>\n    </Table.Header>\n    <Table.Body>\n              {\n                documents.map((doc, idx) => {\n                  return (\n                    <Table.Row key={`row_${idx}`}>\n                      <Table.Cell textAlign=\"left\" width=\"one\"><Label>{doc.filename}</Label></Table.Cell>\n                      <Table.Cell textAlign=\"left\">{doc.title}</Table.Cell>\n                      <Table.Cell textAlign=\"left\" width=\"two\">{doc.author}</Table.Cell>\n                      <Table.Cell textAlign=\"left\" width=\"two\">{doc.keywords}</Table.Cell>\n                      <Table.Cell textAlign=\"left\" width=\"one\">{doc.numPages}</Table.Cell>\n                    </Table.Row>\n                  )\n                })\n              }\n  </Table.Body>\n</Table>\n\n            <div style={spacer}></div>\n\n        </Container>\n      </div>\n    )\n  }\n}\n\nexport default ReadingList\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/reading.js","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return (b64.length * 3 / 4) - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr((len * 3 / 4) - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0; i < l; i += 4) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/base64-js/index.js\n// module id = 533\n// module chunks = 47301250561866","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ieee754/index.js\n// module id = 662\n// module chunks = 47301250561866","/*@license\n\tPapa Parse\n\tv4.6.0\n\thttps://github.com/mholt/PapaParse\n\tLicense: MIT\n*/\n(function(root, factory)\n{\n\t/* globals define */\n\tif (typeof define === 'function' && define.amd)\n\t{\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine([], factory);\n\t}\n\telse if (typeof module === 'object' && typeof exports !== 'undefined')\n\t{\n\t\t// Node. Does not work with strict CommonJS, but\n\t\t// only CommonJS-like environments that support module.exports,\n\t\t// like Node.\n\t\tmodule.exports = factory();\n\t}\n\telse\n\t{\n\t\t// Browser globals (root is window)\n\t\troot.Papa = factory();\n\t}\n}(this, function()\n{\n\t'use strict';\n\n\tvar global = (function() {\n\t\t// alternative method, similar to `Function('return this')()`\n\t\t// but without using `eval` (which is disabled when\n\t\t// using Content Security Policy).\n\n\t\tif (typeof self !== 'undefined') { return self; }\n\t\tif (typeof window !== 'undefined') { return window; }\n\t\tif (typeof global !== 'undefined') { return global; }\n\n\t\t// When running tests none of the above have been defined\n\t\treturn {};\n\t})();\n\n\n\tvar IS_WORKER = !global.document && !!global.postMessage,\n\t\tIS_PAPA_WORKER = IS_WORKER && /(\\?|&)papaworker(=|&|$)/.test(global.location.search),\n\t\tLOADED_SYNC = false, AUTO_SCRIPT_PATH;\n\tvar workers = {}, workerIdCounter = 0;\n\n\tvar Papa = {};\n\n\tPapa.parse = CsvToJson;\n\tPapa.unparse = JsonToCsv;\n\n\tPapa.RECORD_SEP = String.fromCharCode(30);\n\tPapa.UNIT_SEP = String.fromCharCode(31);\n\tPapa.BYTE_ORDER_MARK = '\\ufeff';\n\tPapa.BAD_DELIMITERS = ['\\r', '\\n', '\"', Papa.BYTE_ORDER_MARK];\n\tPapa.WORKERS_SUPPORTED = !IS_WORKER && !!global.Worker;\n\tPapa.SCRIPT_PATH = null;\t// Must be set by your code if you use workers and this lib is loaded asynchronously\n\tPapa.NODE_STREAM_INPUT = 1;\n\n\t// Configurable chunk sizes for local and remote files, respectively\n\tPapa.LocalChunkSize = 1024 * 1024 * 10;\t// 10 MB\n\tPapa.RemoteChunkSize = 1024 * 1024 * 5;\t// 5 MB\n\tPapa.DefaultDelimiter = ',';\t\t\t// Used if not specified and detection fails\n\n\t// Exposed for testing and development only\n\tPapa.Parser = Parser;\n\tPapa.ParserHandle = ParserHandle;\n\tPapa.NetworkStreamer = NetworkStreamer;\n\tPapa.FileStreamer = FileStreamer;\n\tPapa.StringStreamer = StringStreamer;\n\tPapa.ReadableStreamStreamer = ReadableStreamStreamer;\n\tPapa.DuplexStreamStreamer = DuplexStreamStreamer;\n\n\tif (global.jQuery)\n\t{\n\t\tvar $ = global.jQuery;\n\t\t$.fn.parse = function(options)\n\t\t{\n\t\t\tvar config = options.config || {};\n\t\t\tvar queue = [];\n\n\t\t\tthis.each(function(idx)\n\t\t\t{\n\t\t\t\tvar supported = $(this).prop('tagName').toUpperCase() === 'INPUT'\n\t\t\t\t\t\t\t\t&& $(this).attr('type').toLowerCase() === 'file'\n\t\t\t\t\t\t\t\t&& global.FileReader;\n\n\t\t\t\tif (!supported || !this.files || this.files.length === 0)\n\t\t\t\t\treturn true;\t// continue to next input element\n\n\t\t\t\tfor (var i = 0; i < this.files.length; i++)\n\t\t\t\t{\n\t\t\t\t\tqueue.push({\n\t\t\t\t\t\tfile: this.files[i],\n\t\t\t\t\t\tinputElem: this,\n\t\t\t\t\t\tinstanceConfig: $.extend({}, config)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tparseNextFile();\t// begin parsing\n\t\t\treturn this;\t\t// maintains chainability\n\n\n\t\t\tfunction parseNextFile()\n\t\t\t{\n\t\t\t\tif (queue.length === 0)\n\t\t\t\t{\n\t\t\t\t\tif (isFunction(options.complete))\n\t\t\t\t\t\toptions.complete();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar f = queue[0];\n\n\t\t\t\tif (isFunction(options.before))\n\t\t\t\t{\n\t\t\t\t\tvar returned = options.before(f.file, f.inputElem);\n\n\t\t\t\t\tif (typeof returned === 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (returned.action === 'abort')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\terror('AbortError', f.file, f.inputElem, returned.reason);\n\t\t\t\t\t\t\treturn;\t// Aborts all queued files immediately\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (returned.action === 'skip')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfileComplete();\t// parse the next file in the queue, if any\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (typeof returned.config === 'object')\n\t\t\t\t\t\t\tf.instanceConfig = $.extend(f.instanceConfig, returned.config);\n\t\t\t\t\t}\n\t\t\t\t\telse if (returned === 'skip')\n\t\t\t\t\t{\n\t\t\t\t\t\tfileComplete();\t// parse the next file in the queue, if any\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Wrap up the user's complete callback, if any, so that ours also gets executed\n\t\t\t\tvar userCompleteFunc = f.instanceConfig.complete;\n\t\t\t\tf.instanceConfig.complete = function(results)\n\t\t\t\t{\n\t\t\t\t\tif (isFunction(userCompleteFunc))\n\t\t\t\t\t\tuserCompleteFunc(results, f.file, f.inputElem);\n\t\t\t\t\tfileComplete();\n\t\t\t\t};\n\n\t\t\t\tPapa.parse(f.file, f.instanceConfig);\n\t\t\t}\n\n\t\t\tfunction error(name, file, elem, reason)\n\t\t\t{\n\t\t\t\tif (isFunction(options.error))\n\t\t\t\t\toptions.error({name: name}, file, elem, reason);\n\t\t\t}\n\n\t\t\tfunction fileComplete()\n\t\t\t{\n\t\t\t\tqueue.splice(0, 1);\n\t\t\t\tparseNextFile();\n\t\t\t}\n\t\t};\n\t}\n\n\n\tif (IS_PAPA_WORKER)\n\t{\n\t\tglobal.onmessage = workerThreadReceivedMessage;\n\t}\n\telse if (Papa.WORKERS_SUPPORTED)\n\t{\n\t\tAUTO_SCRIPT_PATH = getScriptPath();\n\n\t\t// Check if the script was loaded synchronously\n\t\tif (!document.body)\n\t\t{\n\t\t\t// Body doesn't exist yet, must be synchronous\n\t\t\tLOADED_SYNC = true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdocument.addEventListener('DOMContentLoaded', function() {\n\t\t\t\tLOADED_SYNC = true;\n\t\t\t}, true);\n\t\t}\n\t}\n\n\n\n\n\tfunction CsvToJson(_input, _config)\n\t{\n\t\t_config = _config || {};\n\t\tvar dynamicTyping = _config.dynamicTyping || false;\n\t\tif (isFunction(dynamicTyping)) {\n\t\t\t_config.dynamicTypingFunction = dynamicTyping;\n\t\t\t// Will be filled on first row call\n\t\t\tdynamicTyping = {};\n\t\t}\n\t\t_config.dynamicTyping = dynamicTyping;\n\n\t\t_config.transform = isFunction(_config.transform) ? _config.transform : false;\n\n\t\tif (_config.worker && Papa.WORKERS_SUPPORTED)\n\t\t{\n\t\t\tvar w = newWorker();\n\n\t\t\tw.userStep = _config.step;\n\t\t\tw.userChunk = _config.chunk;\n\t\t\tw.userComplete = _config.complete;\n\t\t\tw.userError = _config.error;\n\n\t\t\t_config.step = isFunction(_config.step);\n\t\t\t_config.chunk = isFunction(_config.chunk);\n\t\t\t_config.complete = isFunction(_config.complete);\n\t\t\t_config.error = isFunction(_config.error);\n\t\t\tdelete _config.worker;\t// prevent infinite loop\n\n\t\t\tw.postMessage({\n\t\t\t\tinput: _input,\n\t\t\t\tconfig: _config,\n\t\t\t\tworkerId: w.id\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar streamer = null;\n\t\tif (_input === Papa.NODE_STREAM_INPUT)\n\t\t{\n\t\t\t// create a node Duplex stream for use\n\t\t\t// with .pipe\n\t\t\tstreamer = new DuplexStreamStreamer(_config);\n\t\t\treturn streamer.getStream();\n\t\t}\n\t\telse if (typeof _input === 'string')\n\t\t{\n\t\t\tif (_config.download)\n\t\t\t\tstreamer = new NetworkStreamer(_config);\n\t\t\telse\n\t\t\t\tstreamer = new StringStreamer(_config);\n\t\t}\n\t\telse if (_input.readable === true && isFunction(_input.read) && isFunction(_input.on))\n\t\t{\n\t\t\tstreamer = new ReadableStreamStreamer(_config);\n\t\t}\n\t\telse if ((global.File && _input instanceof File) || _input instanceof Object)\t// ...Safari. (see issue #106)\n\t\t\tstreamer = new FileStreamer(_config);\n\n\t\treturn streamer.stream(_input);\n\t}\n\n\n\n\n\n\n\tfunction JsonToCsv(_input, _config)\n\t{\n\t\t// Default configuration\n\n\t\t/** whether to surround every datum with quotes */\n\t\tvar _quotes = false;\n\n\t\t/** whether to write headers */\n\t\tvar _writeHeader = true;\n\n\t\t/** delimiting character(s) */\n\t\tvar _delimiter = ',';\n\n\t\t/** newline character(s) */\n\t\tvar _newline = '\\r\\n';\n\n\t\t/** quote character */\n\t\tvar _quoteChar = '\"';\n\n\t\tunpackConfig();\n\n\t\tvar quoteCharRegex = new RegExp(_quoteChar, 'g');\n\n\t\tif (typeof _input === 'string')\n\t\t\t_input = JSON.parse(_input);\n\n\t\tif (_input instanceof Array)\n\t\t{\n\t\t\tif (!_input.length || _input[0] instanceof Array)\n\t\t\t\treturn serialize(null, _input);\n\t\t\telse if (typeof _input[0] === 'object')\n\t\t\t\treturn serialize(objectKeys(_input[0]), _input);\n\t\t}\n\t\telse if (typeof _input === 'object')\n\t\t{\n\t\t\tif (typeof _input.data === 'string')\n\t\t\t\t_input.data = JSON.parse(_input.data);\n\n\t\t\tif (_input.data instanceof Array)\n\t\t\t{\n\t\t\t\tif (!_input.fields)\n\t\t\t\t\t_input.fields =  _input.meta && _input.meta.fields;\n\n\t\t\t\tif (!_input.fields)\n\t\t\t\t\t_input.fields =  _input.data[0] instanceof Array\n\t\t\t\t\t\t? _input.fields\n\t\t\t\t\t\t: objectKeys(_input.data[0]);\n\n\t\t\t\tif (!(_input.data[0] instanceof Array) && typeof _input.data[0] !== 'object')\n\t\t\t\t\t_input.data = [_input.data];\t// handles input like [1,2,3] or ['asdf']\n\t\t\t}\n\n\t\t\treturn serialize(_input.fields || [], _input.data || []);\n\t\t}\n\n\t\t// Default (any valid paths should return before this)\n\t\tthrow 'exception: Unable to serialize unrecognized input';\n\n\n\t\tfunction unpackConfig()\n\t\t{\n\t\t\tif (typeof _config !== 'object')\n\t\t\t\treturn;\n\n\t\t\tif (typeof _config.delimiter === 'string'\n                && !Papa.BAD_DELIMITERS.filter(function(value) { return _config.delimiter.indexOf(value) !== -1; }).length)\n\t\t\t{\n\t\t\t\t_delimiter = _config.delimiter;\n\t\t\t}\n\n\t\t\tif (typeof _config.quotes === 'boolean'\n\t\t\t\t|| _config.quotes instanceof Array)\n\t\t\t\t_quotes = _config.quotes;\n\n\t\t\tif (typeof _config.newline === 'string')\n\t\t\t\t_newline = _config.newline;\n\n\t\t\tif (typeof _config.quoteChar === 'string')\n\t\t\t\t_quoteChar = _config.quoteChar;\n\n\t\t\tif (typeof _config.header === 'boolean')\n\t\t\t\t_writeHeader = _config.header;\n\t\t}\n\n\n\t\t/** Turns an object's keys into an array */\n\t\tfunction objectKeys(obj)\n\t\t{\n\t\t\tif (typeof obj !== 'object')\n\t\t\t\treturn [];\n\t\t\tvar keys = [];\n\t\t\tfor (var key in obj)\n\t\t\t\tkeys.push(key);\n\t\t\treturn keys;\n\t\t}\n\n\t\t/** The double for loop that iterates the data and writes out a CSV string including header row */\n\t\tfunction serialize(fields, data)\n\t\t{\n\t\t\tvar csv = '';\n\n\t\t\tif (typeof fields === 'string')\n\t\t\t\tfields = JSON.parse(fields);\n\t\t\tif (typeof data === 'string')\n\t\t\t\tdata = JSON.parse(data);\n\n\t\t\tvar hasHeader = fields instanceof Array && fields.length > 0;\n\t\t\tvar dataKeyedByField = !(data[0] instanceof Array);\n\n\t\t\t// If there a header row, write it first\n\t\t\tif (hasHeader && _writeHeader)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < fields.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (i > 0)\n\t\t\t\t\t\tcsv += _delimiter;\n\t\t\t\t\tcsv += safe(fields[i], i);\n\t\t\t\t}\n\t\t\t\tif (data.length > 0)\n\t\t\t\t\tcsv += _newline;\n\t\t\t}\n\n\t\t\t// Then write out the data\n\t\t\tfor (var row = 0; row < data.length; row++)\n\t\t\t{\n\t\t\t\tvar maxCol = hasHeader ? fields.length : data[row].length;\n\n\t\t\t\tfor (var col = 0; col < maxCol; col++)\n\t\t\t\t{\n\t\t\t\t\tif (col > 0)\n\t\t\t\t\t\tcsv += _delimiter;\n\t\t\t\t\tvar colIdx = hasHeader && dataKeyedByField ? fields[col] : col;\n\t\t\t\t\tcsv += safe(data[row][colIdx], col);\n\t\t\t\t}\n\n\t\t\t\tif (row < data.length - 1)\n\t\t\t\t\tcsv += _newline;\n\t\t\t}\n\n\t\t\treturn csv;\n\t\t}\n\n\t\t/** Encloses a value around quotes if needed (makes a value safe for CSV insertion) */\n\t\tfunction safe(str, col)\n\t\t{\n\t\t\tif (typeof str === 'undefined' || str === null)\n\t\t\t\treturn '';\n\n\t\t\tif (str.constructor === Date)\n\t\t\t\treturn JSON.stringify(str).slice(1, 25);\n\n\t\t\tstr = str.toString().replace(quoteCharRegex, _quoteChar + _quoteChar);\n\n\t\t\tvar needsQuotes = (typeof _quotes === 'boolean' && _quotes)\n\t\t\t\t\t\t\t|| (_quotes instanceof Array && _quotes[col])\n\t\t\t\t\t\t\t|| hasAny(str, Papa.BAD_DELIMITERS)\n\t\t\t\t\t\t\t|| str.indexOf(_delimiter) > -1\n\t\t\t\t\t\t\t|| str.charAt(0) === ' '\n\t\t\t\t\t\t\t|| str.charAt(str.length - 1) === ' ';\n\n\t\t\treturn needsQuotes ? _quoteChar + str + _quoteChar : str;\n\t\t}\n\n\t\tfunction hasAny(str, substrings)\n\t\t{\n\t\t\tfor (var i = 0; i < substrings.length; i++)\n\t\t\t\tif (str.indexOf(substrings[i]) > -1)\n\t\t\t\t\treturn true;\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/** ChunkStreamer is the base prototype for various streamer implementations. */\n\tfunction ChunkStreamer(config)\n\t{\n\t\tthis._handle = null;\n\t\tthis._finished = false;\n\t\tthis._completed = false;\n\t\tthis._input = null;\n\t\tthis._baseIndex = 0;\n\t\tthis._partialLine = '';\n\t\tthis._rowCount = 0;\n\t\tthis._start = 0;\n\t\tthis._nextChunk = null;\n\t\tthis.isFirstChunk = true;\n\t\tthis._completeResults = {\n\t\t\tdata: [],\n\t\t\terrors: [],\n\t\t\tmeta: {}\n\t\t};\n\t\treplaceConfig.call(this, config);\n\n\t\tthis.parseChunk = function(chunk, isFakeChunk)\n\t\t{\n\t\t\t// First chunk pre-processing\n\t\t\tif (this.isFirstChunk && isFunction(this._config.beforeFirstChunk))\n\t\t\t{\n\t\t\t\tvar modifiedChunk = this._config.beforeFirstChunk(chunk);\n\t\t\t\tif (modifiedChunk !== undefined)\n\t\t\t\t\tchunk = modifiedChunk;\n\t\t\t}\n\t\t\tthis.isFirstChunk = false;\n\n\t\t\t// Rejoin the line we likely just split in two by chunking the file\n\t\t\tvar aggregate = this._partialLine + chunk;\n\t\t\tthis._partialLine = '';\n\n\t\t\tvar results = this._handle.parse(aggregate, this._baseIndex, !this._finished);\n\n\t\t\tif (this._handle.paused() || this._handle.aborted())\n\t\t\t\treturn;\n\n\t\t\tvar lastIndex = results.meta.cursor;\n\n\t\t\tif (!this._finished)\n\t\t\t{\n\t\t\t\tthis._partialLine = aggregate.substring(lastIndex - this._baseIndex);\n\t\t\t\tthis._baseIndex = lastIndex;\n\t\t\t}\n\n\t\t\tif (results && results.data)\n\t\t\t\tthis._rowCount += results.data.length;\n\n\t\t\tvar finishedIncludingPreview = this._finished || (this._config.preview && this._rowCount >= this._config.preview);\n\n\t\t\tif (IS_PAPA_WORKER)\n\t\t\t{\n\t\t\t\tglobal.postMessage({\n\t\t\t\t\tresults: results,\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\t\tfinished: finishedIncludingPreview\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if (isFunction(this._config.chunk) && !isFakeChunk)\n\t\t\t{\n\t\t\t\tthis._config.chunk(results, this._handle);\n\t\t\t\tif (this._handle.paused() || this._handle.aborted())\n\t\t\t\t\treturn;\n\t\t\t\tresults = undefined;\n\t\t\t\tthis._completeResults = undefined;\n\t\t\t}\n\n\t\t\tif (!this._config.step && !this._config.chunk) {\n\t\t\t\tthis._completeResults.data = this._completeResults.data.concat(results.data);\n\t\t\t\tthis._completeResults.errors = this._completeResults.errors.concat(results.errors);\n\t\t\t\tthis._completeResults.meta = results.meta;\n\t\t\t}\n\n\t\t\tif (!this._completed && finishedIncludingPreview && isFunction(this._config.complete) && (!results || !results.meta.aborted)) {\n\t\t\t\tthis._config.complete(this._completeResults, this._input);\n\t\t\t\tthis._completed = true;\n\t\t\t}\n\n\t\t\tif (!finishedIncludingPreview && (!results || !results.meta.paused))\n\t\t\t\tthis._nextChunk();\n\n\t\t\treturn results;\n\t\t};\n\n\t\tthis._sendError = function(error)\n\t\t{\n\t\t\tif (isFunction(this._config.error))\n\t\t\t\tthis._config.error(error);\n\t\t\telse if (IS_PAPA_WORKER && this._config.error)\n\t\t\t{\n\t\t\t\tglobal.postMessage({\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\t\terror: error,\n\t\t\t\t\tfinished: false\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tfunction replaceConfig(config)\n\t\t{\n\t\t\t// Deep-copy the config so we can edit it\n\t\t\tvar configCopy = copy(config);\n\t\t\tconfigCopy.chunkSize = parseInt(configCopy.chunkSize);\t// parseInt VERY important so we don't concatenate strings!\n\t\t\tif (!config.step && !config.chunk)\n\t\t\t\tconfigCopy.chunkSize = null;  // disable Range header if not streaming; bad values break IIS - see issue #196\n\t\t\tthis._handle = new ParserHandle(configCopy);\n\t\t\tthis._handle.streamer = this;\n\t\t\tthis._config = configCopy;\t// persist the copy to the caller\n\t\t}\n\t}\n\n\n\tfunction NetworkStreamer(config)\n\t{\n\t\tconfig = config || {};\n\t\tif (!config.chunkSize)\n\t\t\tconfig.chunkSize = Papa.RemoteChunkSize;\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar xhr;\n\n\t\tif (IS_WORKER)\n\t\t{\n\t\t\tthis._nextChunk = function()\n\t\t\t{\n\t\t\t\tthis._readChunk();\n\t\t\t\tthis._chunkLoaded();\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis._nextChunk = function()\n\t\t\t{\n\t\t\t\tthis._readChunk();\n\t\t\t};\n\t\t}\n\n\t\tthis.stream = function(url)\n\t\t{\n\t\t\tthis._input = url;\n\t\t\tthis._nextChunk();\t// Starts streaming\n\t\t};\n\n\t\tthis._readChunk = function()\n\t\t{\n\t\t\tif (this._finished)\n\t\t\t{\n\t\t\t\tthis._chunkLoaded();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\txhr = new XMLHttpRequest();\n\n\t\t\tif (this._config.withCredentials)\n\t\t\t{\n\t\t\t\txhr.withCredentials = this._config.withCredentials;\n\t\t\t}\n\n\t\t\tif (!IS_WORKER)\n\t\t\t{\n\t\t\t\txhr.onload = bindFunction(this._chunkLoaded, this);\n\t\t\t\txhr.onerror = bindFunction(this._chunkError, this);\n\t\t\t}\n\n\t\t\txhr.open('GET', this._input, !IS_WORKER);\n\t\t\t// Headers can only be set when once the request state is OPENED\n\t\t\tif (this._config.downloadRequestHeaders)\n\t\t\t{\n\t\t\t\tvar headers = this._config.downloadRequestHeaders;\n\n\t\t\t\tfor (var headerName in headers)\n\t\t\t\t{\n\t\t\t\t\txhr.setRequestHeader(headerName, headers[headerName]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._config.chunkSize)\n\t\t\t{\n\t\t\t\tvar end = this._start + this._config.chunkSize - 1;\t// minus one because byte range is inclusive\n\t\t\t\txhr.setRequestHeader('Range', 'bytes=' + this._start + '-' + end);\n\t\t\t\txhr.setRequestHeader('If-None-Match', 'webkit-no-cache'); // https://bugs.webkit.org/show_bug.cgi?id=82672\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\txhr.send();\n\t\t\t}\n\t\t\tcatch (err) {\n\t\t\t\tthis._chunkError(err.message);\n\t\t\t}\n\n\t\t\tif (IS_WORKER && xhr.status === 0)\n\t\t\t\tthis._chunkError();\n\t\t\telse\n\t\t\t\tthis._start += this._config.chunkSize;\n\t\t};\n\n\t\tthis._chunkLoaded = function()\n\t\t{\n\t\t\tif (xhr.readyState !== 4)\n\t\t\t\treturn;\n\n\t\t\tif (xhr.status < 200 || xhr.status >= 400)\n\t\t\t{\n\t\t\t\tthis._chunkError();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._finished = !this._config.chunkSize || this._start > getFileSize(xhr);\n\t\t\tthis.parseChunk(xhr.responseText);\n\t\t};\n\n\t\tthis._chunkError = function(errorMessage)\n\t\t{\n\t\t\tvar errorText = xhr.statusText || errorMessage;\n\t\t\tthis._sendError(new Error(errorText));\n\t\t};\n\n\t\tfunction getFileSize(xhr)\n\t\t{\n\t\t\tvar contentRange = xhr.getResponseHeader('Content-Range');\n\t\t\tif (contentRange === null) { // no content range, then finish!\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn parseInt(contentRange.substr(contentRange.lastIndexOf('/') + 1));\n\t\t}\n\t}\n\tNetworkStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\tNetworkStreamer.prototype.constructor = NetworkStreamer;\n\n\n\tfunction FileStreamer(config)\n\t{\n\t\tconfig = config || {};\n\t\tif (!config.chunkSize)\n\t\t\tconfig.chunkSize = Papa.LocalChunkSize;\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar reader, slice;\n\n\t\t// FileReader is better than FileReaderSync (even in worker) - see http://stackoverflow.com/q/24708649/1048862\n\t\t// But Firefox is a pill, too - see issue #76: https://github.com/mholt/PapaParse/issues/76\n\t\tvar usingAsyncReader = typeof FileReader !== 'undefined';\t// Safari doesn't consider it a function - see issue #105\n\n\t\tthis.stream = function(file)\n\t\t{\n\t\t\tthis._input = file;\n\t\t\tslice = file.slice || file.webkitSlice || file.mozSlice;\n\n\t\t\tif (usingAsyncReader)\n\t\t\t{\n\t\t\t\treader = new FileReader();\t\t// Preferred method of reading files, even in workers\n\t\t\t\treader.onload = bindFunction(this._chunkLoaded, this);\n\t\t\t\treader.onerror = bindFunction(this._chunkError, this);\n\t\t\t}\n\t\t\telse\n\t\t\t\treader = new FileReaderSync();\t// Hack for running in a web worker in Firefox\n\n\t\t\tthis._nextChunk();\t// Starts streaming\n\t\t};\n\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tif (!this._finished && (!this._config.preview || this._rowCount < this._config.preview))\n\t\t\t\tthis._readChunk();\n\t\t};\n\n\t\tthis._readChunk = function()\n\t\t{\n\t\t\tvar input = this._input;\n\t\t\tif (this._config.chunkSize)\n\t\t\t{\n\t\t\t\tvar end = Math.min(this._start + this._config.chunkSize, this._input.size);\n\t\t\t\tinput = slice.call(input, this._start, end);\n\t\t\t}\n\t\t\tvar txt = reader.readAsText(input, this._config.encoding);\n\t\t\tif (!usingAsyncReader)\n\t\t\t\tthis._chunkLoaded({ target: { result: txt } });\t// mimic the async signature\n\t\t};\n\n\t\tthis._chunkLoaded = function(event)\n\t\t{\n\t\t\t// Very important to increment start each time before handling results\n\t\t\tthis._start += this._config.chunkSize;\n\t\t\tthis._finished = !this._config.chunkSize || this._start >= this._input.size;\n\t\t\tthis.parseChunk(event.target.result);\n\t\t};\n\n\t\tthis._chunkError = function()\n\t\t{\n\t\t\tthis._sendError(reader.error);\n\t\t};\n\n\t}\n\tFileStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\tFileStreamer.prototype.constructor = FileStreamer;\n\n\n\tfunction StringStreamer(config)\n\t{\n\t\tconfig = config || {};\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar remaining;\n\t\tthis.stream = function(s)\n\t\t{\n\t\t\tremaining = s;\n\t\t\treturn this._nextChunk();\n\t\t};\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tif (this._finished) return;\n\t\t\tvar size = this._config.chunkSize;\n\t\t\tvar chunk = size ? remaining.substr(0, size) : remaining;\n\t\t\tremaining = size ? remaining.substr(size) : '';\n\t\t\tthis._finished = !remaining;\n\t\t\treturn this.parseChunk(chunk);\n\t\t};\n\t}\n\tStringStreamer.prototype = Object.create(StringStreamer.prototype);\n\tStringStreamer.prototype.constructor = StringStreamer;\n\n\n\tfunction ReadableStreamStreamer(config)\n\t{\n\t\tconfig = config || {};\n\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar queue = [];\n\t\tvar parseOnData = true;\n\t\tvar streamHasEnded = false;\n\n\t\tthis.pause = function()\n\t\t{\n\t\t\tChunkStreamer.prototype.pause.apply(this, arguments);\n\t\t\tthis._input.pause();\n\t\t};\n\n\t\tthis.resume = function()\n\t\t{\n\t\t\tChunkStreamer.prototype.resume.apply(this, arguments);\n\t\t\tthis._input.resume();\n\t\t};\n\n\t\tthis.stream = function(stream)\n\t\t{\n\t\t\tthis._input = stream;\n\n\t\t\tthis._input.on('data', this._streamData);\n\t\t\tthis._input.on('end', this._streamEnd);\n\t\t\tthis._input.on('error', this._streamError);\n\t\t};\n\n\t\tthis._checkIsFinished = function()\n\t\t{\n\t\t\tif (streamHasEnded && queue.length === 1) {\n\t\t\t\tthis._finished = true;\n\t\t\t}\n\t\t};\n\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tthis._checkIsFinished();\n\t\t\tif (queue.length)\n\t\t\t{\n\t\t\t\tthis.parseChunk(queue.shift());\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tparseOnData = true;\n\t\t\t}\n\t\t};\n\n\t\tthis._streamData = bindFunction(function(chunk)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tqueue.push(typeof chunk === 'string' ? chunk : chunk.toString(this._config.encoding));\n\n\t\t\t\tif (parseOnData)\n\t\t\t\t{\n\t\t\t\t\tparseOnData = false;\n\t\t\t\t\tthis._checkIsFinished();\n\t\t\t\t\tthis.parseChunk(queue.shift());\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (error)\n\t\t\t{\n\t\t\t\tthis._streamError(error);\n\t\t\t}\n\t\t}, this);\n\n\t\tthis._streamError = bindFunction(function(error)\n\t\t{\n\t\t\tthis._streamCleanUp();\n\t\t\tthis._sendError(error);\n\t\t}, this);\n\n\t\tthis._streamEnd = bindFunction(function()\n\t\t{\n\t\t\tthis._streamCleanUp();\n\t\t\tstreamHasEnded = true;\n\t\t\tthis._streamData('');\n\t\t}, this);\n\n\t\tthis._streamCleanUp = bindFunction(function()\n\t\t{\n\t\t\tthis._input.removeListener('data', this._streamData);\n\t\t\tthis._input.removeListener('end', this._streamEnd);\n\t\t\tthis._input.removeListener('error', this._streamError);\n\t\t}, this);\n\t}\n\tReadableStreamStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\tReadableStreamStreamer.prototype.constructor = ReadableStreamStreamer;\n\n\n\tfunction DuplexStreamStreamer(_config) {\n\t\tvar Duplex = require('stream').Duplex;\n\t\tvar config = copy(_config);\n\t\tvar parseOnWrite = true;\n\t\tvar writeStreamHasFinished = false;\n\t\tvar parseCallbackQueue = [];\n\t\tvar stream = null;\n\n\t\tthis._onCsvData = function(results)\n\t\t{\n\t\t\tvar data = results.data;\n\t\t\tfor (var i = 0; i < data.length; i++) {\n\t\t\t\tif (!stream.push(data[i]) && !this._handle.paused()) {\n\t\t\t\t\t// the writeable consumer buffer has filled up\n\t\t\t\t\t// so we need to pause until more items\n\t\t\t\t\t// can be processed\n\t\t\t\t\tthis._handle.pause();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis._onCsvComplete = function()\n\t\t{\n\t\t\t// node will finish the read stream when\n\t\t\t// null is pushed\n\t\t\tstream.push(null);\n\t\t};\n\n\t\tconfig.step = bindFunction(this._onCsvData, this);\n\t\tconfig.complete = bindFunction(this._onCsvComplete, this);\n\t\tChunkStreamer.call(this, config);\n\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tif (writeStreamHasFinished && parseCallbackQueue.length === 1) {\n\t\t\t\tthis._finished = true;\n\t\t\t}\n\t\t\tif (parseCallbackQueue.length) {\n\t\t\t\tparseCallbackQueue.shift()();\n\t\t\t} else {\n\t\t\t\tparseOnWrite = true;\n\t\t\t}\n\t\t};\n\n\t\tthis._addToParseQueue = function(chunk, callback)\n\t\t{\n\t\t\t// add to queue so that we can indicate\n\t\t\t// completion via callback\n\t\t\t// node will automatically pause the incoming stream\n\t\t\t// when too many items have been added without their\n\t\t\t// callback being invoked\n\t\t\tparseCallbackQueue.push(bindFunction(function() {\n\t\t\t\tthis.parseChunk(typeof chunk === 'string' ? chunk : chunk.toString(config.encoding));\n\t\t\t\tif (isFunction(callback)) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t}, this));\n\t\t\tif (parseOnWrite) {\n\t\t\t\tparseOnWrite = false;\n\t\t\t\tthis._nextChunk();\n\t\t\t}\n\t\t};\n\n\t\tthis._onRead = function()\n\t\t{\n\t\t\tif (this._handle.paused()) {\n\t\t\t\t// the writeable consumer can handle more data\n\t\t\t\t// so resume the chunk parsing\n\t\t\t\tthis._handle.resume();\n\t\t\t}\n\t\t};\n\n\t\tthis._onWrite = function(chunk, encoding, callback)\n\t\t{\n\t\t\tthis._addToParseQueue(chunk, callback);\n\t\t};\n\n\t\tthis._onWriteComplete = function()\n\t\t{\n\t\t\twriteStreamHasFinished = true;\n\t\t\t// have to write empty string\n\t\t\t// so parser knows its done\n\t\t\tthis._addToParseQueue('');\n\t\t};\n\n\t\tthis.getStream = function()\n\t\t{\n\t\t\treturn stream;\n\t\t};\n\t\tstream = new Duplex({\n\t\t\treadableObjectMode: true,\n\t\t\tdecodeStrings: false,\n\t\t\tread: bindFunction(this._onRead, this),\n\t\t\twrite: bindFunction(this._onWrite, this)\n\t\t});\n\t\tstream.once('finish', bindFunction(this._onWriteComplete, this));\n\t}\n\tDuplexStreamStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\tDuplexStreamStreamer.prototype.constructor = DuplexStreamStreamer;\n\n\n\t// Use one ParserHandle per entire CSV file or string\n\tfunction ParserHandle(_config)\n\t{\n\t\t// One goal is to minimize the use of regular expressions...\n\t\tvar FLOAT = /^\\s*-?(\\d*\\.?\\d+|\\d+\\.?\\d*)(e[-+]?\\d+)?\\s*$/i;\n\t\tvar ISO_DATE = /(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))/;\n\n\t\tvar self = this;\n\t\tvar _stepCounter = 0;\t// Number of times step was called (number of rows parsed)\n\t\tvar _rowCounter = 0;\t// Number of rows that have been parsed so far\n\t\tvar _input;\t\t\t\t// The input being parsed\n\t\tvar _parser;\t\t\t// The core parser being used\n\t\tvar _paused = false;\t// Whether we are paused or not\n\t\tvar _aborted = false;\t// Whether the parser has aborted or not\n\t\tvar _delimiterError;\t// Temporary state between delimiter detection and processing results\n\t\tvar _fields = [];\t\t// Fields are from the header row of the input, if there is one\n\t\tvar _results = {\t\t// The last results returned from the parser\n\t\t\tdata: [],\n\t\t\terrors: [],\n\t\t\tmeta: {}\n\t\t};\n\n\t\tif (isFunction(_config.step))\n\t\t{\n\t\t\tvar userStep = _config.step;\n\t\t\t_config.step = function(results)\n\t\t\t{\n\t\t\t\t_results = results;\n\n\t\t\t\tif (needsHeaderRow())\n\t\t\t\t\tprocessResults();\n\t\t\t\telse\t// only call user's step function after header row\n\t\t\t\t{\n\t\t\t\t\tprocessResults();\n\n\t\t\t\t\t// It's possbile that this line was empty and there's no row here after all\n\t\t\t\t\tif (_results.data.length === 0)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t_stepCounter += results.data.length;\n\t\t\t\t\tif (_config.preview && _stepCounter > _config.preview)\n\t\t\t\t\t\t_parser.abort();\n\t\t\t\t\telse\n\t\t\t\t\t\tuserStep(_results, self);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t * Parses input. Most users won't need, and shouldn't mess with, the baseIndex\n\t\t * and ignoreLastRow parameters. They are used by streamers (wrapper functions)\n\t\t * when an input comes in multiple chunks, like from a file.\n\t\t */\n\t\tthis.parse = function(input, baseIndex, ignoreLastRow)\n\t\t{\n\t\t\tvar quoteChar = _config.quoteChar || '\"';\n\t\t\tif (!_config.newline)\n\t\t\t\t_config.newline = guessLineEndings(input, quoteChar);\n\n\t\t\t_delimiterError = false;\n\t\t\tif (!_config.delimiter)\n\t\t\t{\n\t\t\t\tvar delimGuess = guessDelimiter(input, _config.newline, _config.skipEmptyLines, _config.comments);\n\t\t\t\tif (delimGuess.successful)\n\t\t\t\t\t_config.delimiter = delimGuess.bestDelimiter;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t_delimiterError = true;\t// add error after parsing (otherwise it would be overwritten)\n\t\t\t\t\t_config.delimiter = Papa.DefaultDelimiter;\n\t\t\t\t}\n\t\t\t\t_results.meta.delimiter = _config.delimiter;\n\t\t\t}\n\t\t\telse if(isFunction(_config.delimiter))\n\t\t\t{\n\t\t\t\t_config.delimiter = _config.delimiter(input);\n\t\t\t\t_results.meta.delimiter = _config.delimiter;\n\t\t\t}\n\n\t\t\tvar parserConfig = copy(_config);\n\t\t\tif (_config.preview && _config.header)\n\t\t\t\tparserConfig.preview++;\t// to compensate for header row\n\n\t\t\t_input = input;\n\t\t\t_parser = new Parser(parserConfig);\n\t\t\t_results = _parser.parse(_input, baseIndex, ignoreLastRow);\n\t\t\tprocessResults();\n\t\t\treturn _paused ? { meta: { paused: true } } : (_results || { meta: { paused: false } });\n\t\t};\n\n\t\tthis.paused = function()\n\t\t{\n\t\t\treturn _paused;\n\t\t};\n\n\t\tthis.pause = function()\n\t\t{\n\t\t\t_paused = true;\n\t\t\t_parser.abort();\n\t\t\t_input = _input.substr(_parser.getCharIndex());\n\t\t};\n\n\t\tthis.resume = function()\n\t\t{\n\t\t\t_paused = false;\n\t\t\tself.streamer.parseChunk(_input, true);\n\t\t};\n\n\t\tthis.aborted = function()\n\t\t{\n\t\t\treturn _aborted;\n\t\t};\n\n\t\tthis.abort = function()\n\t\t{\n\t\t\t_aborted = true;\n\t\t\t_parser.abort();\n\t\t\t_results.meta.aborted = true;\n\t\t\tif (isFunction(_config.complete))\n\t\t\t\t_config.complete(_results);\n\t\t\t_input = '';\n\t\t};\n\n\t\tfunction testEmptyLine(s) {\n\t\t\treturn _config.skipEmptyLines === 'greedy' ? s.join('').trim() === '' : s.length === 1 && s[0].length === 0;\n\t\t}\n\n\t\tfunction processResults()\n\t\t{\n\t\t\tif (_results && _delimiterError)\n\t\t\t{\n\t\t\t\taddError('Delimiter', 'UndetectableDelimiter', 'Unable to auto-detect delimiting character; defaulted to \\'' + Papa.DefaultDelimiter + '\\'');\n\t\t\t\t_delimiterError = false;\n\t\t\t}\n\n\t\t\tif (_config.skipEmptyLines)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < _results.data.length; i++)\n\t\t\t\t\tif (testEmptyLine(_results.data[i]))\n\t\t\t\t\t\t_results.data.splice(i--, 1);\n\t\t\t}\n\n\t\t\tif (needsHeaderRow())\n\t\t\t\tfillHeaderFields();\n\n\t\t\treturn applyHeaderAndDynamicTypingAndTransformation();\n\t\t}\n\n\t\tfunction needsHeaderRow()\n\t\t{\n\t\t\treturn _config.header && _fields.length === 0;\n\t\t}\n\n\t\tfunction fillHeaderFields()\n\t\t{\n\t\t\tif (!_results)\n\t\t\t\treturn;\n\t\t\tfor (var i = 0; needsHeaderRow() && i < _results.data.length; i++)\n\t\t\t\tfor (var j = 0; j < _results.data[i].length; j++)\n\t\t\t\t{\n\t\t\t\t\tvar header = _results.data[i][j];\n\n\t\t\t\t\tif (_config.trimHeaders) {\n\t\t\t\t\t\theader = header.trim();\n\t\t\t\t\t}\n\n\t\t\t\t\t_fields.push(header);\n\t\t\t\t}\n\t\t\t_results.data.splice(0, 1);\n\t\t}\n\n\t\tfunction shouldApplyDynamicTyping(field) {\n\t\t\t// Cache function values to avoid calling it for each row\n\t\t\tif (_config.dynamicTypingFunction && _config.dynamicTyping[field] === undefined) {\n\t\t\t\t_config.dynamicTyping[field] = _config.dynamicTypingFunction(field);\n\t\t\t}\n\t\t\treturn (_config.dynamicTyping[field] || _config.dynamicTyping) === true;\n\t\t}\n\n\t\tfunction parseDynamic(field, value)\n\t\t{\n\t\t\tif (shouldApplyDynamicTyping(field))\n\t\t\t{\n\t\t\t\tif (value === 'true' || value === 'TRUE')\n\t\t\t\t\treturn true;\n\t\t\t\telse if (value === 'false' || value === 'FALSE')\n\t\t\t\t\treturn false;\n\t\t\t\telse if (FLOAT.test(value))\n\t\t\t\t\treturn parseFloat(value);\n\t\t\t\telse if (ISO_DATE.test(value))\n\t\t\t\t\treturn new Date(value);\n\t\t\t\telse\n\t\t\t\t\treturn (value === '' ? null : value);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\n\t\tfunction applyHeaderAndDynamicTypingAndTransformation()\n\t\t{\n\t\t\tif (!_results || (!_config.header && !_config.dynamicTyping && !_config.transform))\n\t\t\t\treturn _results;\n\n\t\t\tfor (var i = 0; i < _results.data.length; i++)\n\t\t\t{\n\t\t\t\tvar row = _config.header ? {} : [];\n\n\t\t\t\tvar j;\n\t\t\t\tfor (j = 0; j < _results.data[i].length; j++)\n\t\t\t\t{\n\t\t\t\t\tvar field = j;\n\t\t\t\t\tvar value = _results.data[i][j];\n\n\t\t\t\t\tif (_config.header)\n\t\t\t\t\t\tfield = j >= _fields.length ? '__parsed_extra' : _fields[j];\n\n\t\t\t\t\tif (_config.transform)\n\t\t\t\t\t\tvalue = _config.transform(value,field);\n\n\t\t\t\t\tvalue = parseDynamic(field, value);\n\n\t\t\t\t\tif (field === '__parsed_extra')\n\t\t\t\t\t{\n\t\t\t\t\t\trow[field] = row[field] || [];\n\t\t\t\t\t\trow[field].push(value);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\trow[field] = value;\n\t\t\t\t}\n\n\t\t\t\t_results.data[i] = row;\n\n\t\t\t\tif (_config.header)\n\t\t\t\t{\n\t\t\t\t\tif (j > _fields.length)\n\t\t\t\t\t\taddError('FieldMismatch', 'TooManyFields', 'Too many fields: expected ' + _fields.length + ' fields but parsed ' + j, _rowCounter + i);\n\t\t\t\t\telse if (j < _fields.length)\n\t\t\t\t\t\taddError('FieldMismatch', 'TooFewFields', 'Too few fields: expected ' + _fields.length + ' fields but parsed ' + j, _rowCounter + i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (_config.header && _results.meta)\n\t\t\t\t_results.meta.fields = _fields;\n\n\t\t\t_rowCounter += _results.data.length;\n\t\t\treturn _results;\n\t\t}\n\n\t\tfunction guessDelimiter(input, newline, skipEmptyLines, comments)\n\t\t{\n\t\t\tvar delimChoices = [',', '\\t', '|', ';', Papa.RECORD_SEP, Papa.UNIT_SEP];\n\t\t\tvar bestDelim, bestDelta, fieldCountPrevRow;\n\n\t\t\tfor (var i = 0; i < delimChoices.length; i++)\n\t\t\t{\n\t\t\t\tvar delim = delimChoices[i];\n\t\t\t\tvar delta = 0, avgFieldCount = 0, emptyLinesCount = 0;\n\t\t\t\tfieldCountPrevRow = undefined;\n\n\t\t\t\tvar preview = new Parser({\n\t\t\t\t\tcomments: comments,\n\t\t\t\t\tdelimiter: delim,\n\t\t\t\t\tnewline: newline,\n\t\t\t\t\tpreview: 10\n\t\t\t\t}).parse(input);\n\n\t\t\t\tfor (var j = 0; j < preview.data.length; j++)\n\t\t\t\t{\n\t\t\t\t\tif (skipEmptyLines && testEmptyLine(preview.data[j]))\n\t\t\t\t\t{\n\t\t\t\t\t\temptyLinesCount++;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tvar fieldCount = preview.data[j].length;\n\t\t\t\t\tavgFieldCount += fieldCount;\n\n\t\t\t\t\tif (typeof fieldCountPrevRow === 'undefined')\n\t\t\t\t\t{\n\t\t\t\t\t\tfieldCountPrevRow = fieldCount;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\telse if (fieldCount > 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tdelta += Math.abs(fieldCount - fieldCountPrevRow);\n\t\t\t\t\t\tfieldCountPrevRow = fieldCount;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (preview.data.length > 0)\n\t\t\t\t\tavgFieldCount /= (preview.data.length - emptyLinesCount);\n\n\t\t\t\tif ((typeof bestDelta === 'undefined' || delta < bestDelta)\n\t\t\t\t\t&& avgFieldCount > 1.99)\n\t\t\t\t{\n\t\t\t\t\tbestDelta = delta;\n\t\t\t\t\tbestDelim = delim;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_config.delimiter = bestDelim;\n\n\t\t\treturn {\n\t\t\t\tsuccessful: !!bestDelim,\n\t\t\t\tbestDelimiter: bestDelim\n\t\t\t};\n\t\t}\n\n\t\tfunction guessLineEndings(input, quoteChar)\n\t\t{\n\t\t\tinput = input.substr(0, 1024 * 1024);\t// max length 1 MB\n\t\t\t// Replace all the text inside quotes\n\t\t\tvar re = new RegExp(escapeRegExp(quoteChar) + '([^]*?)' + escapeRegExp(quoteChar), 'gm');\n\t\t\tinput = input.replace(re, '');\n\n\t\t\tvar r = input.split('\\r');\n\n\t\t\tvar n = input.split('\\n');\n\n\t\t\tvar nAppearsFirst = (n.length > 1 && n[0].length < r[0].length);\n\n\t\t\tif (r.length === 1 || nAppearsFirst)\n\t\t\t\treturn '\\n';\n\n\t\t\tvar numWithN = 0;\n\t\t\tfor (var i = 0; i < r.length; i++)\n\t\t\t{\n\t\t\t\tif (r[i][0] === '\\n')\n\t\t\t\t\tnumWithN++;\n\t\t\t}\n\n\t\t\treturn numWithN >= r.length / 2 ? '\\r\\n' : '\\r';\n\t\t}\n\n\t\tfunction addError(type, code, msg, row)\n\t\t{\n\t\t\t_results.errors.push({\n\t\t\t\ttype: type,\n\t\t\t\tcode: code,\n\t\t\t\tmessage: msg,\n\t\t\t\trow: row\n\t\t\t});\n\t\t}\n\t}\n\n\t/** https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions */\n\tfunction escapeRegExp(string)\n\t{\n\t\treturn string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n\t}\n\n\t/** The core parser implements speedy and correct CSV parsing */\n\tfunction Parser(config)\n\t{\n\t\t// Unpack the config object\n\t\tconfig = config || {};\n\t\tvar delim = config.delimiter;\n\t\tvar newline = config.newline;\n\t\tvar comments = config.comments;\n\t\tvar step = config.step;\n\t\tvar preview = config.preview;\n\t\tvar fastMode = config.fastMode;\n\t\tvar quoteChar;\n\t\t/** Allows for no quoteChar by setting quoteChar to undefined in config */\n\t\tif (config.quoteChar === undefined) {\n\t\t\tquoteChar = '\"';\n\t\t} else {\n\t\t\tquoteChar = config.quoteChar;\n\t\t}\n\t\tvar escapeChar = quoteChar;\n\t\tif (config.escapeChar !== undefined) {\n\t\t\tescapeChar = config.escapeChar;\n\t\t}\n\n\t\t// Delimiter must be valid\n\t\tif (typeof delim !== 'string'\n\t\t\t|| Papa.BAD_DELIMITERS.indexOf(delim) > -1)\n\t\t\tdelim = ',';\n\n\t\t// Comment character must be valid\n\t\tif (comments === delim)\n\t\t\tthrow 'Comment character same as delimiter';\n\t\telse if (comments === true)\n\t\t\tcomments = '#';\n\t\telse if (typeof comments !== 'string'\n\t\t\t|| Papa.BAD_DELIMITERS.indexOf(comments) > -1)\n\t\t\tcomments = false;\n\n\t\t// Newline must be valid: \\r, \\n, or \\r\\n\n\t\tif (newline !== '\\n' && newline !== '\\r' && newline !== '\\r\\n')\n\t\t\tnewline = '\\n';\n\n\t\t// We're gonna need these at the Parser scope\n\t\tvar cursor = 0;\n\t\tvar aborted = false;\n\n\t\tthis.parse = function(input, baseIndex, ignoreLastRow)\n\t\t{\n\t\t\t// For some reason, in Chrome, this speeds things up (!?)\n\t\t\tif (typeof input !== 'string')\n\t\t\t\tthrow 'Input must be a string';\n\n\t\t\t// We don't need to compute some of these every time parse() is called,\n\t\t\t// but having them in a more local scope seems to perform better\n\t\t\tvar inputLen = input.length,\n\t\t\t\tdelimLen = delim.length,\n\t\t\t\tnewlineLen = newline.length,\n\t\t\t\tcommentsLen = comments.length;\n\t\t\tvar stepIsFunction = isFunction(step);\n\n\t\t\t// Establish starting state\n\t\t\tcursor = 0;\n\t\t\tvar data = [], errors = [], row = [], lastCursor = 0;\n\n\t\t\tif (!input)\n\t\t\t\treturn returnable();\n\n\t\t\tif (fastMode || (fastMode !== false && input.indexOf(quoteChar) === -1))\n\t\t\t{\n\t\t\t\tvar rows = input.split(newline);\n\t\t\t\tfor (var i = 0; i < rows.length; i++)\n\t\t\t\t{\n\t\t\t\t\trow = rows[i];\n\t\t\t\t\tcursor += row.length;\n\t\t\t\t\tif (i !== rows.length - 1)\n\t\t\t\t\t\tcursor += newline.length;\n\t\t\t\t\telse if (ignoreLastRow)\n\t\t\t\t\t\treturn returnable();\n\t\t\t\t\tif (comments && row.substr(0, commentsLen) === comments)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (stepIsFunction)\n\t\t\t\t\t{\n\t\t\t\t\t\tdata = [];\n\t\t\t\t\t\tpushRow(row.split(delim));\n\t\t\t\t\t\tdoStep();\n\t\t\t\t\t\tif (aborted)\n\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tpushRow(row.split(delim));\n\t\t\t\t\tif (preview && i >= preview)\n\t\t\t\t\t{\n\t\t\t\t\t\tdata = data.slice(0, preview);\n\t\t\t\t\t\treturn returnable(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn returnable();\n\t\t\t}\n\n\t\t\tvar nextDelim = input.indexOf(delim, cursor);\n\t\t\tvar nextNewline = input.indexOf(newline, cursor);\n\t\t\tvar quoteCharRegex = new RegExp(escapeChar.replace(/[-[\\]/{}()*+?.\\\\^$|]/g, '\\\\$&') + quoteChar, 'g');\n\t\t\tvar quoteSearch;\n\n\t\t\t// Parser loop\n\t\t\tfor (;;)\n\t\t\t{\n\t\t\t\t// Field has opening quote\n\t\t\t\tif (input[cursor] === quoteChar)\n\t\t\t\t{\n\t\t\t\t\t// Start our search for the closing quote where the cursor is\n\t\t\t\t\tquoteSearch = cursor;\n\n\t\t\t\t\t// Skip the opening quote\n\t\t\t\t\tcursor++;\n\n\t\t\t\t\tfor (;;)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Find closing quote\n\t\t\t\t\t\tquoteSearch = input.indexOf(quoteChar, quoteSearch + 1);\n\n\t\t\t\t\t\t//No other quotes are found - no other delimiters\n\t\t\t\t\t\tif (quoteSearch === -1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!ignoreLastRow) {\n\t\t\t\t\t\t\t\t// No closing quote... what a pity\n\t\t\t\t\t\t\t\terrors.push({\n\t\t\t\t\t\t\t\t\ttype: 'Quotes',\n\t\t\t\t\t\t\t\t\tcode: 'MissingQuotes',\n\t\t\t\t\t\t\t\t\tmessage: 'Quoted field unterminated',\n\t\t\t\t\t\t\t\t\trow: data.length,\t// row has yet to be inserted\n\t\t\t\t\t\t\t\t\tindex: cursor\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn finish();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Closing quote at EOF\n\t\t\t\t\t\tif (quoteSearch === inputLen - 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar value = input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar);\n\t\t\t\t\t\t\treturn finish(value);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If this quote is escaped, it's part of the data; skip it\n\t\t\t\t\t\t// If the quote character is the escape character, then check if the next character is the escape character\n\t\t\t\t\t\tif (quoteChar === escapeChar &&  input[quoteSearch + 1] === escapeChar)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tquoteSearch++;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If the quote character is not the escape character, then check if the previous character was the escape character\n\t\t\t\t\t\tif (quoteChar !== escapeChar && quoteSearch !== 0 && input[quoteSearch - 1] === escapeChar)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Check up to nextDelim or nextNewline, whichever is closest\n\t\t\t\t\t\tvar checkUpTo = nextNewline === -1 ? nextDelim : Math.min(nextDelim, nextNewline);\n\t\t\t\t\t\tvar spacesBetweenQuoteAndDelimiter = extraSpaces(checkUpTo);\n\n\t\t\t\t\t\t// Closing quote followed by delimiter or 'unnecessary spaces + delimiter'\n\t\t\t\t\t\tif (input[quoteSearch + 1 + spacesBetweenQuoteAndDelimiter] === delim)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trow.push(input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar));\n\t\t\t\t\t\t\tcursor = quoteSearch + 1 + spacesBetweenQuoteAndDelimiter + delimLen;\n\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n\t\t\t\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar spacesBetweenQuoteAndNewLine = extraSpaces(nextNewline);\n\n\t\t\t\t\t\t// Closing quote followed by newline or 'unnecessary spaces + newLine'\n\t\t\t\t\t\tif (input.substr(quoteSearch + 1 + spacesBetweenQuoteAndNewLine, newlineLen) === newline)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trow.push(input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar));\n\t\t\t\t\t\t\tsaveRow(quoteSearch + 1 + spacesBetweenQuoteAndNewLine + newlineLen);\n\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\t// because we may have skipped the nextDelim in the quoted field\n\n\t\t\t\t\t\t\tif (stepIsFunction)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdoStep();\n\t\t\t\t\t\t\t\tif (aborted)\n\t\t\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (preview && data.length >= preview)\n\t\t\t\t\t\t\t\treturn returnable(true);\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t// Checks for valid closing quotes are complete (escaped quotes or quote followed by EOF/delimiter/newline) -- assume these quotes are part of an invalid text string\n\t\t\t\t\t\terrors.push({\n\t\t\t\t\t\t\ttype: 'Quotes',\n\t\t\t\t\t\t\tcode: 'InvalidQuotes',\n\t\t\t\t\t\t\tmessage: 'Trailing quote on quoted field is malformed',\n\t\t\t\t\t\t\trow: data.length,\t// row has yet to be inserted\n\t\t\t\t\t\t\tindex: cursor\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tquoteSearch++;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Comment found at start of new line\n\t\t\t\tif (comments && row.length === 0 && input.substr(cursor, commentsLen) === comments)\n\t\t\t\t{\n\t\t\t\t\tif (nextNewline === -1)\t// Comment ends at EOF\n\t\t\t\t\t\treturn returnable();\n\t\t\t\t\tcursor = nextNewline + newlineLen;\n\t\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Next delimiter comes before next newline, so we've reached end of field\n\t\t\t\tif (nextDelim !== -1 && (nextDelim < nextNewline || nextNewline === -1))\n\t\t\t\t{\n\t\t\t\t\trow.push(input.substring(cursor, nextDelim));\n\t\t\t\t\tcursor = nextDelim + delimLen;\n\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// End of row\n\t\t\t\tif (nextNewline !== -1)\n\t\t\t\t{\n\t\t\t\t\trow.push(input.substring(cursor, nextNewline));\n\t\t\t\t\tsaveRow(nextNewline + newlineLen);\n\n\t\t\t\t\tif (stepIsFunction)\n\t\t\t\t\t{\n\t\t\t\t\t\tdoStep();\n\t\t\t\t\t\tif (aborted)\n\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (preview && data.length >= preview)\n\t\t\t\t\t\treturn returnable(true);\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\n\t\t\treturn finish();\n\n\n\t\t\tfunction pushRow(row)\n\t\t\t{\n\t\t\t\tdata.push(row);\n\t\t\t\tlastCursor = cursor;\n\t\t\t}\n\n\t\t\t/**\n             * checks if there are extra spaces after closing quote and given index without any text\n             * if Yes, returns the number of spaces\n             */\n\t\t\tfunction extraSpaces(index) {\n\t\t\t\tvar spaceLength = 0;\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tvar textBetweenClosingQuoteAndIndex = input.substring(quoteSearch + 1, index);\n\t\t\t\t\tif (textBetweenClosingQuoteAndIndex && textBetweenClosingQuoteAndIndex.trim() === '') {\n\t\t\t\t\t\tspaceLength = textBetweenClosingQuoteAndIndex.length;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn spaceLength;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Appends the remaining input from cursor to the end into\n\t\t\t * row, saves the row, calls step, and returns the results.\n\t\t\t */\n\t\t\tfunction finish(value)\n\t\t\t{\n\t\t\t\tif (ignoreLastRow)\n\t\t\t\t\treturn returnable();\n\t\t\t\tif (typeof value === 'undefined')\n\t\t\t\t\tvalue = input.substr(cursor);\n\t\t\t\trow.push(value);\n\t\t\t\tcursor = inputLen;\t// important in case parsing is paused\n\t\t\t\tpushRow(row);\n\t\t\t\tif (stepIsFunction)\n\t\t\t\t\tdoStep();\n\t\t\t\treturn returnable();\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Appends the current row to the results. It sets the cursor\n\t\t\t * to newCursor and finds the nextNewline. The caller should\n\t\t\t * take care to execute user's step function and check for\n\t\t\t * preview and end parsing if necessary.\n\t\t\t */\n\t\t\tfunction saveRow(newCursor)\n\t\t\t{\n\t\t\t\tcursor = newCursor;\n\t\t\t\tpushRow(row);\n\t\t\t\trow = [];\n\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n\t\t\t}\n\n\t\t\t/** Returns an object with the results, errors, and meta. */\n\t\t\tfunction returnable(stopped)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\tdata: data,\n\t\t\t\t\terrors: errors,\n\t\t\t\t\tmeta: {\n\t\t\t\t\t\tdelimiter: delim,\n\t\t\t\t\t\tlinebreak: newline,\n\t\t\t\t\t\taborted: aborted,\n\t\t\t\t\t\ttruncated: !!stopped,\n\t\t\t\t\t\tcursor: lastCursor + (baseIndex || 0)\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t/** Executes the user's step function and resets data & errors. */\n\t\t\tfunction doStep()\n\t\t\t{\n\t\t\t\tstep(returnable());\n\t\t\t\tdata = [];\n\t\t\t\terrors = [];\n\t\t\t}\n\t\t};\n\n\t\t/** Sets the abort flag */\n\t\tthis.abort = function()\n\t\t{\n\t\t\taborted = true;\n\t\t};\n\n\t\t/** Gets the cursor position */\n\t\tthis.getCharIndex = function()\n\t\t{\n\t\t\treturn cursor;\n\t\t};\n\t}\n\n\n\t// If you need to load Papa Parse asynchronously and you also need worker threads, hard-code\n\t// the script path here. See: https://github.com/mholt/PapaParse/issues/87#issuecomment-57885358\n\tfunction getScriptPath()\n\t{\n\t\tvar scripts = document.getElementsByTagName('script');\n\t\treturn scripts.length ? scripts[scripts.length - 1].src : '';\n\t}\n\n\tfunction newWorker()\n\t{\n\t\tif (!Papa.WORKERS_SUPPORTED)\n\t\t\treturn false;\n\t\tif (!LOADED_SYNC && Papa.SCRIPT_PATH === null)\n\t\t\tthrow new Error(\n\t\t\t\t'Script path cannot be determined automatically when Papa Parse is loaded asynchronously. ' +\n\t\t\t\t'You need to set Papa.SCRIPT_PATH manually.'\n\t\t\t);\n\t\tvar workerUrl = Papa.SCRIPT_PATH || AUTO_SCRIPT_PATH;\n\t\t// Append 'papaworker' to the search string to tell papaparse that this is our worker.\n\t\tworkerUrl += (workerUrl.indexOf('?') !== -1 ? '&' : '?') + 'papaworker';\n\t\tvar w = new global.Worker(workerUrl);\n\t\tw.onmessage = mainThreadReceivedMessage;\n\t\tw.id = workerIdCounter++;\n\t\tworkers[w.id] = w;\n\t\treturn w;\n\t}\n\n\t/** Callback when main thread receives a message */\n\tfunction mainThreadReceivedMessage(e)\n\t{\n\t\tvar msg = e.data;\n\t\tvar worker = workers[msg.workerId];\n\t\tvar aborted = false;\n\n\t\tif (msg.error)\n\t\t\tworker.userError(msg.error, msg.file);\n\t\telse if (msg.results && msg.results.data)\n\t\t{\n\t\t\tvar abort = function() {\n\t\t\t\taborted = true;\n\t\t\t\tcompleteWorker(msg.workerId, { data: [], errors: [], meta: { aborted: true } });\n\t\t\t};\n\n\t\t\tvar handle = {\n\t\t\t\tabort: abort,\n\t\t\t\tpause: notImplemented,\n\t\t\t\tresume: notImplemented\n\t\t\t};\n\n\t\t\tif (isFunction(worker.userStep))\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < msg.results.data.length; i++)\n\t\t\t\t{\n\t\t\t\t\tworker.userStep({\n\t\t\t\t\t\tdata: [msg.results.data[i]],\n\t\t\t\t\t\terrors: msg.results.errors,\n\t\t\t\t\t\tmeta: msg.results.meta\n\t\t\t\t\t}, handle);\n\t\t\t\t\tif (aborted)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdelete msg.results;\t// free memory ASAP\n\t\t\t}\n\t\t\telse if (isFunction(worker.userChunk))\n\t\t\t{\n\t\t\t\tworker.userChunk(msg.results, handle, msg.file);\n\t\t\t\tdelete msg.results;\n\t\t\t}\n\t\t}\n\n\t\tif (msg.finished && !aborted)\n\t\t\tcompleteWorker(msg.workerId, msg.results);\n\t}\n\n\tfunction completeWorker(workerId, results) {\n\t\tvar worker = workers[workerId];\n\t\tif (isFunction(worker.userComplete))\n\t\t\tworker.userComplete(results);\n\t\tworker.terminate();\n\t\tdelete workers[workerId];\n\t}\n\n\tfunction notImplemented() {\n\t\tthrow 'Not implemented.';\n\t}\n\n\t/** Callback when worker thread receives a message */\n\tfunction workerThreadReceivedMessage(e)\n\t{\n\t\tvar msg = e.data;\n\n\t\tif (typeof Papa.WORKER_ID === 'undefined' && msg)\n\t\t\tPapa.WORKER_ID = msg.workerId;\n\n\t\tif (typeof msg.input === 'string')\n\t\t{\n\t\t\tglobal.postMessage({\n\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\tresults: Papa.parse(msg.input, msg.config),\n\t\t\t\tfinished: true\n\t\t\t});\n\t\t}\n\t\telse if ((global.File && msg.input instanceof File) || msg.input instanceof Object)\t// thank you, Safari (see issue #106)\n\t\t{\n\t\t\tvar results = Papa.parse(msg.input, msg.config);\n\t\t\tif (results)\n\t\t\t\tglobal.postMessage({\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\t\tresults: results,\n\t\t\t\t\tfinished: true\n\t\t\t\t});\n\t\t}\n\t}\n\n\t/** Makes a deep copy of an array or object (mostly) */\n\tfunction copy(obj)\n\t{\n\t\tif (typeof obj !== 'object' || obj === null)\n\t\t\treturn obj;\n\t\tvar cpy = obj instanceof Array ? [] : {};\n\t\tfor (var key in obj)\n\t\t\tcpy[key] = copy(obj[key]);\n\t\treturn cpy;\n\t}\n\n\tfunction bindFunction(f, self)\n\t{\n\t\treturn function() { f.apply(self, arguments); };\n\t}\n\n\tfunction isFunction(func)\n\t{\n\t\treturn typeof func === 'function';\n\t}\n\n\treturn Papa;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/papaparse/papaparse.js\n// module id = 856\n// module chunks = 47301250561866","module.exports = require('./lib/_stream_duplex.js');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/readable-stream/duplex-browser.js\n// module id = 952\n// module chunks = 47301250561866","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/readable-stream/lib/_stream_passthrough.js\n// module id = 953\n// module chunks = 47301250561866","'use strict';\n\n/*<replacement>*/\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/readable-stream/lib/internal/streams/BufferList.js\n// module id = 954\n// module chunks = 47301250561866","module.exports = require('./readable').PassThrough\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/readable-stream/passthrough.js\n// module id = 955\n// module chunks = 47301250561866","module.exports = require('./readable').Transform\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/readable-stream/transform.js\n// module id = 956\n// module chunks = 47301250561866","module.exports = require('./lib/_stream_writable.js');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/readable-stream/writable-browser.js\n// module id = 957\n// module chunks = 47301250561866","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/setimmediate/setImmediate.js\n// module id = 1050\n// module chunks = 47301250561866","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-browserify/index.js\n// module id = 1051\n// module chunks = 47301250561866","var apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\nexports.setImmediate = setImmediate;\nexports.clearImmediate = clearImmediate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/timers-browserify/main.js\n// module id = 1052\n// module chunks = 47301250561866","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/util-deprecate/browser.js\n// module id = 1061\n// module chunks = 47301250561866","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar Buffer = require('buffer').Buffer;\n\nvar isBufferEncoding = Buffer.isEncoding\n  || function(encoding) {\n       switch (encoding && encoding.toLowerCase()) {\n         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n         default: return false;\n       }\n     }\n\n\nfunction assertEncoding(encoding) {\n  if (encoding && !isBufferEncoding(encoding)) {\n    throw new Error('Unknown encoding: ' + encoding);\n  }\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters. CESU-8 is handled as part of the UTF-8 encoding.\n//\n// @TODO Handling all encodings inside a single object makes it very difficult\n// to reason about this code, so it should be split up in the future.\n// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n// points as used by CESU-8.\nvar StringDecoder = exports.StringDecoder = function(encoding) {\n  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n  assertEncoding(encoding);\n  switch (this.encoding) {\n    case 'utf8':\n      // CESU-8 represents each of Surrogate Pair by 3-bytes\n      this.surrogateSize = 3;\n      break;\n    case 'ucs2':\n    case 'utf16le':\n      // UTF-16 represents each of Surrogate Pair by 2-bytes\n      this.surrogateSize = 2;\n      this.detectIncompleteChar = utf16DetectIncompleteChar;\n      break;\n    case 'base64':\n      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n      this.surrogateSize = 3;\n      this.detectIncompleteChar = base64DetectIncompleteChar;\n      break;\n    default:\n      this.write = passThroughWrite;\n      return;\n  }\n\n  // Enough space to store all bytes of a single character. UTF-8 needs 4\n  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n  this.charBuffer = new Buffer(6);\n  // Number of bytes received for the current incomplete multi-byte character.\n  this.charReceived = 0;\n  // Number of bytes expected for the current incomplete multi-byte character.\n  this.charLength = 0;\n};\n\n\n// write decodes the given buffer and returns it as JS string that is\n// guaranteed to not contain any partial multi-byte characters. Any partial\n// character found at the end of the buffer is buffered up, and will be\n// returned when calling write again with the remaining bytes.\n//\n// Note: Converting a Buffer containing an orphan surrogate to a String\n// currently works, but converting a String to a Buffer (via `new Buffer`, or\n// Buffer#write) will replace incomplete surrogates with the unicode\n// replacement character. See https://codereview.chromium.org/121173009/ .\nStringDecoder.prototype.write = function(buffer) {\n  var charStr = '';\n  // if our last write ended with an incomplete multibyte character\n  while (this.charLength) {\n    // determine how many remaining bytes this buffer has to offer for this char\n    var available = (buffer.length >= this.charLength - this.charReceived) ?\n        this.charLength - this.charReceived :\n        buffer.length;\n\n    // add the new bytes to the char buffer\n    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n    this.charReceived += available;\n\n    if (this.charReceived < this.charLength) {\n      // still not enough chars in this buffer? wait for more ...\n      return '';\n    }\n\n    // remove bytes belonging to the current character from the buffer\n    buffer = buffer.slice(available, buffer.length);\n\n    // get the character that was split\n    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\n    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n    var charCode = charStr.charCodeAt(charStr.length - 1);\n    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n      this.charLength += this.surrogateSize;\n      charStr = '';\n      continue;\n    }\n    this.charReceived = this.charLength = 0;\n\n    // if there are no more bytes in this buffer, just emit our char\n    if (buffer.length === 0) {\n      return charStr;\n    }\n    break;\n  }\n\n  // determine and set charLength / charReceived\n  this.detectIncompleteChar(buffer);\n\n  var end = buffer.length;\n  if (this.charLength) {\n    // buffer the incomplete character bytes we got\n    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n    end -= this.charReceived;\n  }\n\n  charStr += buffer.toString(this.encoding, 0, end);\n\n  var end = charStr.length - 1;\n  var charCode = charStr.charCodeAt(end);\n  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n    var size = this.surrogateSize;\n    this.charLength += size;\n    this.charReceived += size;\n    this.charBuffer.copy(this.charBuffer, size, 0, size);\n    buffer.copy(this.charBuffer, 0, 0, size);\n    return charStr.substring(0, end);\n  }\n\n  // or just emit the charStr\n  return charStr;\n};\n\n// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n// the end of the given buffer. If so, it sets this.charLength to the byte\n// length that character, and sets this.charReceived to the number of bytes\n// that are available for this character.\nStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n  // determine how many bytes we have to check at the end of this buffer\n  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\n  // Figure out if one of the last i bytes of our buffer announces an\n  // incomplete char.\n  for (; i > 0; i--) {\n    var c = buffer[buffer.length - i];\n\n    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\n    // 110XXXXX\n    if (i == 1 && c >> 5 == 0x06) {\n      this.charLength = 2;\n      break;\n    }\n\n    // 1110XXXX\n    if (i <= 2 && c >> 4 == 0x0E) {\n      this.charLength = 3;\n      break;\n    }\n\n    // 11110XXX\n    if (i <= 3 && c >> 3 == 0x1E) {\n      this.charLength = 4;\n      break;\n    }\n  }\n  this.charReceived = i;\n};\n\nStringDecoder.prototype.end = function(buffer) {\n  var res = '';\n  if (buffer && buffer.length)\n    res = this.write(buffer);\n\n  if (this.charReceived) {\n    var cr = this.charReceived;\n    var buf = this.charBuffer;\n    var enc = this.encoding;\n    res += buf.slice(0, cr).toString(enc);\n  }\n\n  return res;\n};\n\nfunction passThroughWrite(buffer) {\n  return buffer.toString(this.encoding);\n}\n\nfunction utf16DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 2;\n  this.charLength = this.charReceived ? 2 : 0;\n}\n\nfunction base64DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 3;\n  this.charLength = this.charReceived ? 3 : 0;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/string_decoder/index.js\n// module id = 503\n// module chunks = 47301250561866"],"sourceRoot":""}