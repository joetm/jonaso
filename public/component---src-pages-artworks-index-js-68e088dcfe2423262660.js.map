{"version":3,"file":"component---src-pages-artworks-index-js-68e088dcfe2423262660.js","mappings":"u0JAOA,MAEMA,EAAI,mCAFUC,KAAKC,MAAMC,KAAKC,MAAQ,KAEiB,IAGvDC,EAAO,mGACW,OADX,0CACXC,MAAQ,CAAEC,OAAQ,IAAI,GADX,YACW,kBA6DrB,OA7DqB,EACtBC,kBAAA,WACEC,MAAMT,GACHU,MAAKC,GAAYA,EAASC,SAC1BF,MAAKH,IACJM,KAAKC,SAAS,CAAEP,UAAS,GAE/B,EAAC,EACDQ,OAAA,WACE,MAAM,OAAER,GAAWM,KAAKP,MACxB,OACE,gCACE,gBAAC,IAAS,CACRU,UAAU,sBACVC,OAAO,kGAKT,uBAAKC,GAAG,gBACR,uBAAKC,UAAU,gBAEXZ,EAAOa,KAAI,CAACC,EAAMC,KAChB,IAAIC,EAAc,GAmBlB,OAlBIF,EAAM,GAAKA,EAAM,KACnBE,EAAc,OACVD,EAAQ,GAAM,IAChBC,EAAc,OAEZD,EAAQ,GAAM,IAChBC,EAAc,KAGdF,EAAM,GAAKA,EAAM,KACnBE,EAAc,OACVD,EAAQ,GAAM,IAChBC,EAAc,KAGbF,EAAM,KAAOA,EAAM,IAAQC,EAAQ,GAAM,IAC5CC,EAAc,OAGd,uBAAKC,IAAKH,EAAM,GAAIF,UAAWI,GAE3B,uBACEE,IAAKJ,EAAM,GACXK,SAAS,QACTC,QAAQ,OACRC,IAAI,KAGJ,MAMd,uBAAKT,UAAU,SAASU,MAAOC,EAAAA,KAGrC,EAAC,EA9DU,CAASC,EAAAA,WAwGtB,W","sources":["webpack://jonaso.de/./src/pages/artworks/index.js"],"sourcesContent":["import '../../true-masonry.css' // based on https://codepen.io/iamsaief/pen/jObaoKo\n\nimport React from \"react\"\nimport ArtHeader from '../../components/ArtHeader'\nimport { spacer } from \"../../common\"\n\n\nconst cachebuster = Math.round(Date.now() / 10000)\n// const _URL = process.env.NODE_ENV === \"development\" ? `/artworks/json/webp-latest.json?${cachebuster}` : `https://www.jonaso.de/artworks/json/webp-latest.json?${cachebuster}`\nconst _URL = `/artworks/json/webp-latest.json?${cachebuster}`\n\n\nclass ArtPage extends React.Component {\n  state = { images: [] }\n  componentDidMount() {\n    fetch(_URL)\n      .then(response => response.json())\n      .then(images => {\n        this.setState({ images })\n      })\n  }\n  render() {\n    const { images } = this.state\n    return (\n      <>\n        <ArtHeader\n          generator='AI-generated Images'\n          byline='Latest digital images generated from text prompts (never edited). Click links below for more.'\n        />\n        {/*\n          <MasonryGallery images={images} />\n        */}\n        <div id=\"true-masonry\">\n        <div className=\"grid-wrapper\">\n          {\n            images.map((image,index) => {\n              let aspectratio = ''\n              if (image[1] > image[2]) {\n                aspectratio = 'wide'\n                if (index % 5 === 0) {\n                  aspectratio = 'big'\n                }\n                if (index % 4 === 0) {\n                  aspectratio = ''\n                }\n              }\n              if (image[1] < image[2]) {\n                aspectratio = 'tall'\n                if (index % 9 === 0) {\n                  aspectratio = ''\n                }\n              }\n              if ((image[1] === image[2]) && (index % 4 === 0)) {\n                aspectratio = 'big'\n              }\n              return (\n                <div key={image[0]} className={aspectratio}>\n                  {\n                    <img\n                      src={image[0]}\n                      decoding=\"async\"\n                      loading=\"lazy\"\n                      alt=\"\"\n                    />\n                  }\n                </div>\n              )\n            }) //\n          }\n        </div>\n        </div>\n        <div className=\"spacer\" style={spacer}></div>\n      </>\n    )\n  }\n}\n\n\n// import { graphql } from 'gatsby'\n// const ArtPage = ({data}) => {\n//   \tlet images = data.allFile.edges\n//     return (\n//     \t<React.Fragment>\n//     \t\t\t<ArtHeader\n//             generator='AI-generated Images'\n//             byline='Latest digital images generated from text prompts (never edited). Click links below for more.'\n//           />\n//     \t\t\t<MasonryGallery images={images} />\n// \t        <div className=\"spacer\" style={spacer}></div>\n//     \t</React.Fragment>\n//     )\n// }\n\n\n// export const query = graphql`\n// query ArtworksQuery {\n//   allFile(\n//   \tsort: {fields: birthTime, order: DESC},\n//   \tlimit: 25,\n//     filter: {\n//       extension: { regex: \"/(jpg)|(png)/\" }\n//     }\n//   ) {\n//     edges {\n//       node {\n//         childImageSharp {\n//           gatsbyImageData(\n//             width: 400\n// \t\t\t\t\t\tplaceholder: DOMINANT_COLOR\n//           )\n//         }\n//       }\n//     }\n//   }\n// }`\n\nexport default ArtPage\n"],"names":["_URL","Math","round","Date","now","ArtPage","state","images","componentDidMount","fetch","then","response","json","this","setState","render","generator","byline","id","className","map","image","index","aspectratio","key","src","decoding","loading","alt","style","spacer","React"],"sourceRoot":""}