{"version":3,"sources":["webpack:///component---src-pages-publications-js-399800758b46a505ec6b.js","webpack:///./~/isomorphic-fetch/fetch-npm-browserify.js?7723*","webpack:///./~/whatwg-fetch/fetch.js?1c20*","webpack:///./src/pages/publications.js"],"names":["webpackJsonp","92","module","exports","__webpack_require__","self","fetch","bind","108","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","undefined","support","iterable","Symbol","Headers","headers","this","map","forEach","append","Array","isArray","header","Object","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","Uint8Array","chars","length","i","fromCharCode","join","bufferClone","slice","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","Blob","prototype","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","toString","arrayBuffer","isDataView","_bodyArrayBuffer","ArrayBuffer","isArrayBufferView","Error","get","type","rejected","then","text","decode","json","JSON","parse","normalizeMethod","method","upcased","toUpperCase","methods","indexOf","Request","input","options","url","credentials","mode","referrer","form","trim","split","bytes","replace","decodeURIComponent","parseHeaders","rawHeaders","line","parts","key","Response","bodyInit","status","ok","statusText","e","viewClasses","obj","DataView","isView","call","oldValue","has","hasOwnProperty","callback","thisArg","keys","push","values","entries","clone","response","redirectStatuses","redirect","RangeError","location","init","request","xhr","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill","502","_interopRequireDefault","__esModule","default","_classCallCheck","instance","Constructor","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","categorizeList","pubList","annotatedList","yRegex","found","match","__html","year","categorizedList","_react","_react2","_gatsbyLink","_semanticUiReact","_common","_REFERENCES","Publications","_React$Component","_temp","_this","_ret","_len","arguments","args","_key","apply","concat","state","references","componentWillMount","refs","categorizedRefs","setState","render","reverse","createElement","Container","Grid","Row","Header","size","item","index","icostr","Column","width","Responsive","maxWidth","Icon","color","minWidth","Item","Content","dangerouslySetInnerHTML","style","spacer","Component"],"mappings":"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","file":"component---src-pages-publications-js-399800758b46a505ec6b.js","sourcesContent":["webpackJsonp([96068746775097],{\n\n/***/ 92:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// the whatwg-fetch polyfill installs the fetch() function\n\t// on the global object (window or self)\n\t//\n\t// Return that as the export for use in Webpack, Browserify etc.\n\t__webpack_require__(108);\n\tmodule.exports = self.fetch.bind(self);\n\n\n/***/ }),\n\n/***/ 108:\n/***/ (function(module, exports) {\n\n\t(function(self) {\n\t  'use strict';\n\t\n\t  if (self.fetch) {\n\t    return\n\t  }\n\t\n\t  var support = {\n\t    searchParams: 'URLSearchParams' in self,\n\t    iterable: 'Symbol' in self && 'iterator' in Symbol,\n\t    blob: 'FileReader' in self && 'Blob' in self && (function() {\n\t      try {\n\t        new Blob()\n\t        return true\n\t      } catch(e) {\n\t        return false\n\t      }\n\t    })(),\n\t    formData: 'FormData' in self,\n\t    arrayBuffer: 'ArrayBuffer' in self\n\t  }\n\t\n\t  if (support.arrayBuffer) {\n\t    var viewClasses = [\n\t      '[object Int8Array]',\n\t      '[object Uint8Array]',\n\t      '[object Uint8ClampedArray]',\n\t      '[object Int16Array]',\n\t      '[object Uint16Array]',\n\t      '[object Int32Array]',\n\t      '[object Uint32Array]',\n\t      '[object Float32Array]',\n\t      '[object Float64Array]'\n\t    ]\n\t\n\t    var isDataView = function(obj) {\n\t      return obj && DataView.prototype.isPrototypeOf(obj)\n\t    }\n\t\n\t    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n\t      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n\t    }\n\t  }\n\t\n\t  function normalizeName(name) {\n\t    if (typeof name !== 'string') {\n\t      name = String(name)\n\t    }\n\t    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n\t      throw new TypeError('Invalid character in header field name')\n\t    }\n\t    return name.toLowerCase()\n\t  }\n\t\n\t  function normalizeValue(value) {\n\t    if (typeof value !== 'string') {\n\t      value = String(value)\n\t    }\n\t    return value\n\t  }\n\t\n\t  // Build a destructive iterator for the value list\n\t  function iteratorFor(items) {\n\t    var iterator = {\n\t      next: function() {\n\t        var value = items.shift()\n\t        return {done: value === undefined, value: value}\n\t      }\n\t    }\n\t\n\t    if (support.iterable) {\n\t      iterator[Symbol.iterator] = function() {\n\t        return iterator\n\t      }\n\t    }\n\t\n\t    return iterator\n\t  }\n\t\n\t  function Headers(headers) {\n\t    this.map = {}\n\t\n\t    if (headers instanceof Headers) {\n\t      headers.forEach(function(value, name) {\n\t        this.append(name, value)\n\t      }, this)\n\t    } else if (Array.isArray(headers)) {\n\t      headers.forEach(function(header) {\n\t        this.append(header[0], header[1])\n\t      }, this)\n\t    } else if (headers) {\n\t      Object.getOwnPropertyNames(headers).forEach(function(name) {\n\t        this.append(name, headers[name])\n\t      }, this)\n\t    }\n\t  }\n\t\n\t  Headers.prototype.append = function(name, value) {\n\t    name = normalizeName(name)\n\t    value = normalizeValue(value)\n\t    var oldValue = this.map[name]\n\t    this.map[name] = oldValue ? oldValue+','+value : value\n\t  }\n\t\n\t  Headers.prototype['delete'] = function(name) {\n\t    delete this.map[normalizeName(name)]\n\t  }\n\t\n\t  Headers.prototype.get = function(name) {\n\t    name = normalizeName(name)\n\t    return this.has(name) ? this.map[name] : null\n\t  }\n\t\n\t  Headers.prototype.has = function(name) {\n\t    return this.map.hasOwnProperty(normalizeName(name))\n\t  }\n\t\n\t  Headers.prototype.set = function(name, value) {\n\t    this.map[normalizeName(name)] = normalizeValue(value)\n\t  }\n\t\n\t  Headers.prototype.forEach = function(callback, thisArg) {\n\t    for (var name in this.map) {\n\t      if (this.map.hasOwnProperty(name)) {\n\t        callback.call(thisArg, this.map[name], name, this)\n\t      }\n\t    }\n\t  }\n\t\n\t  Headers.prototype.keys = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push(name) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.values = function() {\n\t    var items = []\n\t    this.forEach(function(value) { items.push(value) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.entries = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push([name, value]) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  if (support.iterable) {\n\t    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n\t  }\n\t\n\t  function consumed(body) {\n\t    if (body.bodyUsed) {\n\t      return Promise.reject(new TypeError('Already read'))\n\t    }\n\t    body.bodyUsed = true\n\t  }\n\t\n\t  function fileReaderReady(reader) {\n\t    return new Promise(function(resolve, reject) {\n\t      reader.onload = function() {\n\t        resolve(reader.result)\n\t      }\n\t      reader.onerror = function() {\n\t        reject(reader.error)\n\t      }\n\t    })\n\t  }\n\t\n\t  function readBlobAsArrayBuffer(blob) {\n\t    var reader = new FileReader()\n\t    var promise = fileReaderReady(reader)\n\t    reader.readAsArrayBuffer(blob)\n\t    return promise\n\t  }\n\t\n\t  function readBlobAsText(blob) {\n\t    var reader = new FileReader()\n\t    var promise = fileReaderReady(reader)\n\t    reader.readAsText(blob)\n\t    return promise\n\t  }\n\t\n\t  function readArrayBufferAsText(buf) {\n\t    var view = new Uint8Array(buf)\n\t    var chars = new Array(view.length)\n\t\n\t    for (var i = 0; i < view.length; i++) {\n\t      chars[i] = String.fromCharCode(view[i])\n\t    }\n\t    return chars.join('')\n\t  }\n\t\n\t  function bufferClone(buf) {\n\t    if (buf.slice) {\n\t      return buf.slice(0)\n\t    } else {\n\t      var view = new Uint8Array(buf.byteLength)\n\t      view.set(new Uint8Array(buf))\n\t      return view.buffer\n\t    }\n\t  }\n\t\n\t  function Body() {\n\t    this.bodyUsed = false\n\t\n\t    this._initBody = function(body) {\n\t      this._bodyInit = body\n\t      if (!body) {\n\t        this._bodyText = ''\n\t      } else if (typeof body === 'string') {\n\t        this._bodyText = body\n\t      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n\t        this._bodyBlob = body\n\t      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n\t        this._bodyFormData = body\n\t      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t        this._bodyText = body.toString()\n\t      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n\t        this._bodyArrayBuffer = bufferClone(body.buffer)\n\t        // IE 10-11 can't handle a DataView body.\n\t        this._bodyInit = new Blob([this._bodyArrayBuffer])\n\t      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n\t        this._bodyArrayBuffer = bufferClone(body)\n\t      } else {\n\t        throw new Error('unsupported BodyInit type')\n\t      }\n\t\n\t      if (!this.headers.get('content-type')) {\n\t        if (typeof body === 'string') {\n\t          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n\t        } else if (this._bodyBlob && this._bodyBlob.type) {\n\t          this.headers.set('content-type', this._bodyBlob.type)\n\t        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n\t        }\n\t      }\n\t    }\n\t\n\t    if (support.blob) {\n\t      this.blob = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return Promise.resolve(this._bodyBlob)\n\t        } else if (this._bodyArrayBuffer) {\n\t          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as blob')\n\t        } else {\n\t          return Promise.resolve(new Blob([this._bodyText]))\n\t        }\n\t      }\n\t\n\t      this.arrayBuffer = function() {\n\t        if (this._bodyArrayBuffer) {\n\t          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n\t        } else {\n\t          return this.blob().then(readBlobAsArrayBuffer)\n\t        }\n\t      }\n\t    }\n\t\n\t    this.text = function() {\n\t      var rejected = consumed(this)\n\t      if (rejected) {\n\t        return rejected\n\t      }\n\t\n\t      if (this._bodyBlob) {\n\t        return readBlobAsText(this._bodyBlob)\n\t      } else if (this._bodyArrayBuffer) {\n\t        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n\t      } else if (this._bodyFormData) {\n\t        throw new Error('could not read FormData body as text')\n\t      } else {\n\t        return Promise.resolve(this._bodyText)\n\t      }\n\t    }\n\t\n\t    if (support.formData) {\n\t      this.formData = function() {\n\t        return this.text().then(decode)\n\t      }\n\t    }\n\t\n\t    this.json = function() {\n\t      return this.text().then(JSON.parse)\n\t    }\n\t\n\t    return this\n\t  }\n\t\n\t  // HTTP methods whose capitalization should be normalized\n\t  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\t\n\t  function normalizeMethod(method) {\n\t    var upcased = method.toUpperCase()\n\t    return (methods.indexOf(upcased) > -1) ? upcased : method\n\t  }\n\t\n\t  function Request(input, options) {\n\t    options = options || {}\n\t    var body = options.body\n\t\n\t    if (input instanceof Request) {\n\t      if (input.bodyUsed) {\n\t        throw new TypeError('Already read')\n\t      }\n\t      this.url = input.url\n\t      this.credentials = input.credentials\n\t      if (!options.headers) {\n\t        this.headers = new Headers(input.headers)\n\t      }\n\t      this.method = input.method\n\t      this.mode = input.mode\n\t      if (!body && input._bodyInit != null) {\n\t        body = input._bodyInit\n\t        input.bodyUsed = true\n\t      }\n\t    } else {\n\t      this.url = String(input)\n\t    }\n\t\n\t    this.credentials = options.credentials || this.credentials || 'omit'\n\t    if (options.headers || !this.headers) {\n\t      this.headers = new Headers(options.headers)\n\t    }\n\t    this.method = normalizeMethod(options.method || this.method || 'GET')\n\t    this.mode = options.mode || this.mode || null\n\t    this.referrer = null\n\t\n\t    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n\t      throw new TypeError('Body not allowed for GET or HEAD requests')\n\t    }\n\t    this._initBody(body)\n\t  }\n\t\n\t  Request.prototype.clone = function() {\n\t    return new Request(this, { body: this._bodyInit })\n\t  }\n\t\n\t  function decode(body) {\n\t    var form = new FormData()\n\t    body.trim().split('&').forEach(function(bytes) {\n\t      if (bytes) {\n\t        var split = bytes.split('=')\n\t        var name = split.shift().replace(/\\+/g, ' ')\n\t        var value = split.join('=').replace(/\\+/g, ' ')\n\t        form.append(decodeURIComponent(name), decodeURIComponent(value))\n\t      }\n\t    })\n\t    return form\n\t  }\n\t\n\t  function parseHeaders(rawHeaders) {\n\t    var headers = new Headers()\n\t    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n\t      var parts = line.split(':')\n\t      var key = parts.shift().trim()\n\t      if (key) {\n\t        var value = parts.join(':').trim()\n\t        headers.append(key, value)\n\t      }\n\t    })\n\t    return headers\n\t  }\n\t\n\t  Body.call(Request.prototype)\n\t\n\t  function Response(bodyInit, options) {\n\t    if (!options) {\n\t      options = {}\n\t    }\n\t\n\t    this.type = 'default'\n\t    this.status = 'status' in options ? options.status : 200\n\t    this.ok = this.status >= 200 && this.status < 300\n\t    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n\t    this.headers = new Headers(options.headers)\n\t    this.url = options.url || ''\n\t    this._initBody(bodyInit)\n\t  }\n\t\n\t  Body.call(Response.prototype)\n\t\n\t  Response.prototype.clone = function() {\n\t    return new Response(this._bodyInit, {\n\t      status: this.status,\n\t      statusText: this.statusText,\n\t      headers: new Headers(this.headers),\n\t      url: this.url\n\t    })\n\t  }\n\t\n\t  Response.error = function() {\n\t    var response = new Response(null, {status: 0, statusText: ''})\n\t    response.type = 'error'\n\t    return response\n\t  }\n\t\n\t  var redirectStatuses = [301, 302, 303, 307, 308]\n\t\n\t  Response.redirect = function(url, status) {\n\t    if (redirectStatuses.indexOf(status) === -1) {\n\t      throw new RangeError('Invalid status code')\n\t    }\n\t\n\t    return new Response(null, {status: status, headers: {location: url}})\n\t  }\n\t\n\t  self.Headers = Headers\n\t  self.Request = Request\n\t  self.Response = Response\n\t\n\t  self.fetch = function(input, init) {\n\t    return new Promise(function(resolve, reject) {\n\t      var request = new Request(input, init)\n\t      var xhr = new XMLHttpRequest()\n\t\n\t      xhr.onload = function() {\n\t        var options = {\n\t          status: xhr.status,\n\t          statusText: xhr.statusText,\n\t          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n\t        }\n\t        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n\t        var body = 'response' in xhr ? xhr.response : xhr.responseText\n\t        resolve(new Response(body, options))\n\t      }\n\t\n\t      xhr.onerror = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.ontimeout = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.open(request.method, request.url, true)\n\t\n\t      if (request.credentials === 'include') {\n\t        xhr.withCredentials = true\n\t      }\n\t\n\t      if ('responseType' in xhr && support.blob) {\n\t        xhr.responseType = 'blob'\n\t      }\n\t\n\t      request.headers.forEach(function(value, name) {\n\t        xhr.setRequestHeader(name, value)\n\t      })\n\t\n\t      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n\t    })\n\t  }\n\t  self.fetch.polyfill = true\n\t})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ }),\n\n/***/ 502:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _gatsbyLink = __webpack_require__(54);\n\t\n\tvar _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);\n\t\n\tvar _semanticUiReact = __webpack_require__(59);\n\t\n\t__webpack_require__(92);\n\t\n\tvar _common = __webpack_require__(70);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _REFERENCES = \"http://jonaso.de/static/references.json\";\n\t\n\t/**\n\t * Group publications by year\n\t * @param {Array} pubList - List of publications\n\t * @returns {Object} categorizedList - Categorized list of publications\n\t */\n\tfunction categorizeList(pubList) {\n\t  if (!pubList) {\n\t    return {};\n\t  }\n\t  var annotatedList = pubList.map(function (text) {\n\t    var yRegex = /20\\d\\d/;\n\t    var found = text.match(yRegex);\n\t    return { __html: text.replace('publications_bib.html', '/static/publications_bib.html'), year: found[0] || 'forthcoming' };\n\t  });\n\t  var categorizedList = {};\n\t  annotatedList.forEach(function (obj) {\n\t    if (categorizedList[obj.year]) {\n\t      categorizedList[obj.year].push(obj);\n\t    } else {\n\t      categorizedList[obj.year] = [obj];\n\t    }\n\t  });\n\t  return categorizedList;\n\t}\n\t\n\tvar Publications = function (_React$Component) {\n\t  _inherits(Publications, _React$Component);\n\t\n\t  function Publications() {\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, Publications);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {\n\t      references: {}\n\t    }, _this.componentWillMount = function () {\n\t      fetch(_REFERENCES).then(function (response) {\n\t        return response.json();\n\t      }).then(function (refs) {\n\t        var categorizedRefs = categorizeList(refs);\n\t        _this.setState({ references: categorizedRefs });\n\t      });\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  Publications.prototype.render = function render() {\n\t    var references = this.state.references;\n\t\n\t    var keys = Object.keys(references).reverse();\n\t    return _react2.default.createElement(\n\t      \"div\",\n\t      null,\n\t      _react2.default.createElement(\n\t        _semanticUiReact.Container,\n\t        null,\n\t        keys.map(function (year) {\n\t          return _react2.default.createElement(\n\t            _semanticUiReact.Grid,\n\t            { key: year },\n\t            _react2.default.createElement(\n\t              _semanticUiReact.Grid.Row,\n\t              null,\n\t              _react2.default.createElement(\n\t                _semanticUiReact.Header,\n\t                { size: \"large\" },\n\t                year\n\t              )\n\t            ),\n\t            references[year].map(function (item, index) {\n\t              var icostr = 'file text outline';\n\t              if (item.__html.indexOf('.pdf') === -1) {\n\t                icostr = 'file outline';\n\t              }\n\t              return _react2.default.createElement(\n\t                _semanticUiReact.Grid.Row,\n\t                { key: index },\n\t                _react2.default.createElement(\n\t                  _semanticUiReact.Grid.Column,\n\t                  { width: 2 },\n\t                  _react2.default.createElement(\n\t                    _semanticUiReact.Responsive,\n\t                    { maxWidth: 768 },\n\t                    _react2.default.createElement(_semanticUiReact.Icon, { color: \"grey\", size: \"large\", name: icostr })\n\t                  ),\n\t                  _react2.default.createElement(\n\t                    _semanticUiReact.Responsive,\n\t                    { minWidth: 769, maxWidth: 990 },\n\t                    _react2.default.createElement(_semanticUiReact.Icon, { color: \"grey\", size: \"huge\", name: icostr })\n\t                  ),\n\t                  _react2.default.createElement(\n\t                    _semanticUiReact.Responsive,\n\t                    { minWidth: 992 },\n\t                    _react2.default.createElement(_semanticUiReact.Icon, { color: \"grey\", size: \"big\", name: icostr })\n\t                  )\n\t                ),\n\t                _react2.default.createElement(\n\t                  _semanticUiReact.Grid.Column,\n\t                  { width: 14 },\n\t                  _react2.default.createElement(\n\t                    _semanticUiReact.Item,\n\t                    null,\n\t                    _react2.default.createElement(\n\t                      _semanticUiReact.Item.Content,\n\t                      null,\n\t                      _react2.default.createElement(_semanticUiReact.Item.Header, { dangerouslySetInnerHTML: item })\n\t                    )\n\t                  )\n\t                )\n\t              );\n\t            })\n\t          );\n\t        }),\n\t        _react2.default.createElement(\"div\", { style: _common.spacer })\n\t      )\n\t    );\n\t  };\n\t\n\t  return Publications;\n\t}(_react2.default.Component);\n\t\n\texports.default = Publications;\n\tmodule.exports = exports[\"default\"];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-publications-js-399800758b46a505ec6b.js","// the whatwg-fetch polyfill installs the fetch() function\n// on the global object (window or self)\n//\n// Return that as the export for use in Webpack, Browserify etc.\nrequire('whatwg-fetch');\nmodule.exports = self.fetch.bind(self);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/isomorphic-fetch/fetch-npm-browserify.js\n// module id = 92\n// module chunks = 47301250561866 72535408073075 96068746775097","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/whatwg-fetch/fetch.js\n// module id = 108\n// module chunks = 47301250561866 72535408073075 96068746775097","import React from \"react\"\nimport Link from \"gatsby-link\"\nimport { Responsive, Header, List, Item, Icon, Grid, Container } from 'semantic-ui-react'\nimport \"isomorphic-fetch\"\n\nimport { spacer } from \"../common\"\n\n\nconst _REFERENCES = \"http://jonaso.de/static/references.json\"\n\n\n/**\n * Group publications by year\n * @param {Array} pubList - List of publications\n * @returns {Object} categorizedList - Categorized list of publications\n */\nfunction categorizeList(pubList) {\n    if (!pubList) {\n        return {}\n    }\n    const annotatedList = pubList.map(text => {\n        const yRegex = /20\\d\\d/\n        const found = text.match(yRegex)\n        return {__html: text.replace('publications_bib.html', '/static/publications_bib.html'), year: found[0] || 'forthcoming'}\n    })\n    const categorizedList = {}\n    annotatedList.forEach(obj => {\n      if (categorizedList[obj.year]) {\n          categorizedList[obj.year].push(obj)\n      } else {\n          categorizedList[obj.year] = [obj]\n      }\n    })\n    return categorizedList\n}\n\n\nclass Publications extends React.Component {\n  state = {\n    references: {},\n  }\n  componentWillMount = () => {\n    fetch(_REFERENCES)\n    .then(response => response.json())\n    .then(refs => {\n      const categorizedRefs = categorizeList(refs)\n      this.setState({references: categorizedRefs})\n    })\n  }\n  render() {\n    const { references } = this.state\n    const keys = Object.keys(references).reverse()\n    return (\n      <div>\n        <Container>\n\n              {\n                keys.map(year => {\n                  return (\n                    <Grid key={year}>\n                        <Grid.Row>\n                          <Header size=\"large\">{year}</Header>\n                        </Grid.Row>\n                        {\n                          references[year].map((item, index) => {\n                            let icostr = 'file text outline'\n                            if (item.__html.indexOf('.pdf') === -1) {\n                              icostr = 'file outline'\n                            }\n                            return (\n                              <Grid.Row key={index}>\n                                <Grid.Column width={2}>\n                                  <Responsive maxWidth={768}>\n                                    <Icon color=\"grey\" size=\"large\" name={icostr} />\n                                  </Responsive>\n                                  <Responsive minWidth={769} maxWidth={990}>\n                                    <Icon color=\"grey\" size=\"huge\" name={icostr} />\n                                  </Responsive>\n                                  <Responsive minWidth={992}>\n                                    <Icon color=\"grey\" size=\"big\" name={icostr} />\n                                  </Responsive>\n                                </Grid.Column>\n                                <Grid.Column width={14}>\n                                <Item>\n                                  <Item.Content>\n                                    <Item.Header dangerouslySetInnerHTML={item}></Item.Header>\n                                    {/*\n                                    <Item.Extra>\n                                      <List>\n                                        <List.Item><a href=\"https://www.researchgate.net/publication/321418554_Towards_Sociotechnical_Management_of_Intra-Organisational_Knowledge_Transfer\"><Icon title=\"pdf\" name='file pdf outline' /></a></List.Item>\n                                      </List>\n                                    </Item.Extra>\n                                    */}\n                                  </Item.Content>\n                                </Item>\n                                </Grid.Column>\n                              </Grid.Row>\n                            )\n                          })\n                        }\n                    </Grid>\n                  )\n                })\n              }\n\n\n            <div style={spacer}></div>\n\n        </Container>\n      </div>\n    )\n  }\n}\n\nexport default Publications\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/publications.js"],"sourceRoot":""}