{"version":3,"file":"2a89bfd50bd5649e2bb60e252f5274bd276e0bbe-1a6522013bdd9ada6073.js","mappings":"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","sources":["webpack://jonaso.de/./src/components/GraphSwitcher.js","webpack://jonaso.de/./node_modules/semantic-ui-react/dist/es/elements/Button/ButtonContent.js","webpack://jonaso.de/./node_modules/semantic-ui-react/dist/es/elements/Button/ButtonGroup.js","webpack://jonaso.de/./node_modules/semantic-ui-react/dist/es/elements/Button/ButtonOr.js","webpack://jonaso.de/./node_modules/semantic-ui-react/dist/es/elements/Button/Button.js","webpack://jonaso.de/./node_modules/lodash-es/_baseMap.js","webpack://jonaso.de/./node_modules/lodash-es/map.js"],"sourcesContent":["import React from \"react\"\nimport { navigate } from 'gatsby'\nimport 'semantic-ui-css/components/button.min.css'\nimport { Button } from 'semantic-ui-react'\n\n\nclass GraphSwitcher extends React.Component {\n  render() {\n    const { active } = this.props\n    return (\n      <Button.Group size=\"mini\">\n          <Button positive={active === 'interests'}\n            onClick={() => navigate('/research/interests')}>Bar</Button>\n          <Button.Or />\n          <Button positive={active === 'wordcloud'}\n            onClick={() => navigate('/research/interests/wordcloud')}>Cloud</Button>\n          {/*\n            <Button.Or />\n            <Button positive={active === 'treemap'}\n              onClick={() => navigate('/research/interests/treemap')}>Tree</Button>\n          */}\n      </Button.Group>\n    )\n  }\n}\n\nexport default GraphSwitcher\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * Used in some Button types, such as `animated`.\n */\n\nfunction ButtonContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      hidden = props.hidden,\n      visible = props.visible;\n  var classes = cx(useKeyOnly(visible, 'visible'), useKeyOnly(hidden, 'hidden'), 'content', className);\n  var rest = getUnhandledProps(ButtonContent, props);\n  var ElementType = getElementType(ButtonContent, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nButtonContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"hidden\", \"visible\"];\nButtonContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Initially hidden, visible on hover. */\n  hidden: PropTypes.bool,\n\n  /** Initially visible, hidden on hover. */\n  visible: PropTypes.bool\n} : {};\nexport default ButtonContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _map from \"lodash-es/map\";\nimport _isNil from \"lodash-es/isNil\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useValueAndKey, useWidthProp } from '../../lib';\nimport Button from './Button';\n/**\n * Buttons can be grouped.\n */\n\nfunction ButtonGroup(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      buttons = props.buttons,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      compact = props.compact,\n      content = props.content,\n      floated = props.floated,\n      fluid = props.fluid,\n      icon = props.icon,\n      inverted = props.inverted,\n      labeled = props.labeled,\n      negative = props.negative,\n      positive = props.positive,\n      primary = props.primary,\n      secondary = props.secondary,\n      size = props.size,\n      toggle = props.toggle,\n      vertical = props.vertical,\n      widths = props.widths;\n  var classes = cx('ui', color, size, useKeyOnly(basic, 'basic'), useKeyOnly(compact, 'compact'), useKeyOnly(fluid, 'fluid'), useKeyOnly(icon, 'icon'), useKeyOnly(inverted, 'inverted'), useKeyOnly(labeled, 'labeled'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(primary, 'primary'), useKeyOnly(secondary, 'secondary'), useKeyOnly(toggle, 'toggle'), useKeyOnly(vertical, 'vertical'), useKeyOrValueAndKey(attached, 'attached'), useValueAndKey(floated, 'floated'), useWidthProp(widths), 'buttons', className);\n  var rest = getUnhandledProps(ButtonGroup, props);\n  var ElementType = getElementType(ButtonGroup, props);\n\n  if (_isNil(buttons)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), childrenUtils.isNil(children) ? content : children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), _map(buttons, function (button) {\n    return Button.create(button);\n  }));\n}\n\nButtonGroup.handledProps = [\"as\", \"attached\", \"basic\", \"buttons\", \"children\", \"className\", \"color\", \"compact\", \"content\", \"floated\", \"fluid\", \"icon\", \"inverted\", \"labeled\", \"negative\", \"positive\", \"primary\", \"secondary\", \"size\", \"toggle\", \"vertical\", \"widths\"];\nButtonGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Groups can be attached to other content. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['left', 'right', 'top', 'bottom'])]),\n\n  /** Groups can be less pronounced. */\n  basic: PropTypes.bool,\n\n  /** Array of shorthand Button values. */\n  buttons: customPropTypes.collectionShorthand,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Groups can have a shared color. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Groups can reduce their padding to fit into tighter spaces. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Groups can be aligned to the left or right of its container. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** Groups can take the width of their container. */\n  fluid: PropTypes.bool,\n\n  /** Groups can be formatted as icons. */\n  icon: PropTypes.bool,\n\n  /** Groups can be formatted to appear on dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Groups can be formatted as labeled icon buttons. */\n  labeled: PropTypes.bool,\n\n  /** Groups can hint towards a negative consequence. */\n  negative: PropTypes.bool,\n\n  /** Groups can hint towards a positive consequence. */\n  positive: PropTypes.bool,\n\n  /** Groups can be formatted to show different levels of emphasis. */\n  primary: PropTypes.bool,\n\n  /** Groups can be formatted to show different levels of emphasis. */\n  secondary: PropTypes.bool,\n\n  /** Groups can have different sizes. */\n  size: PropTypes.oneOf(SUI.SIZES),\n\n  /** Groups can be formatted to toggle on and off. */\n  toggle: PropTypes.bool,\n\n  /** Groups can be formatted to appear vertically. */\n  vertical: PropTypes.bool,\n\n  /** Groups can have their widths divided evenly. */\n  widths: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\nexport default ButtonGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getElementType, getUnhandledProps } from '../../lib';\n/**\n * Button groups can contain conditionals.\n */\n\nfunction ButtonOr(props) {\n  var className = props.className,\n      text = props.text;\n  var classes = cx('or', className);\n  var rest = getUnhandledProps(ButtonOr, props);\n  var ElementType = getElementType(ButtonOr, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes,\n    \"data-text\": text\n  }));\n}\n\nButtonOr.handledProps = [\"as\", \"className\", \"text\"];\nButtonOr.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Or buttons can have their text localized, or adjusted by using the text prop. */\n  text: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : {};\nexport default ButtonOr;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _invoke from \"lodash-es/invoke\";\nimport _isNil from \"lodash-es/isNil\";\nimport { Ref } from '@fluentui/react-component-ref';\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { Component, createRef } from 'react';\nimport { childrenUtils, customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useValueAndKey } from '../../lib';\nimport Icon from '../Icon/Icon';\nimport Label from '../Label/Label';\nimport ButtonContent from './ButtonContent';\nimport ButtonGroup from './ButtonGroup';\nimport ButtonOr from './ButtonOr';\n/**\n * A Button indicates a possible user action.\n * @see Form\n * @see Icon\n * @see Label\n */\n\nvar Button = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Button, _Component);\n\n  function Button() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.ref = /*#__PURE__*/createRef();\n\n    _this.computeElementType = function () {\n      var _this$props = _this.props,\n          attached = _this$props.attached,\n          label = _this$props.label;\n      if (!_isNil(attached) || !_isNil(label)) return 'div';\n    };\n\n    _this.computeTabIndex = function (ElementType) {\n      var _this$props2 = _this.props,\n          disabled = _this$props2.disabled,\n          tabIndex = _this$props2.tabIndex;\n      if (!_isNil(tabIndex)) return tabIndex;\n      if (disabled) return -1;\n      if (ElementType === 'div') return 0;\n    };\n\n    _this.focus = function (options) {\n      return _invoke(_this.ref.current, 'focus', options);\n    };\n\n    _this.handleClick = function (e) {\n      var disabled = _this.props.disabled;\n\n      if (disabled) {\n        e.preventDefault();\n        return;\n      }\n\n      _invoke(_this.props, 'onClick', e, _this.props);\n    };\n\n    _this.hasIconClass = function () {\n      var _this$props3 = _this.props,\n          labelPosition = _this$props3.labelPosition,\n          children = _this$props3.children,\n          content = _this$props3.content,\n          icon = _this$props3.icon;\n      if (icon === true) return true;\n      return icon && (labelPosition || childrenUtils.isNil(children) && _isNil(content));\n    };\n\n    return _this;\n  }\n\n  var _proto = Button.prototype;\n\n  _proto.computeButtonAriaRole = function computeButtonAriaRole(ElementType) {\n    var role = this.props.role;\n    if (!_isNil(role)) return role;\n    if (ElementType !== 'button') return 'button';\n  };\n\n  _proto.render = function render() {\n    var _this$props4 = this.props,\n        active = _this$props4.active,\n        animated = _this$props4.animated,\n        attached = _this$props4.attached,\n        basic = _this$props4.basic,\n        children = _this$props4.children,\n        circular = _this$props4.circular,\n        className = _this$props4.className,\n        color = _this$props4.color,\n        compact = _this$props4.compact,\n        content = _this$props4.content,\n        disabled = _this$props4.disabled,\n        floated = _this$props4.floated,\n        fluid = _this$props4.fluid,\n        icon = _this$props4.icon,\n        inverted = _this$props4.inverted,\n        label = _this$props4.label,\n        labelPosition = _this$props4.labelPosition,\n        loading = _this$props4.loading,\n        negative = _this$props4.negative,\n        positive = _this$props4.positive,\n        primary = _this$props4.primary,\n        secondary = _this$props4.secondary,\n        size = _this$props4.size,\n        toggle = _this$props4.toggle,\n        type = _this$props4.type;\n    var baseClasses = cx(color, size, useKeyOnly(active, 'active'), useKeyOnly(basic, 'basic'), useKeyOnly(circular, 'circular'), useKeyOnly(compact, 'compact'), useKeyOnly(fluid, 'fluid'), useKeyOnly(this.hasIconClass(), 'icon'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(primary, 'primary'), useKeyOnly(secondary, 'secondary'), useKeyOnly(toggle, 'toggle'), useKeyOrValueAndKey(animated, 'animated'), useKeyOrValueAndKey(attached, 'attached'));\n    var labeledClasses = cx(useKeyOrValueAndKey(labelPosition || !!label, 'labeled'));\n    var wrapperClasses = cx(useKeyOnly(disabled, 'disabled'), useValueAndKey(floated, 'floated'));\n    var rest = getUnhandledProps(Button, this.props);\n    var ElementType = getElementType(Button, this.props, this.computeElementType);\n    var tabIndex = this.computeTabIndex(ElementType);\n\n    if (!_isNil(label)) {\n      var buttonClasses = cx('ui', baseClasses, 'button', className);\n      var containerClasses = cx('ui', labeledClasses, 'button', className, wrapperClasses);\n      var labelElement = Label.create(label, {\n        defaultProps: {\n          basic: true,\n          pointing: labelPosition === 'left' ? 'right' : 'left'\n        },\n        autoGenerateKey: false\n      });\n      return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n        className: containerClasses,\n        onClick: this.handleClick\n      }), labelPosition === 'left' && labelElement, /*#__PURE__*/React.createElement(Ref, {\n        innerRef: this.ref\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: buttonClasses,\n        \"aria-pressed\": toggle ? !!active : undefined,\n        disabled: disabled,\n        type: type,\n        tabIndex: tabIndex\n      }, Icon.create(icon, {\n        autoGenerateKey: false\n      }), \" \", content)), (labelPosition === 'right' || !labelPosition) && labelElement);\n    }\n\n    var classes = cx('ui', baseClasses, wrapperClasses, labeledClasses, 'button', className);\n    var hasChildren = !childrenUtils.isNil(children);\n    var role = this.computeButtonAriaRole(ElementType);\n    return /*#__PURE__*/React.createElement(Ref, {\n      innerRef: this.ref\n    }, /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes,\n      \"aria-pressed\": toggle ? !!active : undefined,\n      disabled: disabled && ElementType === 'button' || undefined,\n      onClick: this.handleClick,\n      role: role,\n      type: type,\n      tabIndex: tabIndex\n    }), hasChildren && children, !hasChildren && Icon.create(icon, {\n      autoGenerateKey: false\n    }), !hasChildren && content));\n  };\n\n  return Button;\n}(Component);\n\nButton.handledProps = [\"active\", \"animated\", \"as\", \"attached\", \"basic\", \"children\", \"circular\", \"className\", \"color\", \"compact\", \"content\", \"disabled\", \"floated\", \"fluid\", \"icon\", \"inverted\", \"label\", \"labelPosition\", \"loading\", \"negative\", \"onClick\", \"positive\", \"primary\", \"role\", \"secondary\", \"size\", \"tabIndex\", \"toggle\", \"type\"];\nButton.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A button can show it is currently the active user selection. */\n  active: PropTypes.bool,\n\n  /** A button can animate to show hidden content. */\n  animated: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['fade', 'vertical'])]),\n\n  /** A button can be attached to other content. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['left', 'right', 'top', 'bottom'])]),\n\n  /** A basic button is less pronounced. */\n  basic: PropTypes.bool,\n\n  /** Primary content. */\n  children: customPropTypes.every([PropTypes.node, customPropTypes.disallow(['label']), customPropTypes.givenProps({\n    icon: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.object.isRequired, PropTypes.element.isRequired])\n  }, customPropTypes.disallow(['icon']))]),\n\n  /** A button can be circular. */\n  circular: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A button can have different colors */\n  color: PropTypes.oneOf([].concat(SUI.COLORS, ['facebook', 'google plus', 'instagram', 'linkedin', 'twitter', 'vk', 'youtube'])),\n\n  /** A button can reduce its padding to fit into tighter spaces. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A button can show it is currently unable to be interacted with. */\n  disabled: PropTypes.bool,\n\n  /** A button can be aligned to the left or right of its container. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A button can take the width of its container. */\n  fluid: PropTypes.bool,\n\n  /** Add an Icon by name, props object, or pass an <Icon />. */\n  icon: PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.object, PropTypes.element]),\n\n  /** A button can be formatted to appear on dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Add a Label by text, props object, or pass a <Label />. */\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.element]),\n\n  /** A labeled button can format a Label or Icon to appear on the left or right. */\n  labelPosition: PropTypes.oneOf(['right', 'left']),\n\n  /** A button can show a loading indicator. */\n  loading: PropTypes.bool,\n\n  /** A button can hint towards a negative consequence. */\n  negative: PropTypes.bool,\n\n  /**\n   * Called after user's click.\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: PropTypes.func,\n\n  /** A button can hint towards a positive consequence. */\n  positive: PropTypes.bool,\n\n  /** A button can be formatted to show different levels of emphasis. */\n  primary: PropTypes.bool,\n\n  /** The role of the HTML element. */\n  role: PropTypes.string,\n\n  /** A button can be formatted to show different levels of emphasis. */\n  secondary: PropTypes.bool,\n\n  /** A button can have different sizes. */\n  size: PropTypes.oneOf(SUI.SIZES),\n\n  /** A button can receive focus. */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** A button can be formatted to toggle on and off. */\n  toggle: PropTypes.bool,\n\n  /** The type of the HTML element. */\n  type: PropTypes.oneOf(['button', 'submit', 'reset'])\n} : {};\nButton.defaultProps = {\n  as: 'button'\n};\nButton.Content = ButtonContent;\nButton.Group = ButtonGroup;\nButton.Or = ButtonOr;\nButton.create = createShorthandFactory(Button, function (value) {\n  return {\n    content: value\n  };\n});\nexport default Button;","import baseEach from './_baseEach.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nexport default baseMap;\n","import arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseMap from './_baseMap.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nexport default map;\n"],"names":["GraphSwitcher","render","active","this","props","size","positive","onClick","navigate","React","ButtonContent","children","className","content","hidden","visible","classes","rest","getUnhandledProps","ElementType","getElementType","childrenUtils","handledProps","propTypes","ButtonGroup","attached","basic","buttons","color","compact","floated","fluid","icon","inverted","labeled","negative","primary","secondary","toggle","vertical","widths","button","ButtonOr","text","Button","_Component","_this","_len","arguments","length","args","Array","_key","call","apply","concat","ref","createRef","computeElementType","_this$props","label","computeTabIndex","_this$props2","disabled","tabIndex","focus","options","current","handleClick","e","preventDefault","hasIconClass","_this$props3","labelPosition","_proto","prototype","computeButtonAriaRole","role","_this$props4","animated","circular","loading","type","baseClasses","labeledClasses","wrapperClasses","buttonClasses","containerClasses","labelElement","Label","defaultProps","pointing","autoGenerateKey","Ref","R","innerRef","undefined","Icon","hasChildren","Component","as","Content","Group","Or","create","value","collection","iteratee","index","result","isArrayLike","key","isArray"],"sourceRoot":""}