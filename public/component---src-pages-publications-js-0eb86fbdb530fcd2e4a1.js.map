{"version":3,"file":"component---src-pages-publications-js-0eb86fbdb530fcd2e4a1.js","mappings":"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","sources":["webpack://jonaso.de/./src/pages/publications.js"],"sourcesContent":["import 'semantic-ui-css/components/button.min.css'\nimport 'semantic-ui-css/components/grid.min.css'\nimport 'semantic-ui-css/components/icon.min.css'\nimport 'semantic-ui-css/components/item.min.css'\n\nimport React from \"react\"\nimport Button from 'semantic-ui-react/dist/es/elements/Button/Button.js'\nimport Icon from 'semantic-ui-react/dist/es/elements/Icon/Icon.js'\nimport { Bar, BarChart, XAxis, YAxis, Tooltip, LabelList, CartesianGrid, ResponsiveContainer } from 'recharts'\n// import useDetectPrint from 'use-detect-print'\nimport Layout from \"../components/layout\"\nimport { spacer, noMarginGrid } from \"../common\"\nimport { Seo } from \"../components/Seo\"\n\n// replacement for Responsive component from semantic-ui-react\n// see: https://react.semantic-ui.com/migration-guide/\n// https://github.com/artsy/fresnel\nimport { createMedia } from \"@artsy/fresnel\"\nconst { MediaContextProvider, Media } = createMedia({\n  // breakpoints values can be either strings or integers\n  breakpoints: {\n    sm: 0,\n    md: 768,\n    lg: 990,\n  },\n})\n\nconst styles = {\n  menu: {\n    textAlign: 'center',\n    fontSize: '1.5em',\n    lineHeight: '2em',\n    marginBottom: '1em',\n    marginTop: '0.5em',\n  },\n}\n\n// const _REFERENCES_PER_YEAR = \"https://raw.githubusercontent.com/joetm/jonaso/master/public/static/references.json\"\n// const _REFERENCES_PER_TYPE = \"https://raw.githubusercontent.com/joetm/jonaso/master/public/static/references-type.json\"\nconst _REFERENCES_PER_YEAR = \"/static/references.json\"\nconst _REFERENCES_PER_TYPE = \"/static/references-type.json\"\n\n\nexport function Head() {\n  return (\n    <Seo title=\"Publications // jonaso.de\">\n      <link id=\"canonical\" rel=\"canonical\" href=\"https://www.jonaso.de/publications\" />\n    </Seo>\n  )\n} //\n\n/**\n * Group publications by year\n * @param {Array} pubList - List of publications\n * @returns {Object} categorizedList - Categorized list of publications\n */\nfunction categorizeListPerYear(pubList) {\n    if (!pubList) {\n        return {}\n    }\n    const annotatedList = pubList.map(text => {\n        const yRegex = /20\\d\\d/\n        const found = text.match(yRegex)\n        return {__html: text.replace('publications_bib.html', '/static/publications_bib.html'), year: found[0] || 'forthcoming'}\n    })\n    const categorizedList = {}\n    annotatedList.forEach(obj => {\n      if (categorizedList[obj.year]) {\n          categorizedList[obj.year].push(obj)\n      } else {\n          categorizedList[obj.year] = [obj]\n      }\n    })\n    return categorizedList\n} //\n\n\nconst PdfPubsButton = () => (\n  <div style={{float:'right',marginTop:'0.5em'}}>\n    <a title=\"Download publications as pdf\" href=\"/cv/oppenlaender-publications.pdf\" target=\"_blank\">\n      <Icon size='large' name='file pdf outline' />\n    </a>\n  </div>\n) //\n\nconst SwitchBtn = ({active, switchPubView}) => (\n  <div className=\"ui buttons\">\n    <Button disabled={!active} positive={!active}\n      onClick={switchPubView}\n      title=\"Publications per year\"\n    >YEAR</Button>\n    <div className=\"or\"></div>\n    <Button disabled={active} positive={active}\n      onClick={switchPubView}\n      title=\"Publications per type\"\n    >TYPE</Button>\n  </div>\n)\n\n\nclass Publications extends React.Component {\n  state = {\n    references: {},\n    referencesDetail: {},\n    showing: 'type',\n    graphdata: {},\n  }\n  componentDidMount = () => {\n    // fetch references per publication year\n    fetch(_REFERENCES_PER_YEAR)\n    .then(response => response.json())\n    .then(refs => {\n      const categorizedRefs = categorizeListPerYear(refs)\n\n      // const refMapping = JSON.parse(JSON.stringify(references))\n      const refsByYear = []\n      let maxRefsByYear = 0\n      for (let y in categorizedRefs) {\n        const c = categorizedRefs[y].length\n        refsByYear.push({year: y, num: c})\n        if (c > maxRefsByYear) {\n          maxRefsByYear = c\n        }\n      }\n\n      maxRefsByYear = maxRefsByYear + 2\n      const tickArray = []\n      for (let i = 0; i <= maxRefsByYear; i+=2) {\n        tickArray.push(i)\n      }\n      // console.log(tickArray)\n\n      const graphdata = {refsByYear, tickArray}\n      this.setState({\n      \treferences: categorizedRefs,\n      \tgraphdata\n      })\n    })\n    // fetch references per publication type\n    fetch(_REFERENCES_PER_TYPE)\n    .then(response => response.json())\n    .then(referencesDetail => {\n      const keys = Object.keys(referencesDetail)\n      for (const key of keys) {\n        referencesDetail[key].map(obj => {\n          obj.title = obj.title.replace('publications_bib.html', '/static/publications_bib.html')\n          return obj\n        })\n      }\n      this.setState({ referencesDetail })\n    })\n  }\n  switchPubView = () => {\n    if (this.state.showing === 'type') {\n      this.setState({'showing': 'year'})\n    } else {\n      this.setState({'showing': 'type'})\n    }\n  }\n  render() {\n    const { references, referencesDetail, showing, graphdata } = this.state\n    const keysYear = Object.keys(references).reverse()\n    const keysType = Object.keys(referencesDetail).reverse()\n    // keysType.sort() // sort alphabetically\n\n    const typeIsActive = showing === 'type'\n\n    // custom sort order\n    let customSortOrder = []\n    if (keysType.length > 0) {\n      customSortOrder = [\n        \"Journal Articles\",\n        \"Conference Papers\",\n        \"Workshops\",\n        \"Workshop Proceedings\",\n        \"Doctoral Consortia\",\n        \"Conference Posters and Position Papers\",\n        \"Pre-prints and Working Papers\",\n        \"Theses and Seminal Papers\",\n      ]\n    }\n\n    return (\n      <Layout>\n      <div className=\"ui container\">\n\n        <ResponsiveContainer width=\"100%\" height={150}>\n          <BarChart data={graphdata.refsByYear}>\n            <XAxis\n              dataKey=\"year\"\n            />\n            <YAxis\n              type=\"number\"\n              domain={[0, 'dataMax']}\n              ticks={graphdata.tickArray}\n              allowDecimals={false}\n            />\n            <Tooltip />\n            <CartesianGrid stroke=\"#eee\" strokeDasharray=\"5 5\"/>\n            <Bar dataKey=\"num\" fill=\"#8CE6A9\">\n              <LabelList dataKey=\"num\" position=\"top\" />\n            </Bar>\n          </BarChart>\n        </ResponsiveContainer>\n\n        <div id=\"publicationButtons\" style={styles.menu}>\n          <PdfPubsButton />\n          <SwitchBtn\n            active={typeIsActive}\n            switchPubView={this.switchPubView}\n          />\n        </div>\n\n        <div className=\"ui container\" id=\"publications-type\" style={{display: typeIsActive ? 'block' : 'none'}}>\n\n              {\n                customSortOrder.map(typ => {\n                  return (\n                    <div className=\"ui grid\" key={typ} style={noMarginGrid}>\n                        <div className=\"row\">\n                          <h1>{typ}</h1>\n                        </div>\n                        {\n                          referencesDetail[typ] && referencesDetail[typ].map((ref, index) => {\n                            let title = ref.title.replace('Jonas Oppenlaender', '<strong>Jonas Oppenlaender</strong>')\n                            title = title.replace('Jonas Oppenländer', '<strong>Jonas Oppenländer</strong>')\n                            const icostr = title.indexOf('.pdf') === -1 ? 'file outline' : 'file alternate outline'\n                            return (\n                              <div className=\"row\" key={index}>\n                                <div className=\"two wide column\">\n                                  <MediaContextProvider>\n                                    <Media at=\"sm\">\n                                      <Icon color=\"grey\" size=\"large\" name={icostr} />\n                                    </Media>\n                                    <Media at=\"md\">\n                                      <Icon color=\"grey\" size=\"huge\" name={icostr} />\n                                    </Media>\n                                    <Media greaterThanOrEqual=\"lg\">\n                                      <Icon color=\"grey\" size=\"big\" name={icostr} />\n                                    </Media>\n                                    </MediaContextProvider>\n                                </div>\n                                <div className=\"fourteen wide column\">\n                                  <div className=\"item\">\n                                    <div className=\"content\">\n                                      <div className=\"header\" dangerouslySetInnerHTML={{__html: title}}></div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            )\n                          })\n                        }\n                    </div>\n                  )\n                })\n              }\n\n            <div style={spacer}></div>\n\n        </div>\n\n        <div className=\"ui container\" id=\"publications-year\" style={{display: typeIsActive ? 'none' : 'block'}}>\n\n              {\n                keysYear.map(year => {\n                  return (\n                    <div className=\"ui grid\" key={year} style={noMarginGrid}>\n                        <div className=\"row\">\n                          <h1>{year}</h1>\n                        </div>\n                        {\n                          references[year].map((item, index) => {\n                            item.__html = item.__html.replace('Jonas Oppenlaender', '<strong>Jonas Oppenlaender</strong>')\n                            item.__html = item.__html.replace('Jonas Oppenländer', '<strong>Jonas Oppenländer</strong>')\n                            item.__html = item.__html.replace('--', '–')\n                            const icostr = item.__html.indexOf('.pdf') === -1 ? 'file outline' : 'file alternate outline'\n                            return (\n                              <div className=\"row\" key={index}>\n                                <div className=\"two wide column\">\n                                  <MediaContextProvider>\n                                    <Media at=\"sm\">\n                                      <Icon color=\"grey\" size=\"large\" name={icostr} />\n                                    </Media>\n                                    <Media at=\"md\">\n                                      <Icon color=\"grey\" size=\"huge\" name={icostr} />\n                                    </Media>\n                                    <Media greaterThanOrEqual=\"lg\">\n                                      <Icon color=\"grey\" size=\"big\" name={icostr} />\n                                    </Media>\n                                  </MediaContextProvider>\n                                </div>\n                                <div className=\"fourteen wide column\">\n                                  <div className=\"item\">\n                                    <div className=\"content\">\n                                      <div className=\"header\" dangerouslySetInnerHTML={item}></div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            )\n                          })\n                        }\n                    </div>\n                  )\n                })\n              }\n\n            <div style={spacer}></div>\n\n        </div>\n\n      </div>\n      </Layout>\n    )\n  }\n}\n\nexport default Publications\n"],"names":["MediaContextProvider","Media","createMedia","breakpoints","sm","md","lg","styles","menu","textAlign","fontSize","lineHeight","marginBottom","marginTop","_REFERENCES_PER_YEAR","_REFERENCES_PER_TYPE","Head","title","id","rel","href","categorizeListPerYear","pubList","annotatedList","map","text","found","match","__html","replace","year","categorizedList","forEach","obj","push","PdfPubsButton","style","float","target","size","name","SwitchBtn","active","switchPubView","className","disabled","positive","onClick","Publications","state","references","referencesDetail","showing","graphdata","componentDidMount","fetch","then","response","json","refs","categorizedRefs","refsByYear","maxRefsByYear","y","c","length","num","tickArray","i","setState","keys","Object","key","render","this","keysYear","reverse","typeIsActive","customSortOrder","width","height","data","dataKey","type","domain","ticks","allowDecimals","stroke","strokeDasharray","fill","position","display","typ","noMarginGrid","ref","index","icostr","indexOf","at","color","greaterThanOrEqual","dangerouslySetInnerHTML","spacer","item","React"],"sourceRoot":""}