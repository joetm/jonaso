{"version":3,"file":"8618fcf1295b9542ef88300cabf834c1ebd1a642.js","mappings":"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","sources":["webpack://jonaso.de/./node_modules/camelcase/index.js","webpack://jonaso.de/./node_modules/semantic-ui-react/dist/es/elements/Header/HeaderSubheader.js","webpack://jonaso.de/./node_modules/semantic-ui-react/dist/es/elements/Header/HeaderContent.js","webpack://jonaso.de/./node_modules/semantic-ui-react/dist/es/elements/Header/Header.js","webpack://jonaso.de/../src/image-utils.ts","webpack://jonaso.de/../src/components/hooks.ts","webpack://jonaso.de/../src/components/picture.tsx","webpack://jonaso.de/../src/components/layout-wrapper.tsx","webpack://jonaso.de/../src/components/placeholder.tsx","webpack://jonaso.de/../src/components/main-image.tsx","webpack://jonaso.de/../src/components/gatsby-image.browser.tsx","webpack://jonaso.de/../src/components/gatsby-image.server.tsx","webpack://jonaso.de/../src/components/static-image.server.tsx","webpack://jonaso.de/../src/components/static-image.tsx","webpack://jonaso.de/./src/common.js","webpack://jonaso.de/./src/components/ArtPageSwitcher.js","webpack://jonaso.de/./src/components/ArtHeader.js","webpack://jonaso.de/./node_modules/react-masonry-css/dist/react-masonry-css.module.js","webpack://jonaso.de/./src/components/breakpoints.js","webpack://jonaso.de/./src/components/Artwork.js","webpack://jonaso.de/./src/components/MasonryGallery.js","webpack://jonaso.de/./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack://jonaso.de/./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://jonaso.de/./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack://jonaso.de/./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack://jonaso.de/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://jonaso.de/./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js"],"sourcesContent":["'use strict';\n\nvar preserveCamelCase = function preserveCamelCase(string) {\n  var isLastCharLower = false;\n  var isLastCharUpper = false;\n  var isLastLastCharUpper = false;\n\n  for (var i = 0; i < string.length; i++) {\n    var character = string[i];\n\n    if (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n      string = string.slice(0, i) + '-' + string.slice(i);\n      isLastCharLower = false;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = true;\n      i++;\n    } else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n      string = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = false;\n      isLastCharLower = true;\n    } else {\n      isLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n    }\n  }\n\n  return string;\n};\n\nvar camelCase = function camelCase(input, options) {\n  if (!(typeof input === 'string' || Array.isArray(input))) {\n    throw new TypeError('Expected the input to be `string | string[]`');\n  }\n\n  options = Object.assign({\n    pascalCase: false\n  }, options);\n\n  var postProcess = function postProcess(x) {\n    return options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n  };\n\n  if (Array.isArray(input)) {\n    input = input.map(function (x) {\n      return x.trim();\n    }).filter(function (x) {\n      return x.length;\n    }).join('-');\n  } else {\n    input = input.trim();\n  }\n\n  if (input.length === 0) {\n    return '';\n  }\n\n  if (input.length === 1) {\n    return options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n  }\n\n  var hasUpperCase = input !== input.toLowerCase();\n\n  if (hasUpperCase) {\n    input = preserveCamelCase(input);\n  }\n\n  input = input.replace(/^[_.\\- ]+/, '').toLowerCase().replace(/[_.\\- ]+(\\w|$)/g, function (_, p1) {\n    return p1.toUpperCase();\n  }).replace(/\\d+(\\w|$)/g, function (m) {\n    return m.toUpperCase();\n  });\n  return postProcess(input);\n};\n\nmodule.exports = camelCase; // TODO: Remove this for the next major release\n\nmodule.exports.default = camelCase;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * Headers may contain subheaders.\n */\n\nfunction HeaderSubheader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('sub header', className);\n  var rest = getUnhandledProps(HeaderSubheader, props);\n  var ElementType = getElementType(HeaderSubheader, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nHeaderSubheader.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nHeaderSubheader.create = createShorthandFactory(HeaderSubheader, function (content) {\n  return {\n    content: content\n  };\n});\nexport default HeaderSubheader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * Header content wraps the main content when there is an adjacent Icon or Image.\n */\n\nfunction HeaderContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('content', className);\n  var rest = getUnhandledProps(HeaderContent, props);\n  var ElementType = getElementType(HeaderContent, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nHeaderContent.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nexport default HeaderContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useValueAndKey, useTextAlignProp, useKeyOrValueAndKey, useKeyOnly } from '../../lib';\nimport Icon from '../Icon';\nimport Image from '../Image';\nimport HeaderSubheader from './HeaderSubheader';\nimport HeaderContent from './HeaderContent';\n/**\n * A header provides a short summary of content\n */\n\nfunction Header(props) {\n  var attached = props.attached,\n      block = props.block,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      content = props.content,\n      disabled = props.disabled,\n      dividing = props.dividing,\n      floated = props.floated,\n      icon = props.icon,\n      image = props.image,\n      inverted = props.inverted,\n      size = props.size,\n      sub = props.sub,\n      subheader = props.subheader,\n      textAlign = props.textAlign;\n  var classes = cx('ui', color, size, useKeyOnly(block, 'block'), useKeyOnly(disabled, 'disabled'), useKeyOnly(dividing, 'dividing'), useValueAndKey(floated, 'floated'), useKeyOnly(icon === true, 'icon'), useKeyOnly(image === true, 'image'), useKeyOnly(inverted, 'inverted'), useKeyOnly(sub, 'sub'), useKeyOrValueAndKey(attached, 'attached'), useTextAlignProp(textAlign), 'header', className);\n  var rest = getUnhandledProps(Header, props);\n  var ElementType = getElementType(Header, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  var iconElement = Icon.create(icon, {\n    autoGenerateKey: false\n  });\n  var imageElement = Image.create(image, {\n    autoGenerateKey: false\n  });\n  var subheaderElement = HeaderSubheader.create(subheader, {\n    autoGenerateKey: false\n  });\n\n  if (iconElement || imageElement) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), iconElement || imageElement, (content || subheaderElement) && /*#__PURE__*/React.createElement(HeaderContent, null, content, subheaderElement));\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), content, subheaderElement);\n}\n\nHeader.handledProps = [\"as\", \"attached\", \"block\", \"children\", \"className\", \"color\", \"content\", \"disabled\", \"dividing\", \"floated\", \"icon\", \"image\", \"inverted\", \"size\", \"sub\", \"subheader\", \"textAlign\"];\nHeader.Content = HeaderContent;\nHeader.Subheader = HeaderSubheader;\nexport default Header;","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { Fragment, FunctionComponent } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<ILayoutWrapperProps> =\n  function LayoutWrapper({ children, ...props }) {\n    return (\n      <Fragment>\n        <Sizer {...props} />\n        {children}\n\n        {SERVER ? <NativeScriptLoading /> : null}\n      </Fragment>\n    )\n  }\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","\nconst styles = {\n    nobottommargin: {\n        marginBottom: 0,\n        paddingBottom: 0,\n    },\n    notopmargin: {\n        marginTop: 0,\n        paddingTop: 0,\n    },\n    nobold: {\n        fontWeight: 'normal',\n    },\n    spacer: {\n        height: '5em',\n    },\n    noMarginGrid: {\n      marginRight: 0,\n      marginLeft: 0,\n    },\n}\n\nexport default styles\n\nexport function sortByKey(array, key) {\n    return array.sort(function(a, b) {\n        var x = a[key]; var y = b[key];\n        return ((x > y) ? -1 : ((x < y) ? 1 : 0));\n    });\n}\n\nexport const nobottommargin = styles.nobottommargin\nexport const notopmargin = styles.notopmargin\nexport const nobold = styles.nobold\nexport const spacer = styles.spacer\nexport const noMarginGrid = styles.noMarginGrid\n","\nimport React from \"react\"\nimport { Menu } from 'semantic-ui-react'\nimport { navigate } from 'gatsby'\n\nconst ArtPageSwitcher = ({generator}) => {\n\tconst handleMenuClick = (e, { name, folder }) => {\n\t\tnavigate(`/artworks/${folder}`)\n\t}\n\treturn (\n\t   \t<React.Fragment>\n\n\t      <section style={{textAlign:'center', marginBottom:'2em'}}>\n\n\t\t\t<Menu pointing secondary fluid widths={7}>\t\t\t\n    \t\t    <Menu.Item\n        \t\t  name='Stable Diffusion'\n    \t\t      folder='stablediffusion'\n\t\t          active={generator === 'Stable Diffusion'}\n\t\t\t\t  onClick={handleMenuClick}\n    \t\t    />\n    \t\t    <Menu.Item\n        \t\t  name='DALL-E 2'\n    \t\t      folder='dalle'\n\t\t          active={generator === 'DALL-E'}\n\t\t\t\t  onClick={handleMenuClick}\n    \t\t    />\n\t\t        <Menu.Item\n    \t\t      name='Midjourney'\n    \t\t      folder='midjourney'\n        \t\t  active={generator === 'Midjourney'}\n\t\t\t\t  onClick={handleMenuClick}\n\t\t        />\n\t\t        <Menu.Item\n    \t\t      name='Latent Diffusion'\n    \t\t      folder='latent-diffusion'\n        \t\t  active={generator === 'Latent Diffusion'}\n\t\t\t\t  onClick={handleMenuClick}\n\t\t        />\n\t\t        <Menu.Item\n    \t\t      name='CLIP Guided Diffusion'\n    \t\t      folder='CLIP-guided-diffusion'\n        \t\t  active={generator === 'CLIP Guided Diffusion'}\n\t\t\t\t  onClick={handleMenuClick}\n\t\t        />\n\t\t        <Menu.Item\n    \t\t      name='VQGAN-CLIP'\n    \t\t      folder='vqganclip'\n        \t\t  active={generator === 'VQGAN-CLIP'}\n\t\t\t\t  onClick={handleMenuClick}\n\t\t        />\n\t\t        <Menu.Item\n    \t\t      name='Misc.'\n    \t\t      folder='misc'\n        \t\t  active={generator === 'Others'}\n\t\t\t\t  onClick={handleMenuClick}\n\t\t        />\n      \t\t</Menu>\n\n\t\t</section>\n\n\t\t{/*\n        <Divider horizontal>Selected Images</Divider>\n\t\t*/}\n\n      </React.Fragment>\n\t)\n}\n\nexport default ArtPageSwitcher\n","\nimport React from \"react\"\nimport { Container, Header } from 'semantic-ui-react'\nimport Layout from \"./layout\"\nimport { Title, Link, Meta } from \"react-head\"\nimport ArtPageSwitcher from './ArtPageSwitcher'\n\n\nconst ArtHeader = ({generator, byline, totalCount}) => {\n\treturn (\n\t   \t<Layout>\n        <Meta charSet=\"utf-8\" />\n        <Title>\n        \t{generator === 'AI-generated Artworks' ? generator : `${generator} Art` } {'//'} jonaso.de\n        </Title>\n        <Link rel=\"canonical\" href=\"https://www.jonaso.de/artworks\" />\n\t      <Container>\n\t\t\t\t\t\t<Header as='h1' textAlign='center' content='AI-generated Artworks' />\n\t\t        <section style={{textAlign:'center', marginBottom:'2em'}}>\n\t\t\t        <p>\n\t\t        \t{\n\t\t        \t\tbyline ?\n\t\t        \t\t\tbyline\n\t\t        \t\t\t\t:\n\t\t\t        \t\t`${totalCount} images`\n\t\t        \t}\n\t\t\t\t\t\t\t</p>\n\t\t        </section>\n\n\t\t\t\t<ArtPageSwitcher generator={generator} />\n\n\t      </Container>\n        </Layout>\n\t)\n}\n\nexport default ArtHeader\n","import _classCallCheck from \"/var/www/academic-site/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/var/www/academic-site/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/var/www/academic-site/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/var/www/academic-site/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _possibleConstructorReturn from \"/var/www/academic-site/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\";\nimport _getPrototypeOf from \"/var/www/academic-site/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar defaultProps = {\n  breakpointCols: undefined,\n  // optional, number or object { default: number, [key: number]: number }\n  className: undefined,\n  // required, string\n  columnClassName: undefined,\n  // optional, string\n  // Any React children. Typically an array of JSX items\n  children: undefined,\n  // Custom attributes, however it is advised against\n  // using these to prevent unintended issues and future conflicts\n  // ...any other attribute, will be added to the container\n  columnAttrs: undefined,\n  // object, added to the columns\n  // Deprecated props\n  // The column property is deprecated.\n  // It is an alias of the `columnAttrs` property\n  column: undefined\n};\nvar DEFAULT_COLUMNS = 2;\n\nvar Masonry = /*#__PURE__*/function (_React$Component) {\n  _inherits(Masonry, _React$Component);\n\n  var _super = _createSuper(Masonry);\n\n  function Masonry(props) {\n    var _this;\n\n    _classCallCheck(this, Masonry);\n\n    _this = _super.call(this, props); // Correct scope for when methods are accessed externally\n\n    _this.reCalculateColumnCount = _this.reCalculateColumnCount.bind(_assertThisInitialized(_this));\n    _this.reCalculateColumnCountDebounce = _this.reCalculateColumnCountDebounce.bind(_assertThisInitialized(_this)); // default state\n\n    var columnCount;\n\n    if (_this.props.breakpointCols && _this.props.breakpointCols.default) {\n      columnCount = _this.props.breakpointCols.default;\n    } else {\n      columnCount = parseInt(_this.props.breakpointCols) || DEFAULT_COLUMNS;\n    }\n\n    _this.state = {\n      columnCount: columnCount\n    };\n    return _this;\n  }\n\n  _createClass(Masonry, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.reCalculateColumnCount(); // window may not be available in some environments\n\n      if (window) {\n        window.addEventListener('resize', this.reCalculateColumnCountDebounce);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.reCalculateColumnCount();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (window) {\n        window.removeEventListener('resize', this.reCalculateColumnCountDebounce);\n      }\n    }\n  }, {\n    key: \"reCalculateColumnCountDebounce\",\n    value: function reCalculateColumnCountDebounce() {\n      var _this2 = this;\n\n      if (!window || !window.requestAnimationFrame) {\n        // IE10+\n        this.reCalculateColumnCount();\n        return;\n      }\n\n      if (window.cancelAnimationFrame) {\n        // IE10+\n        window.cancelAnimationFrame(this._lastRecalculateAnimationFrame);\n      }\n\n      this._lastRecalculateAnimationFrame = window.requestAnimationFrame(function () {\n        _this2.reCalculateColumnCount();\n      });\n    }\n  }, {\n    key: \"reCalculateColumnCount\",\n    value: function reCalculateColumnCount() {\n      var windowWidth = window && window.innerWidth || Infinity;\n      var breakpointColsObject = this.props.breakpointCols; // Allow passing a single number to `breakpointCols` instead of an object\n\n      if (typeof breakpointColsObject !== 'object') {\n        breakpointColsObject = {\n          default: parseInt(breakpointColsObject) || DEFAULT_COLUMNS\n        };\n      }\n\n      var matchedBreakpoint = Infinity;\n      var columns = breakpointColsObject.default || DEFAULT_COLUMNS;\n\n      for (var breakpoint in breakpointColsObject) {\n        var optBreakpoint = parseInt(breakpoint);\n        var isCurrentBreakpoint = optBreakpoint > 0 && windowWidth <= optBreakpoint;\n\n        if (isCurrentBreakpoint && optBreakpoint < matchedBreakpoint) {\n          matchedBreakpoint = optBreakpoint;\n          columns = breakpointColsObject[breakpoint];\n        }\n      }\n\n      columns = Math.max(1, parseInt(columns) || 1);\n\n      if (this.state.columnCount !== columns) {\n        this.setState({\n          columnCount: columns\n        });\n      }\n    }\n  }, {\n    key: \"itemsInColumns\",\n    value: function itemsInColumns() {\n      var currentColumnCount = this.state.columnCount;\n      var itemsInColumns = new Array(currentColumnCount); // Force children to be handled as an array\n\n      var items = React.Children.toArray(this.props.children);\n\n      for (var i = 0; i < items.length; i++) {\n        var columnIndex = i % currentColumnCount;\n\n        if (!itemsInColumns[columnIndex]) {\n          itemsInColumns[columnIndex] = [];\n        }\n\n        itemsInColumns[columnIndex].push(items[i]);\n      }\n\n      return itemsInColumns;\n    }\n  }, {\n    key: \"renderColumns\",\n    value: function renderColumns() {\n      var _this$props2 = this.props,\n          column = _this$props2.column,\n          _this$props2$columnAt = _this$props2.columnAttrs,\n          columnAttrs = _this$props2$columnAt === void 0 ? {} : _this$props2$columnAt,\n          columnClassName = _this$props2.columnClassName;\n      var childrenInColumns = this.itemsInColumns();\n      var columnWidth = \"\".concat(100 / childrenInColumns.length, \"%\");\n      var className = columnClassName;\n\n      if (className && typeof className !== 'string') {\n        this.logDeprecated('The property \"columnClassName\" requires a string'); // This is a deprecated default and will be removed soon.\n\n        if (typeof className === 'undefined') {\n          className = 'my-masonry-grid_column';\n        }\n      }\n\n      var columnAttributes = _objectSpread(_objectSpread(_objectSpread({}, column), columnAttrs), {}, {\n        style: _objectSpread(_objectSpread({}, columnAttrs.style), {}, {\n          width: columnWidth\n        }),\n        className: className\n      });\n\n      return childrenInColumns.map(function (items, i) {\n        return /*#__PURE__*/React.createElement(\"div\", _extends({}, columnAttributes, {\n          key: i\n        }), items);\n      });\n    }\n  }, {\n    key: \"logDeprecated\",\n    value: function logDeprecated(message) {\n      console.error('[Masonry]', message);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          breakpointCols = _this$props.breakpointCols,\n          columnClassName = _this$props.columnClassName,\n          columnAttrs = _this$props.columnAttrs,\n          column = _this$props.column,\n          className = _this$props.className,\n          rest = _objectWithoutProperties(_this$props, [\"children\", \"breakpointCols\", \"columnClassName\", \"columnAttrs\", \"column\", \"className\"]);\n\n      var classNameOutput = className;\n\n      if (typeof className !== 'string') {\n        this.logDeprecated('The property \"className\" requires a string'); // This is a deprecated default and will be removed soon.\n\n        if (typeof className === 'undefined') {\n          classNameOutput = 'my-masonry-grid';\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", _extends({}, rest, {\n        className: classNameOutput\n      }), this.renderColumns());\n    }\n  }]);\n\n  return Masonry;\n}(React.Component);\n\nMasonry.defaultProps = defaultProps;\nexport default Masonry;","\nconst breakpointColumnsObj = {\n  1200: 4,\n  980: 3,\n  700: 2,\n  default: 5,\n};\n\nexport default breakpointColumnsObj;\n","\nimport React from \"react\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nconst Artwork = ({image}) => {\n\tif (!image) {\n\t\treturn\n\t}\n\treturn (\n\t\t<GatsbyImage\n\t      image={image}\n\t      alt=\"\"\n\t      layout=\"constrained\"\n\t      placeholder=\"dominantColor\"\n\t      loading=\"lazy\"\n    />\n\t)\n}\n\nexport default Artwork\n","\nimport React from \"react\"\nimport Masonry from 'react-masonry-css'\nimport { getImage } from \"gatsby-plugin-image\"\nimport breakpointColumnsObj from './breakpoints.js' \nimport Artwork from './Artwork'\n\nconst MasonryGallery = ({images}) => {\n\treturn (\n\t\t        <section style={{textAlign:'center', marginLeft: '30px', marginRight: '30px', maxWidth: '2000px', margin: 'auto'}}>\n\t\t\t\t\t\t\t<Masonry\n\t\t\t\t\t\t\t  breakpointCols={breakpointColumnsObj}\n\t\t\t\t\t\t\t  className=\"my-masonry-grid\"\n\t\t\t\t\t\t\t  columnClassName=\"my-masonry-grid_column\">\n\t\t\t\t\t\t\t  \t{\n\t\t\t\t\t\t\t  \t\timages\n\t\t\t\t\t\t\t  \t\t\t.map(img => {\n\t\t\t\t\t\t\t  \t\t\t\t  let key = img?.node?.childImageSharp?.gatsbyImageData?.images?.fallback?.src\n\t\t\t\t\t\t\t  \t\t\t\t  let imgnode = getImage(img.node)\n\t\t\t\t\t\t\t  \t\t\t\t  if (!imgnode) {\n\t\t\t\t\t\t\t  \t\t\t\t  \treturn ''\n\t\t\t\t\t\t\t  \t\t\t\t  }\n\t\t\t\t\t\t\t\t\t  \t\t\treturn (\n\t\t\t\t\t\t\t\t\t  \t\t\t\t<Artwork\n\t\t\t\t\t\t\t\t\t  \t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\t\t  \t\t\t\t\timage={imgnode}\n\t\t\t\t\t\t\t\t\t  \t\t\t\t/>\n\t\t\t\t\t\t\t\t\t  \t\t\t)\n\t\t\t\t\t\t\t\t  \t\t})\n\t\t\t\t\t\t\t  \t}\n\t\t\t\t\t\t\t</Masonry>\n\t\t        </section>\n\t)\n}\n\nexport default MasonryGallery\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}"],"names":["camelCase","input","options","Array","isArray","TypeError","Object","assign","pascalCase","x","map","trim","filter","length","join","toUpperCase","toLowerCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","_","p1","m","charAt","module","exports","HeaderSubheader","props","children","className","content","classes","rest","getUnhandledProps","ElementType","getElementType","childrenUtils","handledProps","create","HeaderContent","Header","attached","block","color","disabled","dividing","floated","icon","image","inverted","size","sub","subheader","textAlign","iconElement","Icon","autoGenerateKey","imageElement","Image","subheaderElement","Content","Subheader","height","prototype","node","images","_node$images","fallback","_node$images$fallback","src","Boolean","gatsbyImageData","gatsbyImage","childImageSharp","_node$childImageSharp","format","isLoading","isLoaded","loading","style","shouldLoad","opacity","placeholder","layout","width","backgroundColor","objectFit","objectPosition","wrapperStyle","position","top","left","bottom","right","transition","sources","fallbackImage","paddingTop","maxWidth","display","React","alt","role","Fragment","Sizer","q","P","H","srcSet","decoding","undefined","t","sizes","media","type","key","propTypes","PropTypes","Picture","displayName","isRequired","e","Placeholder","_Picture$propTypes","propName","componentName","MainImage","altValidator","Set","onError","as","preactClass","class","onStartLoad","onLoad","overflow","getWrapperProps","wStyle","wClass","wrapperProps","useRef","useMemo","JSON","stringify","sizer","getSizer","useEffect","renderImageToStringPromise","import","then","renderImageToString","swapPlaceholderImage","renderImage","root","current","querySelector","ssrImage","hasNativeLazyLoadSupport","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","onLoadListener","imageCache","add","cacheKey","has","innerHTML","animationFrame","requestAnimationFrame","cleanupCallback","cancelAnimationFrame","useLayoutEffect","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ae","memo","warn","GatsbyImageHydrator","GatsbyImage","se","checkDimensionProps","validLayouts","Error","GatsbyImageBrowser","__error","imageData","__imageData","console","StaticImage","styles","nobottommargin","marginBottom","paddingBottom","notopmargin","marginTop","nobold","fontWeight","spacer","noMarginGrid","marginRight","marginLeft","sortByKey","array","sort","a","b","y","generator","handleMenuClick","name","folder","navigate","Menu","pointing","secondary","fluid","widths","active","onClick","byline","totalCount","Meta","charSet","Title","Link","rel","href","Container","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","valueOf","call","_isNativeReflectConstruct","result","Super","NewTarget","this","constructor","arguments","apply","_objectWithoutProperties","source","excluded","target","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_extends","hasOwnProperty","ownKeys","object","enumerableOnly","symbols","sym","getOwnPropertyDescriptor","enumerable","push","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","defaultProps","breakpointCols","columnClassName","columnAttrs","column","Masonry","_React$Component","_super","_this","columnCount","reCalculateColumnCount","bind","reCalculateColumnCountDebounce","default","parseInt","state","window","_this2","_lastRecalculateAnimationFrame","windowWidth","innerWidth","Infinity","breakpointColsObject","matchedBreakpoint","columns","breakpoint","optBreakpoint","Math","max","setState","currentColumnCount","itemsInColumns","items","columnIndex","_this$props2","_this$props2$columnAt","childrenInColumns","columnWidth","concat","logDeprecated","columnAttributes","message","error","_this$props","classNameOutput","renderColumns","G","margin","breakpointColumnsObj","img","imgnode","getImage","_classCallCheck","instance","Constructor","_defineProperties","descriptor","_createClass","protoProps","staticProps","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","_typeof","Symbol","iterator","_possibleConstructorReturn","self","assertThisInitialized"],"sourceRoot":""}